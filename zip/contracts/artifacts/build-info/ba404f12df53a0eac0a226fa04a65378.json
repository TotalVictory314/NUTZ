{
	"id": "ba404f12df53a0eac0a226fa04a65378",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NUTZStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract NUTZStaking is ReentrancyGuard, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public nutzToken;\r\n    uint256 public constant STARTING_ANNUAL_RETURN = 25; // 25% initially\r\n    uint256 public constant MINIMUM_ANNUAL_RETURN = 5; // 5% is the minimum\r\n    uint256 public constant MINT_RATE_DECREASE = 5; // Decrease rate by 5%\r\n    uint256 public constant TOKENS_PER_DECREASE = 250000 * (10 ** 18); // For every 250,000 tokens minted\r\n    uint256 public totalStaked;\r\n    uint256 public totalRewardsMinted;\r\n\r\n    struct Stake {\r\n        uint256 amount;\r\n        uint256 rewardRate;\r\n        uint256 stakingTime;\r\n    }\r\n\r\n    mapping(address => Stake) public stakes;\r\n\r\n    event Staked(address indexed user, uint256 amount, uint256 rewardRate);\r\n    event Unstaked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n    event TokensBurned(uint256 amount);\r\n\r\n    constructor(address _nutzTokenAddress, address _owner) Ownable(_owner) {\r\n        require(_nutzTokenAddress != address(0), \"Token address cannot be the zero address\");\r\n        nutzToken = IERC20(_nutzTokenAddress);\r\n    }\r\n\r\n    function stakeTokens(uint256 _amount) external nonReentrant {\r\n        require(_amount > 0, \"Cannot stake 0 tokens\");\r\n        require(nutzToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\r\n\r\n        uint256 currentRewardRate = getCurrentRewardRate();\r\n        stakes[msg.sender] = Stake(_amount, currentRewardRate, block.timestamp);\r\n        totalStaked = totalStaked.add(_amount);\r\n\r\n        emit Staked(msg.sender, _amount, currentRewardRate);\r\n    }\r\n\r\n    function unstakeAndClaimRewards() external nonReentrant {\r\n        Stake storage userStake = stakes[msg.sender];\r\n        require(userStake.amount > 0, \"No tokens to unstake\");\r\n\r\n        uint256 reward = calculateReward(msg.sender);\r\n        uint256 burnAmount = reward.mul(3).div(2); // Burn rate of 1.5x the reward\r\n        nutzToken.transfer(address(nutzToken), burnAmount); // Assuming NUTZToken has a burn function\r\n\r\n        require(nutzToken.transfer(msg.sender, userStake.amount.add(reward)), \"Transfer failed\");\r\n\r\n        totalStaked = totalStaked.sub(userStake.amount);\r\n        totalRewardsMinted = totalRewardsMinted.add(reward);\r\n\r\n        delete stakes[msg.sender];\r\n\r\n        emit Unstaked(msg.sender, userStake.amount);\r\n        emit RewardPaid(msg.sender, reward);\r\n        emit TokensBurned(burnAmount);\r\n    }\r\n\r\n    function getCurrentRewardRate() public view returns (uint256) {\r\n        uint256 decreaseAmount = totalRewardsMinted.div(TOKENS_PER_DECREASE).mul(MINT_RATE_DECREASE);\r\n        uint256 currentRewardRate = STARTING_ANNUAL_RETURN > decreaseAmount ? STARTING_ANNUAL_RETURN.sub(decreaseAmount) : MINIMUM_ANNUAL_RETURN;\r\n        return currentRewardRate;\r\n    }\r\n\r\n    function calculateReward(address _user) public view returns (uint256) {\r\n        Stake memory userStake = stakes[_user];\r\n        uint256 stakingDuration = block.timestamp.sub(userStake.stakingTime);\r\n        uint256 reward = userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days).div(100);\r\n        return reward;\r\n    }\r\n\r\n    // ... additional functions and logic as needed ...\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x75C6E61286328D0A5CDBF6C6AD56EE63168071D2FA45B4B028B8A3 PUSH5 0x8462E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x75C6E61286328D0A5CDBF6C6AD56EE63168071D2FA45B4B028B8A3 PUSH5 0x8462E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/NUTZStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NUTZStaking.sol": {
				"NUTZStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nutzTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MINIMUM_ANNUAL_RETURN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINT_RATE_DECREASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "STARTING_ANNUAL_RETURN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKENS_PER_DECREASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nutzToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeAndClaimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NUTZStaking.sol\":297:3553  contract NUTZStaking is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NUTZStaking.sol\":1229:1451  constructor(address _nutzTokenAddress, address _owner) Ownable(_owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NUTZStaking.sol\":1292:1298  _owner */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NUTZStaking.sol\":1348:1349  0 */\n  0x00\n    /* \"contracts/NUTZStaking.sol\":1319:1350  _nutzTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NUTZStaking.sol\":1319:1336  _nutzTokenAddress */\n  dup3\n    /* \"contracts/NUTZStaking.sol\":1319:1350  _nutzTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/NUTZStaking.sol\":1311:1395  require(_nutzTokenAddress != address(0), \"Token address cannot be the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/NUTZStaking.sol\":1425:1442  _nutzTokenAddress */\n  dup2\n    /* \"contracts/NUTZStaking.sol\":1406:1415  nutzToken */\n  0x02\n  0x00\n    /* \"contracts/NUTZStaking.sol\":1406:1443  nutzToken = IERC20(_nutzTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NUTZStaking.sol\":1229:1451  constructor(address _nutzTokenAddress, address _owner) Ownable(_owner) {... */\n  pop\n  pop\n    /* \"contracts/NUTZStaking.sol\":297:3553  contract NUTZStaking is ReentrancyGuard, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":949:1068   */\ntag_44:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_46\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_47\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_26\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_27:\n    /* \"#utility.yul\":1445:1469   */\n  tag_49\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_11:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_51\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1879   */\ntag_28:\n    /* \"#utility.yul\":1794:1805   */\n  0x00\n    /* \"#utility.yul\":1828:1834   */\n  dup3\n    /* \"#utility.yul\":1823:1826   */\n  dup3\n    /* \"#utility.yul\":1816:1835   */\n  mstore\n    /* \"#utility.yul\":1868:1872   */\n  0x20\n    /* \"#utility.yul\":1863:1866   */\n  dup3\n    /* \"#utility.yul\":1859:1873   */\n  add\n    /* \"#utility.yul\":1844:1873   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1885:2112   */\ntag_29:\n    /* \"#utility.yul\":2025:2059   */\n  0x546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2013:2019   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  add\n    /* \"#utility.yul\":2002:2060   */\n  mstore\n    /* \"#utility.yul\":2094:2104   */\n  0x2061646472657373000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2089:2091   */\n  0x20\n    /* \"#utility.yul\":2081:2087   */\n  dup3\n    /* \"#utility.yul\":2077:2092   */\n  add\n    /* \"#utility.yul\":2070:2105   */\n  mstore\n    /* \"#utility.yul\":1885:2112   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2118:2484   */\ntag_30:\n    /* \"#utility.yul\":2260:2263   */\n  0x00\n    /* \"#utility.yul\":2281:2348   */\n  tag_55\n    /* \"#utility.yul\":2345:2347   */\n  0x28\n    /* \"#utility.yul\":2340:2343   */\n  dup4\n    /* \"#utility.yul\":2281:2348   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2274:2348   */\n  swap2\n  pop\n    /* \"#utility.yul\":2357:2450   */\n  tag_56\n    /* \"#utility.yul\":2446:2449   */\n  dup3\n    /* \"#utility.yul\":2357:2450   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2475:2477   */\n  0x40\n    /* \"#utility.yul\":2470:2473   */\n  dup3\n    /* \"#utility.yul\":2466:2478   */\n  add\n    /* \"#utility.yul\":2459:2478   */\n  swap1\n  pop\n    /* \"#utility.yul\":2118:2484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2490:2909   */\ntag_17:\n    /* \"#utility.yul\":2656:2660   */\n  0x00\n    /* \"#utility.yul\":2694:2696   */\n  0x20\n    /* \"#utility.yul\":2683:2692   */\n  dup3\n    /* \"#utility.yul\":2679:2697   */\n  add\n    /* \"#utility.yul\":2671:2697   */\n  swap1\n  pop\n    /* \"#utility.yul\":2743:2752   */\n  dup2\n    /* \"#utility.yul\":2737:2741   */\n  dup2\n    /* \"#utility.yul\":2733:2753   */\n  sub\n    /* \"#utility.yul\":2729:2730   */\n  0x00\n    /* \"#utility.yul\":2718:2727   */\n  dup4\n    /* \"#utility.yul\":2714:2731   */\n  add\n    /* \"#utility.yul\":2707:2754   */\n  mstore\n    /* \"#utility.yul\":2771:2902   */\n  tag_58\n    /* \"#utility.yul\":2897:2901   */\n  dup2\n    /* \"#utility.yul\":2771:2902   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2763:2902   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/NUTZStaking.sol\":297:3553  contract NUTZStaking is ReentrancyGuard, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NUTZStaking.sol\":297:3553  contract NUTZStaking is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd68f78f0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xefc21daa\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xefc21daa\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5cd0264\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfa435959\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xd68f78f0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd9c80108\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe6a4a8b5\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x7547c7a3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbc390610\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1288af02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NUTZStaking.sol\":646:711  uint256 public constant TOKENS_PER_DECREASE = 250000 * (10 ** 18) */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":941:980  mapping(address => Stake) public stakes */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/NUTZStaking.sol\":1459:1938  function stakeTokens(uint256 _amount) external nonReentrant {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/NUTZStaking.sol\":753:779  uint256 public totalStaked */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":418:469  uint256 public constant STARTING_ANNUAL_RETURN = 25 */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":1946:2776  function unstakeAndClaimRewards() external nonReentrant {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/NUTZStaking.sol\":3147:3491  function calculateReward(address _user) public view returns (uint256) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":786:819  uint256 public totalRewardsMinted */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":2784:3139  function getCurrentRewardRate() public view returns (uint256) {... */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":493:542  uint256 public constant MINIMUM_ANNUAL_RETURN = 5 */\n    tag_14:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/NUTZStaking.sol\":388:411  IERC20 public nutzToken */\n    tag_16:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":570:616  uint256 public constant MINT_RATE_DECREASE = 5 */\n    tag_17:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NUTZStaking.sol\":646:711  uint256 public constant TOKENS_PER_DECREASE = 250000 * (10 ** 18) */\n    tag_22:\n        /* \"contracts/NUTZStaking.sol\":692:711  250000 * (10 ** 18) */\n      0x34f086f3b33b68400000\n        /* \"contracts/NUTZStaking.sol\":646:711  uint256 public constant TOKENS_PER_DECREASE = 250000 * (10 ** 18) */\n      dup2\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":941:980  mapping(address => Stake) public stakes */\n    tag_28:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":1459:1938  function stakeTokens(uint256 _amount) external nonReentrant {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_79\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/NUTZStaking.sol\":1548:1549  0 */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":1538:1545  _amount */\n      dup2\n        /* \"contracts/NUTZStaking.sol\":1538:1549  _amount > 0 */\n      gt\n        /* \"contracts/NUTZStaking.sol\":1530:1575  require(_amount > 0, \"Cannot stake 0 tokens\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/NUTZStaking.sol\":1594:1603  nutzToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NUTZStaking.sol\":1594:1616  nutzToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/NUTZStaking.sol\":1617:1627  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":1637:1641  this */\n      address\n        /* \"contracts/NUTZStaking.sol\":1644:1651  _amount */\n      dup5\n        /* \"contracts/NUTZStaking.sol\":1594:1652  nutzToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/NUTZStaking.sol\":1586:1672  require(nutzToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/NUTZStaking.sol\":1685:1710  uint256 currentRewardRate */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":1713:1735  getCurrentRewardRate() */\n      tag_94\n        /* \"contracts/NUTZStaking.sol\":1713:1733  getCurrentRewardRate */\n      tag_57\n        /* \"contracts/NUTZStaking.sol\":1713:1735  getCurrentRewardRate() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/NUTZStaking.sol\":1685:1735  uint256 currentRewardRate = getCurrentRewardRate() */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":1767:1817  Stake(_amount, currentRewardRate, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NUTZStaking.sol\":1773:1780  _amount */\n      dup4\n        /* \"contracts/NUTZStaking.sol\":1767:1817  Stake(_amount, currentRewardRate, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NUTZStaking.sol\":1782:1799  currentRewardRate */\n      dup3\n        /* \"contracts/NUTZStaking.sol\":1767:1817  Stake(_amount, currentRewardRate, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NUTZStaking.sol\":1801:1816  block.timestamp */\n      timestamp\n        /* \"contracts/NUTZStaking.sol\":1767:1817  Stake(_amount, currentRewardRate, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NUTZStaking.sol\":1746:1752  stakes */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":1746:1764  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":1753:1763  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":1746:1764  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NUTZStaking.sol\":1746:1817  stakes[msg.sender] = Stake(_amount, currentRewardRate, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/NUTZStaking.sol\":1842:1866  totalStaked.add(_amount) */\n      tag_95\n        /* \"contracts/NUTZStaking.sol\":1858:1865  _amount */\n      dup3\n        /* \"contracts/NUTZStaking.sol\":1842:1853  totalStaked */\n      sload(0x03)\n        /* \"contracts/NUTZStaking.sol\":1842:1857  totalStaked.add */\n      tag_96\n      swap1\n        /* \"contracts/NUTZStaking.sol\":1842:1866  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/NUTZStaking.sol\":1828:1839  totalStaked */\n      0x03\n        /* \"contracts/NUTZStaking.sol\":1828:1866  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NUTZStaking.sol\":1891:1901  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":1884:1930  Staked(msg.sender, _amount, currentRewardRate) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"contracts/NUTZStaking.sol\":1903:1910  _amount */\n      dup4\n        /* \"contracts/NUTZStaking.sol\":1912:1929  currentRewardRate */\n      dup4\n        /* \"contracts/NUTZStaking.sol\":1884:1930  Staked(msg.sender, _amount, currentRewardRate) */\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NUTZStaking.sol\":1519:1938  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_100\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/NUTZStaking.sol\":1459:1938  function stakeTokens(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":753:779  uint256 public totalStaked */\n    tag_38:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":418:469  uint256 public constant STARTING_ANNUAL_RETURN = 25 */\n    tag_45:\n        /* \"contracts/NUTZStaking.sol\":467:469  25 */\n      0x19\n        /* \"contracts/NUTZStaking.sol\":418:469  uint256 public constant STARTING_ANNUAL_RETURN = 25 */\n      dup2\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":1946:2776  function unstakeAndClaimRewards() external nonReentrant {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_103\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/NUTZStaking.sol\":2013:2036  Stake storage userStake */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2039:2045  stakes */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":2039:2057  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2046:2056  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":2039:2057  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NUTZStaking.sol\":2013:2057  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":2095:2096  0 */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2076:2085  userStake */\n      dup2\n        /* \"contracts/NUTZStaking.sol\":2076:2092  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NUTZStaking.sol\":2076:2096  userStake.amount > 0 */\n      gt\n        /* \"contracts/NUTZStaking.sol\":2068:2121  require(userStake.amount > 0, \"No tokens to unstake\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/NUTZStaking.sol\":2134:2148  uint256 reward */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2151:2178  calculateReward(msg.sender) */\n      tag_108\n        /* \"contracts/NUTZStaking.sol\":2167:2177  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":2151:2166  calculateReward */\n      tag_51\n        /* \"contracts/NUTZStaking.sol\":2151:2178  calculateReward(msg.sender) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/NUTZStaking.sol\":2134:2178  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":2189:2207  uint256 burnAmount */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2210:2230  reward.mul(3).div(2) */\n      tag_109\n        /* \"contracts/NUTZStaking.sol\":2228:2229  2 */\n      0x02\n        /* \"contracts/NUTZStaking.sol\":2210:2223  reward.mul(3) */\n      tag_110\n        /* \"contracts/NUTZStaking.sol\":2221:2222  3 */\n      0x03\n        /* \"contracts/NUTZStaking.sol\":2210:2216  reward */\n      dup6\n        /* \"contracts/NUTZStaking.sol\":2210:2220  reward.mul */\n      tag_111\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2210:2223  reward.mul(3) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/NUTZStaking.sol\":2210:2227  reward.mul(3).div */\n      tag_112\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2210:2230  reward.mul(3).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/NUTZStaking.sol\":2189:2230  uint256 burnAmount = reward.mul(3).div(2) */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":2273:2282  nutzToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NUTZStaking.sol\":2273:2291  nutzToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NUTZStaking.sol\":2300:2309  nutzToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NUTZStaking.sol\":2312:2322  burnAmount */\n      dup4\n        /* \"contracts/NUTZStaking.sol\":2273:2323  nutzToken.transfer(address(nutzToken), burnAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/NUTZStaking.sol\":2386:2395  nutzToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NUTZStaking.sol\":2386:2404  nutzToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NUTZStaking.sol\":2405:2415  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":2417:2445  userStake.amount.add(reward) */\n      tag_118\n        /* \"contracts/NUTZStaking.sol\":2438:2444  reward */\n      dup6\n        /* \"contracts/NUTZStaking.sol\":2417:2426  userStake */\n      dup8\n        /* \"contracts/NUTZStaking.sol\":2417:2433  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NUTZStaking.sol\":2417:2437  userStake.amount.add */\n      tag_96\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2417:2445  userStake.amount.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/NUTZStaking.sol\":2386:2446  nutzToken.transfer(msg.sender, userStake.amount.add(reward)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_122:\n        /* \"contracts/NUTZStaking.sol\":2378:2466  require(nutzToken.transfer(msg.sender, userStake.amount.add(reward)), \"Transfer failed\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_93\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/NUTZStaking.sol\":2493:2526  totalStaked.sub(userStake.amount) */\n      tag_125\n        /* \"contracts/NUTZStaking.sol\":2509:2518  userStake */\n      dup4\n        /* \"contracts/NUTZStaking.sol\":2509:2525  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NUTZStaking.sol\":2493:2504  totalStaked */\n      sload(0x03)\n        /* \"contracts/NUTZStaking.sol\":2493:2508  totalStaked.sub */\n      tag_126\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2493:2526  totalStaked.sub(userStake.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/NUTZStaking.sol\":2479:2490  totalStaked */\n      0x03\n        /* \"contracts/NUTZStaking.sol\":2479:2526  totalStaked = totalStaked.sub(userStake.amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NUTZStaking.sol\":2558:2588  totalRewardsMinted.add(reward) */\n      tag_127\n        /* \"contracts/NUTZStaking.sol\":2581:2587  reward */\n      dup3\n        /* \"contracts/NUTZStaking.sol\":2558:2576  totalRewardsMinted */\n      sload(0x04)\n        /* \"contracts/NUTZStaking.sol\":2558:2580  totalRewardsMinted.add */\n      tag_96\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2558:2588  totalRewardsMinted.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/NUTZStaking.sol\":2537:2555  totalRewardsMinted */\n      0x04\n        /* \"contracts/NUTZStaking.sol\":2537:2588  totalRewardsMinted = totalRewardsMinted.add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NUTZStaking.sol\":2608:2614  stakes */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":2608:2626  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2615:2625  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":2608:2626  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2601:2626  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/NUTZStaking.sol\":2653:2663  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":2644:2682  Unstaked(msg.sender, userStake.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"contracts/NUTZStaking.sol\":2665:2674  userStake */\n      dup5\n        /* \"contracts/NUTZStaking.sol\":2665:2681  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NUTZStaking.sol\":2644:2682  Unstaked(msg.sender, userStake.amount) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NUTZStaking.sol\":2709:2719  msg.sender */\n      caller\n        /* \"contracts/NUTZStaking.sol\":2698:2728  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/NUTZStaking.sol\":2721:2727  reward */\n      dup4\n        /* \"contracts/NUTZStaking.sol\":2698:2728  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NUTZStaking.sol\":2744:2768  TokensBurned(burnAmount) */\n      0x6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7\n        /* \"contracts/NUTZStaking.sol\":2757:2767  burnAmount */\n      dup2\n        /* \"contracts/NUTZStaking.sol\":2744:2768  TokensBurned(burnAmount) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/NUTZStaking.sol\":2002:2776  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_131\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_100\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/NUTZStaking.sol\":1946:2776  function unstakeAndClaimRewards() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":3147:3491  function calculateReward(address _user) public view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/NUTZStaking.sol\":3208:3215  uint256 */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":3228:3250  Stake memory userStake */\n      dup1\n        /* \"contracts/NUTZStaking.sol\":3253:3259  stakes */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":3253:3266  stakes[_user] */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":3260:3265  _user */\n      dup5\n        /* \"contracts/NUTZStaking.sol\":3253:3266  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NUTZStaking.sol\":3228:3266  Stake memory userStake = stakes[_user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":3277:3300  uint256 stakingDuration */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":3303:3345  block.timestamp.sub(userStake.stakingTime) */\n      tag_133\n        /* \"contracts/NUTZStaking.sol\":3323:3332  userStake */\n      dup3\n        /* \"contracts/NUTZStaking.sol\":3323:3344  userStake.stakingTime */\n      0x40\n      add\n      mload\n        /* \"contracts/NUTZStaking.sol\":3303:3318  block.timestamp */\n      timestamp\n        /* \"contracts/NUTZStaking.sol\":3303:3322  block.timestamp.sub */\n      tag_126\n      swap1\n        /* \"contracts/NUTZStaking.sol\":3303:3345  block.timestamp.sub(userStake.stakingTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/NUTZStaking.sol\":3277:3345  uint256 stakingDuration = block.timestamp.sub(userStake.stakingTime) */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":3356:3370  uint256 reward */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":3373:3459  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days).div(100) */\n      tag_134\n        /* \"contracts/NUTZStaking.sol\":3455:3458  100 */\n      0x64\n        /* \"contracts/NUTZStaking.sol\":3373:3450  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days) */\n      tag_135\n        /* \"contracts/NUTZStaking.sol\":3441:3449  365 days */\n      0x01e13380\n        /* \"contracts/NUTZStaking.sol\":3373:3436  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration) */\n      tag_136\n        /* \"contracts/NUTZStaking.sol\":3420:3435  stakingDuration */\n      dup7\n        /* \"contracts/NUTZStaking.sol\":3373:3415  userStake.amount.mul(userStake.rewardRate) */\n      tag_137\n        /* \"contracts/NUTZStaking.sol\":3394:3403  userStake */\n      dup10\n        /* \"contracts/NUTZStaking.sol\":3394:3414  userStake.rewardRate */\n      0x20\n      add\n      mload\n        /* \"contracts/NUTZStaking.sol\":3373:3382  userStake */\n      dup11\n        /* \"contracts/NUTZStaking.sol\":3373:3389  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/NUTZStaking.sol\":3373:3393  userStake.amount.mul */\n      tag_111\n      swap1\n        /* \"contracts/NUTZStaking.sol\":3373:3415  userStake.amount.mul(userStake.rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/NUTZStaking.sol\":3373:3419  userStake.amount.mul(userStake.rewardRate).mul */\n      tag_111\n      swap1\n        /* \"contracts/NUTZStaking.sol\":3373:3436  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/NUTZStaking.sol\":3373:3440  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div */\n      tag_112\n      swap1\n        /* \"contracts/NUTZStaking.sol\":3373:3450  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/NUTZStaking.sol\":3373:3454  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days).div */\n      tag_112\n      swap1\n        /* \"contracts/NUTZStaking.sol\":3373:3459  userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/NUTZStaking.sol\":3356:3459  uint256 reward = userStake.amount.mul(userStake.rewardRate).mul(stakingDuration).div(365 days).div(100) */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":3477:3483  reward */\n      dup1\n        /* \"contracts/NUTZStaking.sol\":3470:3483  return reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NUTZStaking.sol\":3147:3491  function calculateReward(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":786:819  uint256 public totalRewardsMinted */\n    tag_54:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":2784:3139  function getCurrentRewardRate() public view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/NUTZStaking.sol\":2837:2844  uint256 */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":2857:2879  uint256 decreaseAmount */\n      dup1\n        /* \"contracts/NUTZStaking.sol\":2882:2949  totalRewardsMinted.div(TOKENS_PER_DECREASE).mul(MINT_RATE_DECREASE) */\n      tag_139\n        /* \"contracts/NUTZStaking.sol\":615:616  5 */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":2882:2925  totalRewardsMinted.div(TOKENS_PER_DECREASE) */\n      tag_140\n        /* \"contracts/NUTZStaking.sol\":692:711  250000 * (10 ** 18) */\n      0x34f086f3b33b68400000\n        /* \"contracts/NUTZStaking.sol\":2882:2900  totalRewardsMinted */\n      sload(0x04)\n        /* \"contracts/NUTZStaking.sol\":2882:2904  totalRewardsMinted.div */\n      tag_112\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2882:2925  totalRewardsMinted.div(TOKENS_PER_DECREASE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/NUTZStaking.sol\":2882:2929  totalRewardsMinted.div(TOKENS_PER_DECREASE).mul */\n      tag_111\n      swap1\n        /* \"contracts/NUTZStaking.sol\":2882:2949  totalRewardsMinted.div(TOKENS_PER_DECREASE).mul(MINT_RATE_DECREASE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/NUTZStaking.sol\":2857:2949  uint256 decreaseAmount = totalRewardsMinted.div(TOKENS_PER_DECREASE).mul(MINT_RATE_DECREASE) */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":2960:2985  uint256 currentRewardRate */\n      0x00\n        /* \"contracts/NUTZStaking.sol\":3013:3027  decreaseAmount */\n      dup2\n        /* \"contracts/NUTZStaking.sol\":467:469  25 */\n      0x19\n        /* \"contracts/NUTZStaking.sol\":2988:3027  STARTING_ANNUAL_RETURN > decreaseAmount */\n      gt\n        /* \"contracts/NUTZStaking.sol\":2988:3096  STARTING_ANNUAL_RETURN > decreaseAmount ? STARTING_ANNUAL_RETURN.sub(decreaseAmount) : MINIMUM_ANNUAL_RETURN */\n      tag_141\n      jumpi\n        /* \"contracts/NUTZStaking.sol\":541:542  5 */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":2988:3096  STARTING_ANNUAL_RETURN > decreaseAmount ? STARTING_ANNUAL_RETURN.sub(decreaseAmount) : MINIMUM_ANNUAL_RETURN */\n      jump(tag_142)\n    tag_141:\n        /* \"contracts/NUTZStaking.sol\":3030:3072  STARTING_ANNUAL_RETURN.sub(decreaseAmount) */\n      tag_143\n        /* \"contracts/NUTZStaking.sol\":3057:3071  decreaseAmount */\n      dup3\n        /* \"contracts/NUTZStaking.sol\":467:469  25 */\n      0x19\n        /* \"contracts/NUTZStaking.sol\":3030:3056  STARTING_ANNUAL_RETURN.sub */\n      tag_126\n      swap1\n        /* \"contracts/NUTZStaking.sol\":3030:3072  STARTING_ANNUAL_RETURN.sub(decreaseAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/NUTZStaking.sol\":2988:3096  STARTING_ANNUAL_RETURN > decreaseAmount ? STARTING_ANNUAL_RETURN.sub(decreaseAmount) : MINIMUM_ANNUAL_RETURN */\n    tag_142:\n        /* \"contracts/NUTZStaking.sol\":2960:3096  uint256 currentRewardRate = STARTING_ANNUAL_RETURN > decreaseAmount ? STARTING_ANNUAL_RETURN.sub(decreaseAmount) : MINIMUM_ANNUAL_RETURN */\n      swap1\n      pop\n        /* \"contracts/NUTZStaking.sol\":3114:3131  currentRewardRate */\n      dup1\n        /* \"contracts/NUTZStaking.sol\":3107:3131  return currentRewardRate */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NUTZStaking.sol\":2784:3139  function getCurrentRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":493:542  uint256 public constant MINIMUM_ANNUAL_RETURN = 5 */\n    tag_60:\n        /* \"contracts/NUTZStaking.sol\":541:542  5 */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":493:542  uint256 public constant MINIMUM_ANNUAL_RETURN = 5 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":388:411  IERC20 public nutzToken */\n    tag_66:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NUTZStaking.sol\":570:616  uint256 public constant MINT_RATE_DECREASE = 5 */\n    tag_70:\n        /* \"contracts/NUTZStaking.sol\":615:616  5 */\n      0x05\n        /* \"contracts/NUTZStaking.sol\":570:616  uint256 public constant MINT_RATE_DECREASE = 5 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_176:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_177:\n        /* \"#utility.yul\":177:201   */\n      tag_210\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_176\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_24:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_212\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_177\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_179:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_181:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_182:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_218\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_181\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_183:\n        /* \"#utility.yul\":1076:1100   */\n      tag_220\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_182\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_221:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_184:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_223\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_183\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_27:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_226\n      tag_179\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1352:1471   */\n    tag_225:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_227\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_184\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:2053   */\n    tag_30:\n        /* \"#utility.yul\":1760:1764   */\n      0x00\n        /* \"#utility.yul\":1798:1800   */\n      0x60\n        /* \"#utility.yul\":1787:1796   */\n      dup3\n        /* \"#utility.yul\":1783:1801   */\n      add\n        /* \"#utility.yul\":1775:1801   */\n      swap1\n      pop\n        /* \"#utility.yul\":1811:1882   */\n      tag_229\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1868:1877   */\n      dup4\n        /* \"#utility.yul\":1864:1881   */\n      add\n        /* \"#utility.yul\":1855:1861   */\n      dup7\n        /* \"#utility.yul\":1811:1882   */\n      tag_177\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1892:1964   */\n      tag_230\n        /* \"#utility.yul\":1960:1962   */\n      0x20\n        /* \"#utility.yul\":1949:1958   */\n      dup4\n        /* \"#utility.yul\":1945:1963   */\n      add\n        /* \"#utility.yul\":1936:1942   */\n      dup6\n        /* \"#utility.yul\":1892:1964   */\n      tag_177\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1974:2046   */\n      tag_231\n        /* \"#utility.yul\":2042:2044   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2027:2045   */\n      add\n        /* \"#utility.yul\":2018:2024   */\n      dup5\n        /* \"#utility.yul\":1974:2046   */\n      tag_177\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1611:2053   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2181   */\n    tag_185:\n        /* \"#utility.yul\":2132:2156   */\n      tag_233\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2132:2156   */\n      tag_176\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2125:2130   */\n      dup2\n        /* \"#utility.yul\":2122:2157   */\n      eq\n        /* \"#utility.yul\":2112:2175   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2168:2169   */\n      dup1\n        /* \"#utility.yul\":2161:2173   */\n      revert\n        /* \"#utility.yul\":2112:2175   */\n    tag_234:\n        /* \"#utility.yul\":2059:2181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2326   */\n    tag_186:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup2\n        /* \"#utility.yul\":2258:2278   */\n      calldataload\n        /* \"#utility.yul\":2249:2278   */\n      swap1\n      pop\n        /* \"#utility.yul\":2287:2320   */\n      tag_236\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2287:2320   */\n      tag_185\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2187:2326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2661   */\n    tag_35:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2440:2442   */\n      0x20\n        /* \"#utility.yul\":2428:2437   */\n      dup3\n        /* \"#utility.yul\":2419:2426   */\n      dup5\n        /* \"#utility.yul\":2415:2438   */\n      sub\n        /* \"#utility.yul\":2411:2443   */\n      slt\n        /* \"#utility.yul\":2408:2527   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2446:2525   */\n      tag_239\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2408:2527   */\n    tag_238:\n        /* \"#utility.yul\":2566:2567   */\n      0x00\n        /* \"#utility.yul\":2591:2644   */\n      tag_240\n        /* \"#utility.yul\":2636:2643   */\n      dup5\n        /* \"#utility.yul\":2627:2633   */\n      dup3\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2634   */\n      add\n        /* \"#utility.yul\":2591:2644   */\n      tag_186\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2581:2644   */\n      swap2\n      pop\n        /* \"#utility.yul\":2537:2654   */\n      pop\n        /* \"#utility.yul\":2332:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:2785   */\n    tag_187:\n        /* \"#utility.yul\":2754:2778   */\n      tag_242\n        /* \"#utility.yul\":2772:2777   */\n      dup2\n        /* \"#utility.yul\":2754:2778   */\n      tag_182\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2749:2752   */\n      dup3\n        /* \"#utility.yul\":2742:2779   */\n      mstore\n        /* \"#utility.yul\":2667:2785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3013   */\n    tag_43:\n        /* \"#utility.yul\":2884:2888   */\n      0x00\n        /* \"#utility.yul\":2922:2924   */\n      0x20\n        /* \"#utility.yul\":2911:2920   */\n      dup3\n        /* \"#utility.yul\":2907:2925   */\n      add\n        /* \"#utility.yul\":2899:2925   */\n      swap1\n      pop\n        /* \"#utility.yul\":2935:3006   */\n      tag_244\n        /* \"#utility.yul\":3003:3004   */\n      0x00\n        /* \"#utility.yul\":2992:3001   */\n      dup4\n        /* \"#utility.yul\":2988:3005   */\n      add\n        /* \"#utility.yul\":2979:2985   */\n      dup5\n        /* \"#utility.yul\":2935:3006   */\n      tag_187\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2791:3013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3079   */\n    tag_188:\n        /* \"#utility.yul\":3047:3050   */\n      0x00\n        /* \"#utility.yul\":3068:3073   */\n      dup2\n        /* \"#utility.yul\":3061:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3085:3227   */\n    tag_189:\n        /* \"#utility.yul\":3135:3144   */\n      0x00\n        /* \"#utility.yul\":3168:3221   */\n      tag_247\n        /* \"#utility.yul\":3186:3220   */\n      tag_248\n        /* \"#utility.yul\":3195:3219   */\n      tag_249\n        /* \"#utility.yul\":3213:3218   */\n      dup5\n        /* \"#utility.yul\":3195:3219   */\n      tag_181\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3186:3220   */\n      tag_188\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3168:3221   */\n      tag_181\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3155:3221   */\n      swap1\n      pop\n        /* \"#utility.yul\":3085:3227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3359   */\n    tag_190:\n        /* \"#utility.yul\":3283:3292   */\n      0x00\n        /* \"#utility.yul\":3316:3353   */\n      tag_251\n        /* \"#utility.yul\":3347:3352   */\n      dup3\n        /* \"#utility.yul\":3316:3353   */\n      tag_189\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3303:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3233:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3505   */\n    tag_191:\n        /* \"#utility.yul\":3429:3438   */\n      0x00\n        /* \"#utility.yul\":3462:3499   */\n      tag_253\n        /* \"#utility.yul\":3493:3498   */\n      dup3\n        /* \"#utility.yul\":3462:3499   */\n      tag_190\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3449:3499   */\n      swap1\n      pop\n        /* \"#utility.yul\":3365:3505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:3670   */\n    tag_192:\n        /* \"#utility.yul\":3612:3663   */\n      tag_255\n        /* \"#utility.yul\":3657:3662   */\n      dup2\n        /* \"#utility.yul\":3612:3663   */\n      tag_191\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3607:3610   */\n      dup3\n        /* \"#utility.yul\":3600:3664   */\n      mstore\n        /* \"#utility.yul\":3511:3670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3676:3926   */\n    tag_68:\n        /* \"#utility.yul\":3783:3787   */\n      0x00\n        /* \"#utility.yul\":3821:3823   */\n      0x20\n        /* \"#utility.yul\":3810:3819   */\n      dup3\n        /* \"#utility.yul\":3806:3824   */\n      add\n        /* \"#utility.yul\":3798:3824   */\n      swap1\n      pop\n        /* \"#utility.yul\":3834:3919   */\n      tag_257\n        /* \"#utility.yul\":3916:3917   */\n      0x00\n        /* \"#utility.yul\":3905:3914   */\n      dup4\n        /* \"#utility.yul\":3901:3918   */\n      add\n        /* \"#utility.yul\":3892:3898   */\n      dup5\n        /* \"#utility.yul\":3834:3919   */\n      tag_192\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3676:3926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4101   */\n    tag_193:\n        /* \"#utility.yul\":4016:4027   */\n      0x00\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4045:4048   */\n      dup3\n        /* \"#utility.yul\":4038:4057   */\n      mstore\n        /* \"#utility.yul\":4090:4094   */\n      0x20\n        /* \"#utility.yul\":4085:4088   */\n      dup3\n        /* \"#utility.yul\":4081:4095   */\n      add\n        /* \"#utility.yul\":4066:4095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4278   */\n    tag_194:\n        /* \"#utility.yul\":4247:4270   */\n      0x43616e6e6f74207374616b65203020746f6b656e730000000000000000000000\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4235:4241   */\n      dup3\n        /* \"#utility.yul\":4231:4245   */\n      add\n        /* \"#utility.yul\":4224:4271   */\n      mstore\n        /* \"#utility.yul\":4107:4278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4284:4650   */\n    tag_195:\n        /* \"#utility.yul\":4426:4429   */\n      0x00\n        /* \"#utility.yul\":4447:4514   */\n      tag_261\n        /* \"#utility.yul\":4511:4513   */\n      0x15\n        /* \"#utility.yul\":4506:4509   */\n      dup4\n        /* \"#utility.yul\":4447:4514   */\n      tag_193\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4440:4514   */\n      swap2\n      pop\n        /* \"#utility.yul\":4523:4616   */\n      tag_262\n        /* \"#utility.yul\":4612:4615   */\n      dup3\n        /* \"#utility.yul\":4523:4616   */\n      tag_194\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4641:4643   */\n      0x20\n        /* \"#utility.yul\":4636:4639   */\n      dup3\n        /* \"#utility.yul\":4632:4644   */\n      add\n        /* \"#utility.yul\":4625:4644   */\n      swap1\n      pop\n        /* \"#utility.yul\":4284:4650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4656:5075   */\n    tag_84:\n        /* \"#utility.yul\":4822:4826   */\n      0x00\n        /* \"#utility.yul\":4860:4862   */\n      0x20\n        /* \"#utility.yul\":4849:4858   */\n      dup3\n        /* \"#utility.yul\":4845:4863   */\n      add\n        /* \"#utility.yul\":4837:4863   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:4918   */\n      dup2\n        /* \"#utility.yul\":4903:4907   */\n      dup2\n        /* \"#utility.yul\":4899:4919   */\n      sub\n        /* \"#utility.yul\":4895:4896   */\n      0x00\n        /* \"#utility.yul\":4884:4893   */\n      dup4\n        /* \"#utility.yul\":4880:4897   */\n      add\n        /* \"#utility.yul\":4873:4920   */\n      mstore\n        /* \"#utility.yul\":4937:5068   */\n      tag_264\n        /* \"#utility.yul\":5063:5067   */\n      dup2\n        /* \"#utility.yul\":4937:5068   */\n      tag_195\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4929:5068   */\n      swap1\n      pop\n        /* \"#utility.yul\":4656:5075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5523   */\n    tag_86:\n        /* \"#utility.yul\":5230:5234   */\n      0x00\n        /* \"#utility.yul\":5268:5270   */\n      0x60\n        /* \"#utility.yul\":5257:5266   */\n      dup3\n        /* \"#utility.yul\":5253:5271   */\n      add\n        /* \"#utility.yul\":5245:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":5281:5352   */\n      tag_266\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5338:5347   */\n      dup4\n        /* \"#utility.yul\":5334:5351   */\n      add\n        /* \"#utility.yul\":5325:5331   */\n      dup7\n        /* \"#utility.yul\":5281:5352   */\n      tag_187\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5362:5434   */\n      tag_267\n        /* \"#utility.yul\":5430:5432   */\n      0x20\n        /* \"#utility.yul\":5419:5428   */\n      dup4\n        /* \"#utility.yul\":5415:5433   */\n      add\n        /* \"#utility.yul\":5406:5412   */\n      dup6\n        /* \"#utility.yul\":5362:5434   */\n      tag_187\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5444:5516   */\n      tag_268\n        /* \"#utility.yul\":5512:5514   */\n      0x40\n        /* \"#utility.yul\":5501:5510   */\n      dup4\n        /* \"#utility.yul\":5497:5515   */\n      add\n        /* \"#utility.yul\":5488:5494   */\n      dup5\n        /* \"#utility.yul\":5444:5516   */\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5081:5523   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5529:5619   */\n    tag_196:\n        /* \"#utility.yul\":5563:5570   */\n      0x00\n        /* \"#utility.yul\":5606:5611   */\n      dup2\n        /* \"#utility.yul\":5599:5612   */\n      iszero\n        /* \"#utility.yul\":5592:5613   */\n      iszero\n        /* \"#utility.yul\":5581:5613   */\n      swap1\n      pop\n        /* \"#utility.yul\":5529:5619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5625:5741   */\n    tag_197:\n        /* \"#utility.yul\":5695:5716   */\n      tag_271\n        /* \"#utility.yul\":5710:5715   */\n      dup2\n        /* \"#utility.yul\":5695:5716   */\n      tag_196\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5688:5693   */\n      dup2\n        /* \"#utility.yul\":5685:5717   */\n      eq\n        /* \"#utility.yul\":5675:5735   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5731:5732   */\n      0x00\n        /* \"#utility.yul\":5728:5729   */\n      dup1\n        /* \"#utility.yul\":5721:5733   */\n      revert\n        /* \"#utility.yul\":5675:5735   */\n    tag_272:\n        /* \"#utility.yul\":5625:5741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5747:5884   */\n    tag_198:\n        /* \"#utility.yul\":5801:5806   */\n      0x00\n        /* \"#utility.yul\":5832:5838   */\n      dup2\n        /* \"#utility.yul\":5826:5839   */\n      mload\n        /* \"#utility.yul\":5817:5839   */\n      swap1\n      pop\n        /* \"#utility.yul\":5848:5878   */\n      tag_274\n        /* \"#utility.yul\":5872:5877   */\n      dup2\n        /* \"#utility.yul\":5848:5878   */\n      tag_197\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5747:5884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5890:6235   */\n    tag_90:\n        /* \"#utility.yul\":5957:5963   */\n      0x00\n        /* \"#utility.yul\":6006:6008   */\n      0x20\n        /* \"#utility.yul\":5994:6003   */\n      dup3\n        /* \"#utility.yul\":5985:5992   */\n      dup5\n        /* \"#utility.yul\":5981:6004   */\n      sub\n        /* \"#utility.yul\":5977:6009   */\n      slt\n        /* \"#utility.yul\":5974:6093   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":6012:6091   */\n      tag_277\n      tag_179\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5974:6093   */\n    tag_276:\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6157:6218   */\n      tag_278\n        /* \"#utility.yul\":6210:6217   */\n      dup5\n        /* \"#utility.yul\":6201:6207   */\n      dup3\n        /* \"#utility.yul\":6190:6199   */\n      dup6\n        /* \"#utility.yul\":6186:6208   */\n      add\n        /* \"#utility.yul\":6157:6218   */\n      tag_198\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6147:6218   */\n      swap2\n      pop\n        /* \"#utility.yul\":6103:6228   */\n      pop\n        /* \"#utility.yul\":5890:6235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6241:6406   */\n    tag_199:\n        /* \"#utility.yul\":6381:6398   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":6377:6378   */\n      0x00\n        /* \"#utility.yul\":6369:6375   */\n      dup3\n        /* \"#utility.yul\":6365:6379   */\n      add\n        /* \"#utility.yul\":6358:6399   */\n      mstore\n        /* \"#utility.yul\":6241:6406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6412:6778   */\n    tag_200:\n        /* \"#utility.yul\":6554:6557   */\n      0x00\n        /* \"#utility.yul\":6575:6642   */\n      tag_281\n        /* \"#utility.yul\":6639:6641   */\n      0x0f\n        /* \"#utility.yul\":6634:6637   */\n      dup4\n        /* \"#utility.yul\":6575:6642   */\n      tag_193\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6568:6642   */\n      swap2\n      pop\n        /* \"#utility.yul\":6651:6744   */\n      tag_282\n        /* \"#utility.yul\":6740:6743   */\n      dup3\n        /* \"#utility.yul\":6651:6744   */\n      tag_199\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6769:6771   */\n      0x20\n        /* \"#utility.yul\":6764:6767   */\n      dup3\n        /* \"#utility.yul\":6760:6772   */\n      add\n        /* \"#utility.yul\":6753:6772   */\n      swap1\n      pop\n        /* \"#utility.yul\":6412:6778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6784:7203   */\n    tag_93:\n        /* \"#utility.yul\":6950:6954   */\n      0x00\n        /* \"#utility.yul\":6988:6990   */\n      0x20\n        /* \"#utility.yul\":6977:6986   */\n      dup3\n        /* \"#utility.yul\":6973:6991   */\n      add\n        /* \"#utility.yul\":6965:6991   */\n      swap1\n      pop\n        /* \"#utility.yul\":7037:7046   */\n      dup2\n        /* \"#utility.yul\":7031:7035   */\n      dup2\n        /* \"#utility.yul\":7027:7047   */\n      sub\n        /* \"#utility.yul\":7023:7024   */\n      0x00\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":7008:7025   */\n      add\n        /* \"#utility.yul\":7001:7048   */\n      mstore\n        /* \"#utility.yul\":7065:7196   */\n      tag_284\n        /* \"#utility.yul\":7191:7195   */\n      dup2\n        /* \"#utility.yul\":7065:7196   */\n      tag_200\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7057:7196   */\n      swap1\n      pop\n        /* \"#utility.yul\":6784:7203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7209:7541   */\n    tag_98:\n        /* \"#utility.yul\":7330:7334   */\n      0x00\n        /* \"#utility.yul\":7368:7370   */\n      0x40\n        /* \"#utility.yul\":7357:7366   */\n      dup3\n        /* \"#utility.yul\":7353:7371   */\n      add\n        /* \"#utility.yul\":7345:7371   */\n      swap1\n      pop\n        /* \"#utility.yul\":7381:7452   */\n      tag_286\n        /* \"#utility.yul\":7449:7450   */\n      0x00\n        /* \"#utility.yul\":7438:7447   */\n      dup4\n        /* \"#utility.yul\":7434:7451   */\n      add\n        /* \"#utility.yul\":7425:7431   */\n      dup6\n        /* \"#utility.yul\":7381:7452   */\n      tag_177\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7462:7534   */\n      tag_287\n        /* \"#utility.yul\":7530:7532   */\n      0x20\n        /* \"#utility.yul\":7519:7528   */\n      dup4\n        /* \"#utility.yul\":7515:7533   */\n      add\n        /* \"#utility.yul\":7506:7512   */\n      dup5\n        /* \"#utility.yul\":7462:7534   */\n      tag_177\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7209:7541   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7547:7717   */\n    tag_201:\n        /* \"#utility.yul\":7687:7709   */\n      0x4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000\n        /* \"#utility.yul\":7683:7684   */\n      0x00\n        /* \"#utility.yul\":7675:7681   */\n      dup3\n        /* \"#utility.yul\":7671:7685   */\n      add\n        /* \"#utility.yul\":7664:7710   */\n      mstore\n        /* \"#utility.yul\":7547:7717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7723:8089   */\n    tag_202:\n        /* \"#utility.yul\":7865:7868   */\n      0x00\n        /* \"#utility.yul\":7886:7953   */\n      tag_290\n        /* \"#utility.yul\":7950:7952   */\n      0x14\n        /* \"#utility.yul\":7945:7948   */\n      dup4\n        /* \"#utility.yul\":7886:7953   */\n      tag_193\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7879:7953   */\n      swap2\n      pop\n        /* \"#utility.yul\":7962:8055   */\n      tag_291\n        /* \"#utility.yul\":8051:8054   */\n      dup3\n        /* \"#utility.yul\":7962:8055   */\n      tag_201\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8080:8082   */\n      0x20\n        /* \"#utility.yul\":8075:8078   */\n      dup3\n        /* \"#utility.yul\":8071:8083   */\n      add\n        /* \"#utility.yul\":8064:8083   */\n      swap1\n      pop\n        /* \"#utility.yul\":7723:8089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8095:8514   */\n    tag_107:\n        /* \"#utility.yul\":8261:8265   */\n      0x00\n        /* \"#utility.yul\":8299:8301   */\n      0x20\n        /* \"#utility.yul\":8288:8297   */\n      dup3\n        /* \"#utility.yul\":8284:8302   */\n      add\n        /* \"#utility.yul\":8276:8302   */\n      swap1\n      pop\n        /* \"#utility.yul\":8348:8357   */\n      dup2\n        /* \"#utility.yul\":8342:8346   */\n      dup2\n        /* \"#utility.yul\":8338:8358   */\n      sub\n        /* \"#utility.yul\":8334:8335   */\n      0x00\n        /* \"#utility.yul\":8323:8332   */\n      dup4\n        /* \"#utility.yul\":8319:8336   */\n      add\n        /* \"#utility.yul\":8312:8359   */\n      mstore\n        /* \"#utility.yul\":8376:8507   */\n      tag_293\n        /* \"#utility.yul\":8502:8506   */\n      dup2\n        /* \"#utility.yul\":8376:8507   */\n      tag_202\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8368:8507   */\n      swap1\n      pop\n        /* \"#utility.yul\":8095:8514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8520:8852   */\n    tag_114:\n        /* \"#utility.yul\":8641:8645   */\n      0x00\n        /* \"#utility.yul\":8679:8681   */\n      0x40\n        /* \"#utility.yul\":8668:8677   */\n      dup3\n        /* \"#utility.yul\":8664:8682   */\n      add\n        /* \"#utility.yul\":8656:8682   */\n      swap1\n      pop\n        /* \"#utility.yul\":8692:8763   */\n      tag_295\n        /* \"#utility.yul\":8760:8761   */\n      0x00\n        /* \"#utility.yul\":8749:8758   */\n      dup4\n        /* \"#utility.yul\":8745:8762   */\n      add\n        /* \"#utility.yul\":8736:8742   */\n      dup6\n        /* \"#utility.yul\":8692:8763   */\n      tag_187\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8773:8845   */\n      tag_296\n        /* \"#utility.yul\":8841:8843   */\n      0x20\n        /* \"#utility.yul\":8830:8839   */\n      dup4\n        /* \"#utility.yul\":8826:8844   */\n      add\n        /* \"#utility.yul\":8817:8823   */\n      dup5\n        /* \"#utility.yul\":8773:8845   */\n      tag_177\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8520:8852   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8858:9039   */\n    tag_203:\n        /* \"#utility.yul\":8998:9031   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8994:8995   */\n      0x00\n        /* \"#utility.yul\":8986:8992   */\n      dup3\n        /* \"#utility.yul\":8982:8996   */\n      add\n        /* \"#utility.yul\":8975:9032   */\n      mstore\n        /* \"#utility.yul\":8858:9039   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9045:9411   */\n    tag_204:\n        /* \"#utility.yul\":9187:9190   */\n      0x00\n        /* \"#utility.yul\":9208:9275   */\n      tag_299\n        /* \"#utility.yul\":9272:9274   */\n      0x1f\n        /* \"#utility.yul\":9267:9270   */\n      dup4\n        /* \"#utility.yul\":9208:9275   */\n      tag_193\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9201:9275   */\n      swap2\n      pop\n        /* \"#utility.yul\":9284:9377   */\n      tag_300\n        /* \"#utility.yul\":9373:9376   */\n      dup3\n        /* \"#utility.yul\":9284:9377   */\n      tag_203\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9402:9404   */\n      0x20\n        /* \"#utility.yul\":9397:9400   */\n      dup3\n        /* \"#utility.yul\":9393:9405   */\n      add\n        /* \"#utility.yul\":9386:9405   */\n      swap1\n      pop\n        /* \"#utility.yul\":9045:9411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9417:9836   */\n    tag_161:\n        /* \"#utility.yul\":9583:9587   */\n      0x00\n        /* \"#utility.yul\":9621:9623   */\n      0x20\n        /* \"#utility.yul\":9610:9619   */\n      dup3\n        /* \"#utility.yul\":9606:9624   */\n      add\n        /* \"#utility.yul\":9598:9624   */\n      swap1\n      pop\n        /* \"#utility.yul\":9670:9679   */\n      dup2\n        /* \"#utility.yul\":9664:9668   */\n      dup2\n        /* \"#utility.yul\":9660:9680   */\n      sub\n        /* \"#utility.yul\":9656:9657   */\n      0x00\n        /* \"#utility.yul\":9645:9654   */\n      dup4\n        /* \"#utility.yul\":9641:9658   */\n      add\n        /* \"#utility.yul\":9634:9681   */\n      mstore\n        /* \"#utility.yul\":9698:9829   */\n      tag_302\n        /* \"#utility.yul\":9824:9828   */\n      dup2\n        /* \"#utility.yul\":9698:9829   */\n      tag_204\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9690:9829   */\n      swap1\n      pop\n        /* \"#utility.yul\":9417:9836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9842:10022   */\n    tag_205:\n        /* \"#utility.yul\":9890:9967   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9887:9888   */\n      0x00\n        /* \"#utility.yul\":9880:9968   */\n      mstore\n        /* \"#utility.yul\":9987:9991   */\n      0x11\n        /* \"#utility.yul\":9984:9985   */\n      0x04\n        /* \"#utility.yul\":9977:9992   */\n      mstore\n        /* \"#utility.yul\":10011:10015   */\n      0x24\n        /* \"#utility.yul\":10008:10009   */\n      0x00\n        /* \"#utility.yul\":10001:10016   */\n      revert\n        /* \"#utility.yul\":10028:10219   */\n    tag_164:\n        /* \"#utility.yul\":10068:10071   */\n      0x00\n        /* \"#utility.yul\":10087:10107   */\n      tag_305\n        /* \"#utility.yul\":10105:10106   */\n      dup3\n        /* \"#utility.yul\":10087:10107   */\n      tag_176\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10082:10107   */\n      swap2\n      pop\n        /* \"#utility.yul\":10121:10141   */\n      tag_306\n        /* \"#utility.yul\":10139:10140   */\n      dup4\n        /* \"#utility.yul\":10121:10141   */\n      tag_176\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10116:10141   */\n      swap3\n      pop\n        /* \"#utility.yul\":10164:10165   */\n      dup3\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      add\n        /* \"#utility.yul\":10150:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":10185:10188   */\n      dup1\n        /* \"#utility.yul\":10182:10183   */\n      dup3\n        /* \"#utility.yul\":10179:10189   */\n      gt\n        /* \"#utility.yul\":10176:10212   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":10192:10210   */\n      tag_308\n      tag_205\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10176:10212   */\n    tag_307:\n        /* \"#utility.yul\":10028:10219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10225:10635   */\n    tag_168:\n        /* \"#utility.yul\":10265:10272   */\n      0x00\n        /* \"#utility.yul\":10288:10308   */\n      tag_310\n        /* \"#utility.yul\":10306:10307   */\n      dup3\n        /* \"#utility.yul\":10288:10308   */\n      tag_176\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10283:10308   */\n      swap2\n      pop\n        /* \"#utility.yul\":10322:10342   */\n      tag_311\n        /* \"#utility.yul\":10340:10341   */\n      dup4\n        /* \"#utility.yul\":10322:10342   */\n      tag_176\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10317:10342   */\n      swap3\n      pop\n        /* \"#utility.yul\":10377:10378   */\n      dup3\n        /* \"#utility.yul\":10374:10375   */\n      dup3\n        /* \"#utility.yul\":10370:10379   */\n      mul\n        /* \"#utility.yul\":10399:10429   */\n      tag_312\n        /* \"#utility.yul\":10417:10428   */\n      dup2\n        /* \"#utility.yul\":10399:10429   */\n      tag_176\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10388:10429   */\n      swap2\n      pop\n        /* \"#utility.yul\":10578:10579   */\n      dup3\n        /* \"#utility.yul\":10569:10576   */\n      dup3\n        /* \"#utility.yul\":10565:10580   */\n      div\n        /* \"#utility.yul\":10562:10563   */\n      dup5\n        /* \"#utility.yul\":10559:10581   */\n      eq\n        /* \"#utility.yul\":10539:10540   */\n      dup4\n        /* \"#utility.yul\":10532:10541   */\n      iszero\n        /* \"#utility.yul\":10512:10595   */\n      or\n        /* \"#utility.yul\":10489:10628   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":10608:10626   */\n      tag_314\n      tag_205\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10489:10628   */\n    tag_313:\n        /* \"#utility.yul\":10273:10635   */\n      pop\n        /* \"#utility.yul\":10225:10635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10641:10821   */\n    tag_206:\n        /* \"#utility.yul\":10689:10766   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10686:10687   */\n      0x00\n        /* \"#utility.yul\":10679:10767   */\n      mstore\n        /* \"#utility.yul\":10786:10790   */\n      0x12\n        /* \"#utility.yul\":10783:10784   */\n      0x04\n        /* \"#utility.yul\":10776:10791   */\n      mstore\n        /* \"#utility.yul\":10810:10814   */\n      0x24\n        /* \"#utility.yul\":10807:10808   */\n      0x00\n        /* \"#utility.yul\":10800:10815   */\n      revert\n        /* \"#utility.yul\":10827:11012   */\n    tag_171:\n        /* \"#utility.yul\":10867:10868   */\n      0x00\n        /* \"#utility.yul\":10884:10904   */\n      tag_317\n        /* \"#utility.yul\":10902:10903   */\n      dup3\n        /* \"#utility.yul\":10884:10904   */\n      tag_176\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10879:10904   */\n      swap2\n      pop\n        /* \"#utility.yul\":10918:10938   */\n      tag_318\n        /* \"#utility.yul\":10936:10937   */\n      dup4\n        /* \"#utility.yul\":10918:10938   */\n      tag_176\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10913:10938   */\n      swap3\n      pop\n        /* \"#utility.yul\":10957:10958   */\n      dup3\n        /* \"#utility.yul\":10947:10982   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":10962:10980   */\n      tag_320\n      tag_206\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10947:10982   */\n    tag_319:\n        /* \"#utility.yul\":11004:11005   */\n      dup3\n        /* \"#utility.yul\":11001:11002   */\n      dup3\n        /* \"#utility.yul\":10997:11006   */\n      div\n        /* \"#utility.yul\":10992:11006   */\n      swap1\n      pop\n        /* \"#utility.yul\":10827:11012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11018:11212   */\n    tag_174:\n        /* \"#utility.yul\":11058:11062   */\n      0x00\n        /* \"#utility.yul\":11078:11098   */\n      tag_322\n        /* \"#utility.yul\":11096:11097   */\n      dup3\n        /* \"#utility.yul\":11078:11098   */\n      tag_176\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11073:11098   */\n      swap2\n      pop\n        /* \"#utility.yul\":11112:11132   */\n      tag_323\n        /* \"#utility.yul\":11130:11131   */\n      dup4\n        /* \"#utility.yul\":11112:11132   */\n      tag_176\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11107:11132   */\n      swap3\n      pop\n        /* \"#utility.yul\":11156:11157   */\n      dup3\n        /* \"#utility.yul\":11153:11154   */\n      dup3\n        /* \"#utility.yul\":11149:11158   */\n      sub\n        /* \"#utility.yul\":11141:11158   */\n      swap1\n      pop\n        /* \"#utility.yul\":11180:11181   */\n      dup2\n        /* \"#utility.yul\":11174:11178   */\n      dup2\n        /* \"#utility.yul\":11171:11182   */\n      gt\n        /* \"#utility.yul\":11168:11205   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":11185:11203   */\n      tag_325\n      tag_205\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11168:11205   */\n    tag_324:\n        /* \"#utility.yul\":11018:11212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220306be834ad8c26995c84fbf93a899290f94b7de18a2470167f7c5f059eb6ce3464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_732": {
									"entryPoint": null,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 380,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2912:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1411:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1418:3:6",
														"type": ""
													}
												],
												"src": "1358:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1564:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1575:4:6",
														"type": ""
													}
												],
												"src": "1482:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1806:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1823:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1828:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1816:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1844:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1863:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1844:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1778:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1783:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1794:11:6",
														"type": ""
													}
												],
												"src": "1710:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:121:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:6"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2025:34:6",
																		"type": "",
																		"value": "Token address cannot be the zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2002:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2081:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2089:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2077:15:6"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2094:10:6",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2070:35:6"
														}
													]
												},
												"name": "store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1983:6:6",
														"type": ""
													}
												],
												"src": "1885:227:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2274:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2340:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2281:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																	"nodeType": "YulIdentifier",
																	"src": "2357:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2459:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2470:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2475:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2252:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2260:3:6",
														"type": ""
													}
												],
												"src": "2118:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2661:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2671:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2718:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2729:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2737:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2743:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2763:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2897:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2771:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2763:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2641:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2656:4:6",
														"type": ""
													}
												],
												"src": "2490:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be the zero\")\n\n        mstore(add(memPtr, 32), \" address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620016ce380380620016ce8339818101604052810190620000369190620002a4565b8060015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a89190620002fa565b60405180910390fd5b620000c2816200017c60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000134576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012b9062000399565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003b9565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200026e8262000243565b9050919050565b620002808162000262565b81146200028b575f80fd5b50565b5f815190506200029e8162000275565b92915050565b5f8060408385031215620002bd57620002bc6200023f565b5b5f620002cc858286016200028e565b9250506020620002df858286016200028e565b9150509250929050565b620002f48162000262565b82525050565b5f6020820190506200030f5f830184620002e9565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f5f8201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b5f6200038160288362000315565b91506200038e8262000325565b604082019050919050565b5f6020820190508181035f830152620003b28162000373565b9050919050565b61130780620003c75f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c8063d68f78f011610095578063efc21daa11610064578063efc21daa1461023d578063f2fde38b1461025b578063f5cd026414610277578063fa43595914610295576100f3565b8063d68f78f0146101c7578063d82e3962146101d1578063d9c8010814610201578063e6a4a8b51461021f576100f3565b80637547c7a3116100d15780637547c7a314610151578063817b1cd21461016d5780638da5cb5b1461018b578063bc390610146101a9576100f3565b80631288af02146100f757806316934fc414610115578063715018a614610147575b5f80fd5b6100ff6102b3565b60405161010c9190610d45565b60405180910390f35b61012f600480360381019061012a9190610dbc565b6102c1565b60405161013e93929190610de7565b60405180910390f35b61014f6102e7565b005b61016b60048036038101906101669190610e46565b6102fa565b005b61017561051a565b6040516101829190610d45565b60405180910390f35b610193610520565b6040516101a09190610e80565b60405180910390f35b6101b1610548565b6040516101be9190610d45565b60405180910390f35b6101cf61054d565b005b6101eb60048036038101906101e69190610dbc565b61092e565b6040516101f89190610d45565b60405180910390f35b610209610a14565b6040516102169190610d45565b60405180910390f35b610227610a1a565b6040516102349190610d45565b60405180910390f35b610245610a7f565b6040516102529190610d45565b60405180910390f35b61027560048036038101906102709190610dbc565b610a84565b005b61027f610b08565b60405161028c9190610ef4565b60405180910390f35b61029d610b2d565b6040516102aa9190610d45565b60405180910390f35b6934f086f3b33b6840000081565b6005602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6102ef610b32565b6102f85f610bb9565b565b610302610c7c565b5f8111610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610f67565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103a293929190610f85565b6020604051808303815f875af11580156103be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e29190610fef565b610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890611064565b60405180910390fd5b5f61042a610a1a565b905060405180606001604052808381526020018281526020014281525060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155604082015181600201559050506104b882600354610cc990919063ffffffff16565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908383604051610506929190611082565b60405180910390a250610517610cde565b50565b60035481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601981565b610555610c7c565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154116105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d1906110f3565b60405180910390fd5b5f6105e43361092e565b90505f61060e6002610600600385610ce790919063ffffffff16565b610cfc90919063ffffffff16565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161068d929190611111565b6020604051808303815f875af11580156106a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106cd9190610fef565b5060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361072285875f0154610cc990919063ffffffff16565b6040518363ffffffff1660e01b815260040161073f929190611111565b6020604051808303815f875af115801561075b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077f9190610fef565b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590611064565b60405180910390fd5b6107d6835f0154600354610d1190919063ffffffff16565b6003819055506107f182600454610cc990919063ffffffff16565b60048190555060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f9055600282015f905550503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75845f01546040516108949190610d45565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486836040516108e29190610d45565b60405180910390a27f6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7816040516109199190610d45565b60405180910390a150505061092c610cde565b565b5f8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f6109af826040015142610d1190919063ffffffff16565b90505f610a0760646109f96301e133806109eb866109dd89602001518a5f0151610ce790919063ffffffff16565b610ce790919063ffffffff16565b610cfc90919063ffffffff16565b610cfc90919063ffffffff16565b9050809350505050919050565b60045481565b5f80610a4e6005610a406934f086f3b33b68400000600454610cfc90919063ffffffff16565b610ce790919063ffffffff16565b90505f81601911610a60576005610a75565b610a74826019610d1190919063ffffffff16565b5b9050809250505090565b600581565b610a8c610b32565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610afc575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610af39190610e80565b60405180910390fd5b610b0581610bb9565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600581565b610b3a610d26565b73ffffffffffffffffffffffffffffffffffffffff16610b58610520565b73ffffffffffffffffffffffffffffffffffffffff1614610bb757610b7b610d26565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bae9190610e80565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60025f5403610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb790611182565b60405180910390fd5b60025f81905550565b5f8183610cd691906111cd565b905092915050565b60015f81905550565b5f8183610cf49190611200565b905092915050565b5f8183610d09919061126e565b905092915050565b5f8183610d1e919061129e565b905092915050565b5f33905090565b5f819050919050565b610d3f81610d2d565b82525050565b5f602082019050610d585f830184610d36565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d8b82610d62565b9050919050565b610d9b81610d81565b8114610da5575f80fd5b50565b5f81359050610db681610d92565b92915050565b5f60208284031215610dd157610dd0610d5e565b5b5f610dde84828501610da8565b91505092915050565b5f606082019050610dfa5f830186610d36565b610e076020830185610d36565b610e146040830184610d36565b949350505050565b610e2581610d2d565b8114610e2f575f80fd5b50565b5f81359050610e4081610e1c565b92915050565b5f60208284031215610e5b57610e5a610d5e565b5b5f610e6884828501610e32565b91505092915050565b610e7a81610d81565b82525050565b5f602082019050610e935f830184610e71565b92915050565b5f819050919050565b5f610ebc610eb7610eb284610d62565b610e99565b610d62565b9050919050565b5f610ecd82610ea2565b9050919050565b5f610ede82610ec3565b9050919050565b610eee81610ed4565b82525050565b5f602082019050610f075f830184610ee5565b92915050565b5f82825260208201905092915050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f610f51601583610f0d565b9150610f5c82610f1d565b602082019050919050565b5f6020820190508181035f830152610f7e81610f45565b9050919050565b5f606082019050610f985f830186610e71565b610fa56020830185610e71565b610fb26040830184610d36565b949350505050565b5f8115159050919050565b610fce81610fba565b8114610fd8575f80fd5b50565b5f81519050610fe981610fc5565b92915050565b5f6020828403121561100457611003610d5e565b5b5f61101184828501610fdb565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61104e600f83610f0d565b91506110598261101a565b602082019050919050565b5f6020820190508181035f83015261107b81611042565b9050919050565b5f6040820190506110955f830185610d36565b6110a26020830184610d36565b9392505050565b7f4e6f20746f6b656e7320746f20756e7374616b650000000000000000000000005f82015250565b5f6110dd601483610f0d565b91506110e8826110a9565b602082019050919050565b5f6020820190508181035f83015261110a816110d1565b9050919050565b5f6040820190506111245f830185610e71565b6111316020830184610d36565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61116c601f83610f0d565b915061117782611138565b602082019050919050565b5f6020820190508181035f83015261119981611160565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111d782610d2d565b91506111e283610d2d565b92508282019050808211156111fa576111f96111a0565b5b92915050565b5f61120a82610d2d565b915061121583610d2d565b925082820261122381610d2d565b9150828204841483151761123a576112396111a0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61127882610d2d565b915061128383610d2d565b92508261129357611292611241565b5b828204905092915050565b5f6112a882610d2d565b91506112b383610d2d565b92508282039050818111156112cb576112ca6111a0565b5b9291505056fea2646970667358221220306be834ad8c26995c84fbf93a899290f94b7de18a2470167f7c5f059eb6ce3464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16CE CODESIZE SUB DUP1 PUSH3 0x16CE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2A4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0x17C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12B SWAP1 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x3B9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x26E DUP3 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x280 DUP2 PUSH3 0x262 JUMP JUMPDEST DUP2 EQ PUSH3 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x29E DUP2 PUSH3 0x275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2BD JUMPI PUSH3 0x2BC PUSH3 0x23F JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2CC DUP6 DUP3 DUP7 ADD PUSH3 0x28E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2DF DUP6 DUP3 DUP7 ADD PUSH3 0x28E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2F4 DUP2 PUSH3 0x262 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x30F PUSH0 DUP4 ADD DUP5 PUSH3 0x2E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x2061646472657373000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x381 PUSH1 0x28 DUP4 PUSH3 0x315 JUMP JUMPDEST SWAP2 POP PUSH3 0x38E DUP3 PUSH3 0x325 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x3B2 DUP2 PUSH3 0x373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1307 DUP1 PUSH3 0x3C7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD68F78F0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xEFC21DAA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFC21DAA EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF5CD0264 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFA435959 EQ PUSH2 0x295 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xD68F78F0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xD9C80108 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE6A4A8B5 EQ PUSH2 0x21F JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xBC390610 EQ PUSH2 0x1A9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1288AF02 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x2E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27F PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH10 0x34F086F3B33B68400000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x2F8 PUSH0 PUSH2 0xBB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x302 PUSH2 0xC7C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x418 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x42A PUSH2 0xA1A JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x4B8 DUP3 PUSH1 0x3 SLOAD PUSH2 0xCC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x506 SWAP3 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x517 PUSH2 0xCDE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x555 PUSH2 0xC7C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5E4 CALLER PUSH2 0x92E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60E PUSH1 0x2 PUSH2 0x600 PUSH1 0x3 DUP6 PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68D SWAP3 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x722 DUP6 DUP8 PUSH0 ADD SLOAD PUSH2 0xCC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP3 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B5 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 DUP4 PUSH0 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0xD11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x7F1 DUP3 PUSH1 0x4 SLOAD PUSH2 0xCC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP5 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH32 0x6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x92C PUSH2 0xCDE JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0x9AF DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0xD11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA07 PUSH1 0x64 PUSH2 0x9F9 PUSH4 0x1E13380 PUSH2 0x9EB DUP7 PUSH2 0x9DD DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH0 ADD MLOAD PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA4E PUSH1 0x5 PUSH2 0xA40 PUSH10 0x34F086F3B33B68400000 PUSH1 0x4 SLOAD PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x19 GT PUSH2 0xA60 JUMPI PUSH1 0x5 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0xA74 DUP3 PUSH1 0x19 PUSH2 0xD11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xA8C PUSH2 0xB32 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xBB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xB3A PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 PUSH2 0x520 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB7 JUMPI PUSH2 0xB7B PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB7 SWAP1 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x126E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH0 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8B DUP3 PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP2 EQ PUSH2 0xDA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB6 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH0 DUP4 ADD DUP7 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xE07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xE14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP2 EQ PUSH2 0xE2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE40 DUP2 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5A PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE68 DUP5 DUP3 DUP6 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7A DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE93 PUSH0 DUP4 ADD DUP5 PUSH2 0xE71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC PUSH2 0xEB7 PUSH2 0xEB2 DUP5 PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xECD DUP3 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEDE DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEE DUP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF51 PUSH1 0x15 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0xF5C DUP3 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7E DUP2 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF98 PUSH0 DUP4 ADD DUP7 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xFA5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xFB2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCE DUP2 PUSH2 0xFBA JUMP JUMPDEST DUP2 EQ PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE9 DUP2 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1003 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1011 DUP5 DUP3 DUP6 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x104E PUSH1 0xF DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1059 DUP3 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x107B DUP2 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1095 PUSH0 DUP4 ADD DUP6 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x10A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10DD PUSH1 0x14 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x10E8 DUP3 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x110A DUP2 PUSH2 0x10D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1124 PUSH0 DUP4 ADD DUP6 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x1131 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x116C PUSH1 0x1F DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1177 DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1199 DUP2 PUSH2 0x1160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D7 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x11E2 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120A DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1223 DUP2 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1278 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x1283 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1293 JUMPI PUSH2 0x1292 PUSH2 0x1241 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12A8 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x12B3 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12CB JUMPI PUSH2 0x12CA PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH12 0xE834AD8C26995C84FBF93A89 SWAP3 SWAP1 0xF9 0x4B PUSH30 0xE18A2470167F7C5F059EB6CE3464736F6C63430008140033000000000000 ",
							"sourceMap": "297:3256:5:-:0;;;1229:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:6;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1348:1:5::1;1319:31;;:17;:31;;::::0;1311:84:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1425:17;1406:9;;:37;;;;;;;;;;;;;;;;;;1229:222:::0;;297:3256;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:227::-;2025:34;2021:1;2013:6;2009:14;2002:58;2094:10;2089:2;2081:6;2077:15;2070:35;1885:227;:::o;2118:366::-;2260:3;2281:67;2345:2;2340:3;2281:67;:::i;:::-;2274:74;;2357:93;2446:3;2357:93;:::i;:::-;2475:2;2470:3;2466:12;2459:19;;2118:366;;;:::o;2490:419::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:131;2897:4;2771:131;:::i;:::-;2763:139;;2490:419;;;:::o;297:3256:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MINIMUM_ANNUAL_RETURN_654": {
									"entryPoint": 2687,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINT_RATE_DECREASE_657": {
									"entryPoint": 2861,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@STARTING_ANNUAL_RETURN_651": {
									"entryPoint": 1352,
									"id": 651,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKENS_PER_DECREASE_665": {
									"entryPoint": 691,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2866,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 3366,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 3294,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 3196,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3001,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_496": {
									"entryPoint": 3273,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_967": {
									"entryPoint": 2350,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_541": {
									"entryPoint": 3324,
									"id": 541,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrentRewardRate_923": {
									"entryPoint": 2586,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_526": {
									"entryPoint": 3303,
									"id": 526,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nutzToken_648": {
									"entryPoint": 2824,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1312,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 743,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeTokens_792": {
									"entryPoint": 762,
									"id": 792,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_681": {
									"entryPoint": 705,
									"id": 681,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_511": {
									"entryPoint": 3345,
									"id": 511,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalRewardsMinted_669": {
									"entryPoint": 2580,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_667": {
									"entryPoint": 1306,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2692,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstakeAndClaimRewards_893": {
									"entryPoint": 1357,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 3828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11215:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"src": "442:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:6",
														"type": ""
													}
												],
												"src": "769:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:6",
														"type": ""
													}
												],
												"src": "901:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:6"
															},
															"nodeType": "YulIf",
															"src": "1056:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:6",
														"type": ""
													}
												],
												"src": "1003:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:6",
														"type": ""
													}
												],
												"src": "1131:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:6"
															},
															"nodeType": "YulIf",
															"src": "1352:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:6",
														"type": ""
													}
												],
												"src": "1276:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1765:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1775:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1787:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1783:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1775:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1855:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1868:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1879:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1811:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1811:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1936:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1949:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1960:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1892:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2018:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2042:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2027:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2027:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1974:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1974:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1974:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1733:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1741:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1749:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1760:4:6",
														"type": ""
													}
												],
												"src": "1611:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2102:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2159:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2161:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2125:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2150:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2132:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2132:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2122:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:43:6"
															},
															"nodeType": "YulIf",
															"src": "2112:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2095:5:6",
														"type": ""
													}
												],
												"src": "2059:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2239:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2249:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2271:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2258:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2314:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2287:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2217:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2225:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2233:5:6",
														"type": ""
													}
												],
												"src": "2187:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2398:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2444:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2446:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2446:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2446:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2419:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2428:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2415:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:32:6"
															},
															"nodeType": "YulIf",
															"src": "2408:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2537:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2552:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2581:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2616:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2627:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2612:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2612:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2636:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2591:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2581:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:6",
														"type": ""
													}
												],
												"src": "2332:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2732:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2749:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2772:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2754:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2742:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2727:3:6",
														"type": ""
													}
												],
												"src": "2667:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2889:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2899:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2911:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2907:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2899:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2979:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2992:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3003:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2935:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2861:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2873:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2884:4:6",
														"type": ""
													}
												],
												"src": "2791:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3051:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3061:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3068:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3061:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3037:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3047:3:6",
														"type": ""
													}
												],
												"src": "3019:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3145:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3155:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3213:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3195:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3195:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3186:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3168:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3155:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3125:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3135:9:6",
														"type": ""
													}
												],
												"src": "3085:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3293:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3303:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3347:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3316:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3303:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3273:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3283:9:6",
														"type": ""
													}
												],
												"src": "3233:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3439:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3449:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3493:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3462:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3449:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3419:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3429:9:6",
														"type": ""
													}
												],
												"src": "3365:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3590:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3607:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3657:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3612:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3612:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3600:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3585:3:6",
														"type": ""
													}
												],
												"src": "3511:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3788:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3798:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3821:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3806:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3806:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3798:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3892:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3916:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3834:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3834:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3834:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3760:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3772:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3783:4:6",
														"type": ""
													}
												],
												"src": "3676:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4028:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4045:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4038:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4066:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4085:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4066:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4000:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4005:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4016:11:6",
														"type": ""
													}
												],
												"src": "3932:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4213:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4235:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4243:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4231:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4247:23:6",
																		"type": "",
																		"value": "Cannot stake 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4224:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4205:6:6",
														"type": ""
													}
												],
												"src": "4107:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4506:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4511:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4447:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4440:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4612:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																	"nodeType": "YulIdentifier",
																	"src": "4523:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4523:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4625:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4636:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4641:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4418:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4426:3:6",
														"type": ""
													}
												],
												"src": "4284:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4827:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4837:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4849:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4860:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4837:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4884:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4895:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4880:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4880:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4903:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4909:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4899:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4899:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4873:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4873:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4873:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4929:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5063:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4937:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4929:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4807:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4822:4:6",
														"type": ""
													}
												],
												"src": "4656:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5235:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5245:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5245:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5325:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5338:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5349:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5334:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5334:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5281:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5281:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5430:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5362:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5362:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5488:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5501:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5512:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5497:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5444:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5191:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5203:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5211:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5219:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5230:4:6",
														"type": ""
													}
												],
												"src": "5081:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5571:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5581:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5606:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5599:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5599:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5581:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5553:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5563:7:6",
														"type": ""
													}
												],
												"src": "5529:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5665:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5719:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5728:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5731:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5721:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5721:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5721:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5688:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5710:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5695:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5695:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5685:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:40:6"
															},
															"nodeType": "YulIf",
															"src": "5675:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5658:5:6",
														"type": ""
													}
												],
												"src": "5625:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5807:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5817:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5832:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5826:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5817:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5872:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5848:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5848:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5785:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5793:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5801:5:6",
														"type": ""
													}
												],
												"src": "5747:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5964:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6010:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6012:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6012:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6012:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5985:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5994:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5981:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5981:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6006:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:32:6"
															},
															"nodeType": "YulIf",
															"src": "5974:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6103:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6118:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6132:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6122:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6147:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6190:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6201:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6186:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6186:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6210:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6157:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6147:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5934:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5945:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5957:6:6",
														"type": ""
													}
												],
												"src": "5890:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6347:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6369:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6377:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6365:14:6"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6381:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6358:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6358:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6339:6:6",
														"type": ""
													}
												],
												"src": "6241:165:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6558:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6568:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6634:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6575:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6568:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6740:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "6651:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6651:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6764:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6769:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6760:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6753:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6546:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6554:3:6",
														"type": ""
													}
												],
												"src": "6412:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6955:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6965:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6977:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6973:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6973:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6965:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7008:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7031:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7037:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7027:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7027:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7001:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7001:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7057:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7191:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7065:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7057:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6935:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6950:4:6",
														"type": ""
													}
												],
												"src": "6784:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7335:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7345:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7357:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7368:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7345:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7425:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7449:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7381:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7381:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7506:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7519:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7530:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7515:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7515:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7462:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7299:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7311:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7319:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7330:4:6",
														"type": ""
													}
												],
												"src": "7209:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7653:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7675:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7671:14:6"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f20756e7374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7687:22:6",
																		"type": "",
																		"value": "No tokens to unstake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7664:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7645:6:6",
														"type": ""
													}
												],
												"src": "7547:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7869:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7879:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7945:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7950:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7886:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7886:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7879:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8051:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																	"nodeType": "YulIdentifier",
																	"src": "7962:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7962:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8064:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8075:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8080:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8071:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8071:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8064:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7857:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7865:3:6",
														"type": ""
													}
												],
												"src": "7723:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8266:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8276:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8288:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8276:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8323:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8334:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8319:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8319:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8342:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8348:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8312:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8312:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8312:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8368:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8502:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8376:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8376:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8368:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8246:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8261:4:6",
														"type": ""
													}
												],
												"src": "8095:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8646:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8656:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8668:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8679:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8664:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8656:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8736:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8749:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8760:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8745:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8745:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8692:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8692:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8817:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8830:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8841:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8826:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8826:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8773:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8773:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8773:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8610:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8622:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8630:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8641:4:6",
														"type": ""
													}
												],
												"src": "8520:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8964:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8986:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8994:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8982:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8982:14:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8998:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8975:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8975:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8975:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8956:6:6",
														"type": ""
													}
												],
												"src": "8858:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9191:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9201:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9267:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9272:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9208:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9201:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9373:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "9284:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9284:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9284:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9386:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9397:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9402:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9393:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9393:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9386:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9179:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9187:3:6",
														"type": ""
													}
												],
												"src": "9045:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9588:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9598:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9610:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9621:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9606:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9606:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9598:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9645:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9656:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9641:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9641:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9664:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9670:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9660:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9660:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9634:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9634:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9690:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9824:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9698:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9690:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9568:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9583:4:6",
														"type": ""
													}
												],
												"src": "9417:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9870:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9890:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9880:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9880:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9880:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9984:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9987:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9977:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9977:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10008:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10011:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10001:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10001:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10001:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9842:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10072:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10082:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10105:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10087:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10082:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10116:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10139:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10121:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10116:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10190:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10192:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10192:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10192:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10182:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10185:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10179:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10179:10:6"
															},
															"nodeType": "YulIf",
															"src": "10176:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10059:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10062:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10068:3:6",
														"type": ""
													}
												],
												"src": "10028:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10273:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10283:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10306:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10288:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10288:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10283:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10317:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10340:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10322:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10322:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10317:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10351:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10374:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10377:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10370:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10370:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10355:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10388:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10417:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10399:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10388:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10606:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10608:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10608:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10608:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10539:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10532:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10532:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10562:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10569:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10578:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10565:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10565:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10559:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10559:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10512:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10512:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10492:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:113:6"
															},
															"nodeType": "YulIf",
															"src": "10489:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10256:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10259:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10265:7:6",
														"type": ""
													}
												],
												"src": "10225:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10669:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10689:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10679:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10679:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10783:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10786:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10776:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10776:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10807:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10810:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10800:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10800:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10800:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10641:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10869:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10879:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10902:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10884:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10884:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10879:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10913:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10936:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10918:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10918:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10913:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10960:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10962:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10962:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10962:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10957:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10950:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10950:9:6"
															},
															"nodeType": "YulIf",
															"src": "10947:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10992:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11001:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11004:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10997:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10997:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10992:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10858:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10861:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10867:1:6",
														"type": ""
													}
												],
												"src": "10827:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11073:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11096:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11078:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11073:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11107:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11130:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11112:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11112:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11107:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11141:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11153:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11156:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11149:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11141:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11183:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11185:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11185:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11185:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11174:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11180:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11171:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:11:6"
															},
															"nodeType": "YulIf",
															"src": "11168:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11049:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11052:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11058:4:6",
														"type": ""
													}
												],
												"src": "11018:194:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to unstake\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c8063d68f78f011610095578063efc21daa11610064578063efc21daa1461023d578063f2fde38b1461025b578063f5cd026414610277578063fa43595914610295576100f3565b8063d68f78f0146101c7578063d82e3962146101d1578063d9c8010814610201578063e6a4a8b51461021f576100f3565b80637547c7a3116100d15780637547c7a314610151578063817b1cd21461016d5780638da5cb5b1461018b578063bc390610146101a9576100f3565b80631288af02146100f757806316934fc414610115578063715018a614610147575b5f80fd5b6100ff6102b3565b60405161010c9190610d45565b60405180910390f35b61012f600480360381019061012a9190610dbc565b6102c1565b60405161013e93929190610de7565b60405180910390f35b61014f6102e7565b005b61016b60048036038101906101669190610e46565b6102fa565b005b61017561051a565b6040516101829190610d45565b60405180910390f35b610193610520565b6040516101a09190610e80565b60405180910390f35b6101b1610548565b6040516101be9190610d45565b60405180910390f35b6101cf61054d565b005b6101eb60048036038101906101e69190610dbc565b61092e565b6040516101f89190610d45565b60405180910390f35b610209610a14565b6040516102169190610d45565b60405180910390f35b610227610a1a565b6040516102349190610d45565b60405180910390f35b610245610a7f565b6040516102529190610d45565b60405180910390f35b61027560048036038101906102709190610dbc565b610a84565b005b61027f610b08565b60405161028c9190610ef4565b60405180910390f35b61029d610b2d565b6040516102aa9190610d45565b60405180910390f35b6934f086f3b33b6840000081565b6005602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6102ef610b32565b6102f85f610bb9565b565b610302610c7c565b5f8111610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610f67565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103a293929190610f85565b6020604051808303815f875af11580156103be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e29190610fef565b610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890611064565b60405180910390fd5b5f61042a610a1a565b905060405180606001604052808381526020018281526020014281525060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155604082015181600201559050506104b882600354610cc990919063ffffffff16565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908383604051610506929190611082565b60405180910390a250610517610cde565b50565b60035481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601981565b610555610c7c565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154116105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d1906110f3565b60405180910390fd5b5f6105e43361092e565b90505f61060e6002610600600385610ce790919063ffffffff16565b610cfc90919063ffffffff16565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161068d929190611111565b6020604051808303815f875af11580156106a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106cd9190610fef565b5060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361072285875f0154610cc990919063ffffffff16565b6040518363ffffffff1660e01b815260040161073f929190611111565b6020604051808303815f875af115801561075b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077f9190610fef565b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590611064565b60405180910390fd5b6107d6835f0154600354610d1190919063ffffffff16565b6003819055506107f182600454610cc990919063ffffffff16565b60048190555060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f9055600282015f905550503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75845f01546040516108949190610d45565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486836040516108e29190610d45565b60405180910390a27f6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7816040516109199190610d45565b60405180910390a150505061092c610cde565b565b5f8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f6109af826040015142610d1190919063ffffffff16565b90505f610a0760646109f96301e133806109eb866109dd89602001518a5f0151610ce790919063ffffffff16565b610ce790919063ffffffff16565b610cfc90919063ffffffff16565b610cfc90919063ffffffff16565b9050809350505050919050565b60045481565b5f80610a4e6005610a406934f086f3b33b68400000600454610cfc90919063ffffffff16565b610ce790919063ffffffff16565b90505f81601911610a60576005610a75565b610a74826019610d1190919063ffffffff16565b5b9050809250505090565b600581565b610a8c610b32565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610afc575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610af39190610e80565b60405180910390fd5b610b0581610bb9565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600581565b610b3a610d26565b73ffffffffffffffffffffffffffffffffffffffff16610b58610520565b73ffffffffffffffffffffffffffffffffffffffff1614610bb757610b7b610d26565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bae9190610e80565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60025f5403610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb790611182565b60405180910390fd5b60025f81905550565b5f8183610cd691906111cd565b905092915050565b60015f81905550565b5f8183610cf49190611200565b905092915050565b5f8183610d09919061126e565b905092915050565b5f8183610d1e919061129e565b905092915050565b5f33905090565b5f819050919050565b610d3f81610d2d565b82525050565b5f602082019050610d585f830184610d36565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d8b82610d62565b9050919050565b610d9b81610d81565b8114610da5575f80fd5b50565b5f81359050610db681610d92565b92915050565b5f60208284031215610dd157610dd0610d5e565b5b5f610dde84828501610da8565b91505092915050565b5f606082019050610dfa5f830186610d36565b610e076020830185610d36565b610e146040830184610d36565b949350505050565b610e2581610d2d565b8114610e2f575f80fd5b50565b5f81359050610e4081610e1c565b92915050565b5f60208284031215610e5b57610e5a610d5e565b5b5f610e6884828501610e32565b91505092915050565b610e7a81610d81565b82525050565b5f602082019050610e935f830184610e71565b92915050565b5f819050919050565b5f610ebc610eb7610eb284610d62565b610e99565b610d62565b9050919050565b5f610ecd82610ea2565b9050919050565b5f610ede82610ec3565b9050919050565b610eee81610ed4565b82525050565b5f602082019050610f075f830184610ee5565b92915050565b5f82825260208201905092915050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f610f51601583610f0d565b9150610f5c82610f1d565b602082019050919050565b5f6020820190508181035f830152610f7e81610f45565b9050919050565b5f606082019050610f985f830186610e71565b610fa56020830185610e71565b610fb26040830184610d36565b949350505050565b5f8115159050919050565b610fce81610fba565b8114610fd8575f80fd5b50565b5f81519050610fe981610fc5565b92915050565b5f6020828403121561100457611003610d5e565b5b5f61101184828501610fdb565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61104e600f83610f0d565b91506110598261101a565b602082019050919050565b5f6020820190508181035f83015261107b81611042565b9050919050565b5f6040820190506110955f830185610d36565b6110a26020830184610d36565b9392505050565b7f4e6f20746f6b656e7320746f20756e7374616b650000000000000000000000005f82015250565b5f6110dd601483610f0d565b91506110e8826110a9565b602082019050919050565b5f6020820190508181035f83015261110a816110d1565b9050919050565b5f6040820190506111245f830185610e71565b6111316020830184610d36565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61116c601f83610f0d565b915061117782611138565b602082019050919050565b5f6020820190508181035f83015261119981611160565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111d782610d2d565b91506111e283610d2d565b92508282019050808211156111fa576111f96111a0565b5b92915050565b5f61120a82610d2d565b915061121583610d2d565b925082820261122381610d2d565b9150828204841483151761123a576112396111a0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61127882610d2d565b915061128383610d2d565b92508261129357611292611241565b5b828204905092915050565b5f6112a882610d2d565b91506112b383610d2d565b92508282039050818111156112cb576112ca6111a0565b5b9291505056fea2646970667358221220306be834ad8c26995c84fbf93a899290f94b7de18a2470167f7c5f059eb6ce3464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD68F78F0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xEFC21DAA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFC21DAA EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF5CD0264 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFA435959 EQ PUSH2 0x295 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xD68F78F0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xD9C80108 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE6A4A8B5 EQ PUSH2 0x21F JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xBC390610 EQ PUSH2 0x1A9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1288AF02 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x2E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27F PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH10 0x34F086F3B33B68400000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x2F8 PUSH0 PUSH2 0xBB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x302 PUSH2 0xC7C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x418 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x42A PUSH2 0xA1A JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x4B8 DUP3 PUSH1 0x3 SLOAD PUSH2 0xCC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x506 SWAP3 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x517 PUSH2 0xCDE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x555 PUSH2 0xC7C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5E4 CALLER PUSH2 0x92E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60E PUSH1 0x2 PUSH2 0x600 PUSH1 0x3 DUP6 PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68D SWAP3 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x722 DUP6 DUP8 PUSH0 ADD SLOAD PUSH2 0xCC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP3 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B5 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 DUP4 PUSH0 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0xD11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x7F1 DUP3 PUSH1 0x4 SLOAD PUSH2 0xCC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP5 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH32 0x6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x92C PUSH2 0xCDE JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0x9AF DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0xD11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA07 PUSH1 0x64 PUSH2 0x9F9 PUSH4 0x1E13380 PUSH2 0x9EB DUP7 PUSH2 0x9DD DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH0 ADD MLOAD PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA4E PUSH1 0x5 PUSH2 0xA40 PUSH10 0x34F086F3B33B68400000 PUSH1 0x4 SLOAD PUSH2 0xCFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x19 GT PUSH2 0xA60 JUMPI PUSH1 0x5 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0xA74 DUP3 PUSH1 0x19 PUSH2 0xD11 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xA8C PUSH2 0xB32 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xBB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xB3A PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 PUSH2 0x520 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB7 JUMPI PUSH2 0xB7B PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB7 SWAP1 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x126E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH0 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8B DUP3 PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP2 EQ PUSH2 0xDA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB6 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH0 DUP4 ADD DUP7 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xE07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xE14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP2 EQ PUSH2 0xE2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE40 DUP2 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5A PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE68 DUP5 DUP3 DUP6 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7A DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE93 PUSH0 DUP4 ADD DUP5 PUSH2 0xE71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC PUSH2 0xEB7 PUSH2 0xEB2 DUP5 PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xECD DUP3 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEDE DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEE DUP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF51 PUSH1 0x15 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0xF5C DUP3 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7E DUP2 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF98 PUSH0 DUP4 ADD DUP7 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xFA5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xFB2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCE DUP2 PUSH2 0xFBA JUMP JUMPDEST DUP2 EQ PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE9 DUP2 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1003 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1011 DUP5 DUP3 DUP6 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x104E PUSH1 0xF DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1059 DUP3 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x107B DUP2 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1095 PUSH0 DUP4 ADD DUP6 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x10A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10DD PUSH1 0x14 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x10E8 DUP3 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x110A DUP2 PUSH2 0x10D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1124 PUSH0 DUP4 ADD DUP6 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x1131 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x116C PUSH1 0x1F DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1177 DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1199 DUP2 PUSH2 0x1160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D7 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x11E2 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120A DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1223 DUP2 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1278 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x1283 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1293 JUMPI PUSH2 0x1292 PUSH2 0x1241 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12A8 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH2 0x12B3 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12CB JUMPI PUSH2 0x12CA PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH12 0xE834AD8C26995C84FBF93A89 SWAP3 SWAP1 0xF9 0x4B PUSH30 0xE18A2470167F7C5F059EB6CE3464736F6C63430008140033000000000000 ",
							"sourceMap": "297:3256:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;941:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1459:479:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;753:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;418:51:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1946:830;;;:::i;:::-;;3147:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2784:355;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;493:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;388:23:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;570:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:65;692:19;646:65;:::o;941:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1459:479:5:-;2261:21:1;:19;:21::i;:::-;1548:1:5::1;1538:7;:11;1530:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1594:9;;;;;;;;;;;:22;;;1617:10;1637:4;1644:7;1594:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1586:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1685:25;1713:22;:20;:22::i;:::-;1685:50;;1767;;;;;;;;1773:7;1767:50;;;;1782:17;1767:50;;;;1801:15;1767:50;;::::0;1746:6:::1;:18;1753:10;1746:18;;;;;;;;;;;;;;;:71;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:24;1858:7;1842:11;;:15;;:24;;;;:::i;:::-;1828:11;:38;;;;1891:10;1884:46;;;1903:7;1912:17;1884:46;;;;;;;:::i;:::-;;;;;;;;1519:419;2303:20:1::0;:18;:20::i;:::-;1459:479:5;:::o;753:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;418:51:5:-;467:2;418:51;:::o;1946:830::-;2261:21:1;:19;:21::i;:::-;2013:23:5::1;2039:6;:18;2046:10;2039:18;;;;;;;;;;;;;;;2013:44;;2095:1;2076:9;:16;;;:20;2068:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2134:14;2151:27;2167:10;2151:15;:27::i;:::-;2134:44;;2189:18;2210:20;2228:1;2210:13;2221:1;2210:6;:10;;:13;;;;:::i;:::-;:17;;:20;;;;:::i;:::-;2189:41;;2273:9;;;;;;;;;;;:18;;;2300:9;;;;;;;;;;;2312:10;2273:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2386:9;;;;;;;;;;;:18;;;2405:10;2417:28;2438:6;2417:9;:16;;;:20;;:28;;;;:::i;:::-;2386:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2378:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2493:33;2509:9;:16;;;2493:11;;:15;;:33;;;;:::i;:::-;2479:11;:47;;;;2558:30;2581:6;2558:18;;:22;;:30;;;;:::i;:::-;2537:18;:51;;;;2608:6;:18;2615:10;2608:18;;;;;;;;;;;;;;;;2601:25:::0;::::1;;;;;;;;;;;;;;;;;;;2653:10;2644:38;;;2665:9;:16;;;2644:38;;;;;;:::i;:::-;;;;;;;;2709:10;2698:30;;;2721:6;2698:30;;;;;;:::i;:::-;;;;;;;;2744:24;2757:10;2744:24;;;;;;:::i;:::-;;;;;;;;2002:774;;;2303:20:1::0;:18;:20::i;:::-;1946:830:5:o;3147:344::-;3208:7;3228:22;3253:6;:13;3260:5;3253:13;;;;;;;;;;;;;;;3228:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3277:23;3303:42;3323:9;:21;;;3303:15;:19;;:42;;;;:::i;:::-;3277:68;;3356:14;3373:86;3455:3;3373:77;3441:8;3373:63;3420:15;3373:42;3394:9;:20;;;3373:9;:16;;;:20;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;:67;;:77;;;;:::i;:::-;:81;;:86;;;;:::i;:::-;3356:103;;3477:6;3470:13;;;;;3147:344;;;:::o;786:33::-;;;;:::o;2784:355::-;2837:7;2857:22;2882:67;615:1;2882:43;692:19;2882:18;;:22;;:43;;;;:::i;:::-;:47;;:67;;;;:::i;:::-;2857:92;;2960:25;3013:14;467:2;2988:39;:108;;541:1;2988:108;;;3030:42;3057:14;467:2;3030:26;;:42;;;;:::i;:::-;2988:108;2960:136;;3114:17;3107:24;;;;2784:355;:::o;493:49::-;541:1;493:49;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;388:23:5:-;;;;;;;;;;;;;:::o;570:46::-;615:1;570:46;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;656::3:-;709:7;735:10;728:17;;656:96;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:442::-;1760:4;1798:2;1787:9;1783:18;1775:26;;1811:71;1879:1;1868:9;1864:17;1855:6;1811:71;:::i;:::-;1892:72;1960:2;1949:9;1945:18;1936:6;1892:72;:::i;:::-;1974;2042:2;2031:9;2027:18;2018:6;1974:72;:::i;:::-;1611:442;;;;;;:::o;2059:122::-;2132:24;2150:5;2132:24;:::i;:::-;2125:5;2122:35;2112:63;;2171:1;2168;2161:12;2112:63;2059:122;:::o;2187:139::-;2233:5;2271:6;2258:20;2249:29;;2287:33;2314:5;2287:33;:::i;:::-;2187:139;;;;:::o;2332:329::-;2391:6;2440:2;2428:9;2419:7;2415:23;2411:32;2408:119;;;2446:79;;:::i;:::-;2408:119;2566:1;2591:53;2636:7;2627:6;2616:9;2612:22;2591:53;:::i;:::-;2581:63;;2537:117;2332:329;;;;:::o;2667:118::-;2754:24;2772:5;2754:24;:::i;:::-;2749:3;2742:37;2667:118;;:::o;2791:222::-;2884:4;2922:2;2911:9;2907:18;2899:26;;2935:71;3003:1;2992:9;2988:17;2979:6;2935:71;:::i;:::-;2791:222;;;;:::o;3019:60::-;3047:3;3068:5;3061:12;;3019:60;;;:::o;3085:142::-;3135:9;3168:53;3186:34;3195:24;3213:5;3195:24;:::i;:::-;3186:34;:::i;:::-;3168:53;:::i;:::-;3155:66;;3085:142;;;:::o;3233:126::-;3283:9;3316:37;3347:5;3316:37;:::i;:::-;3303:50;;3233:126;;;:::o;3365:140::-;3429:9;3462:37;3493:5;3462:37;:::i;:::-;3449:50;;3365:140;;;:::o;3511:159::-;3612:51;3657:5;3612:51;:::i;:::-;3607:3;3600:64;3511:159;;:::o;3676:250::-;3783:4;3821:2;3810:9;3806:18;3798:26;;3834:85;3916:1;3905:9;3901:17;3892:6;3834:85;:::i;:::-;3676:250;;;;:::o;3932:169::-;4016:11;4050:6;4045:3;4038:19;4090:4;4085:3;4081:14;4066:29;;3932:169;;;;:::o;4107:171::-;4247:23;4243:1;4235:6;4231:14;4224:47;4107:171;:::o;4284:366::-;4426:3;4447:67;4511:2;4506:3;4447:67;:::i;:::-;4440:74;;4523:93;4612:3;4523:93;:::i;:::-;4641:2;4636:3;4632:12;4625:19;;4284:366;;;:::o;4656:419::-;4822:4;4860:2;4849:9;4845:18;4837:26;;4909:9;4903:4;4899:20;4895:1;4884:9;4880:17;4873:47;4937:131;5063:4;4937:131;:::i;:::-;4929:139;;4656:419;;;:::o;5081:442::-;5230:4;5268:2;5257:9;5253:18;5245:26;;5281:71;5349:1;5338:9;5334:17;5325:6;5281:71;:::i;:::-;5362:72;5430:2;5419:9;5415:18;5406:6;5362:72;:::i;:::-;5444;5512:2;5501:9;5497:18;5488:6;5444:72;:::i;:::-;5081:442;;;;;;:::o;5529:90::-;5563:7;5606:5;5599:13;5592:21;5581:32;;5529:90;;;:::o;5625:116::-;5695:21;5710:5;5695:21;:::i;:::-;5688:5;5685:32;5675:60;;5731:1;5728;5721:12;5675:60;5625:116;:::o;5747:137::-;5801:5;5832:6;5826:13;5817:22;;5848:30;5872:5;5848:30;:::i;:::-;5747:137;;;;:::o;5890:345::-;5957:6;6006:2;5994:9;5985:7;5981:23;5977:32;5974:119;;;6012:79;;:::i;:::-;5974:119;6132:1;6157:61;6210:7;6201:6;6190:9;6186:22;6157:61;:::i;:::-;6147:71;;6103:125;5890:345;;;;:::o;6241:165::-;6381:17;6377:1;6369:6;6365:14;6358:41;6241:165;:::o;6412:366::-;6554:3;6575:67;6639:2;6634:3;6575:67;:::i;:::-;6568:74;;6651:93;6740:3;6651:93;:::i;:::-;6769:2;6764:3;6760:12;6753:19;;6412:366;;;:::o;6784:419::-;6950:4;6988:2;6977:9;6973:18;6965:26;;7037:9;7031:4;7027:20;7023:1;7012:9;7008:17;7001:47;7065:131;7191:4;7065:131;:::i;:::-;7057:139;;6784:419;;;:::o;7209:332::-;7330:4;7368:2;7357:9;7353:18;7345:26;;7381:71;7449:1;7438:9;7434:17;7425:6;7381:71;:::i;:::-;7462:72;7530:2;7519:9;7515:18;7506:6;7462:72;:::i;:::-;7209:332;;;;;:::o;7547:170::-;7687:22;7683:1;7675:6;7671:14;7664:46;7547:170;:::o;7723:366::-;7865:3;7886:67;7950:2;7945:3;7886:67;:::i;:::-;7879:74;;7962:93;8051:3;7962:93;:::i;:::-;8080:2;8075:3;8071:12;8064:19;;7723:366;;;:::o;8095:419::-;8261:4;8299:2;8288:9;8284:18;8276:26;;8348:9;8342:4;8338:20;8334:1;8323:9;8319:17;8312:47;8376:131;8502:4;8376:131;:::i;:::-;8368:139;;8095:419;;;:::o;8520:332::-;8641:4;8679:2;8668:9;8664:18;8656:26;;8692:71;8760:1;8749:9;8745:17;8736:6;8692:71;:::i;:::-;8773:72;8841:2;8830:9;8826:18;8817:6;8773:72;:::i;:::-;8520:332;;;;;:::o;8858:181::-;8998:33;8994:1;8986:6;8982:14;8975:57;8858:181;:::o;9045:366::-;9187:3;9208:67;9272:2;9267:3;9208:67;:::i;:::-;9201:74;;9284:93;9373:3;9284:93;:::i;:::-;9402:2;9397:3;9393:12;9386:19;;9045:366;;;:::o;9417:419::-;9583:4;9621:2;9610:9;9606:18;9598:26;;9670:9;9664:4;9660:20;9656:1;9645:9;9641:17;9634:47;9698:131;9824:4;9698:131;:::i;:::-;9690:139;;9417:419;;;:::o;9842:180::-;9890:77;9887:1;9880:88;9987:4;9984:1;9977:15;10011:4;10008:1;10001:15;10028:191;10068:3;10087:20;10105:1;10087:20;:::i;:::-;10082:25;;10121:20;10139:1;10121:20;:::i;:::-;10116:25;;10164:1;10161;10157:9;10150:16;;10185:3;10182:1;10179:10;10176:36;;;10192:18;;:::i;:::-;10176:36;10028:191;;;;:::o;10225:410::-;10265:7;10288:20;10306:1;10288:20;:::i;:::-;10283:25;;10322:20;10340:1;10322:20;:::i;:::-;10317:25;;10377:1;10374;10370:9;10399:30;10417:11;10399:30;:::i;:::-;10388:41;;10578:1;10569:7;10565:15;10562:1;10559:22;10539:1;10532:9;10512:83;10489:139;;10608:18;;:::i;:::-;10489:139;10273:362;10225:410;;;;:::o;10641:180::-;10689:77;10686:1;10679:88;10786:4;10783:1;10776:15;10810:4;10807:1;10800:15;10827:185;10867:1;10884:20;10902:1;10884:20;:::i;:::-;10879:25;;10918:20;10936:1;10918:20;:::i;:::-;10913:25;;10957:1;10947:35;;10962:18;;:::i;:::-;10947:35;11004:1;11001;10997:9;10992:14;;10827:185;;;;:::o;11018:194::-;11058:4;11078:20;11096:1;11078:20;:::i;:::-;11073:25;;11112:20;11130:1;11112:20;:::i;:::-;11107:25;;11156:1;11153;11149:9;11141:17;;11180:1;11174:4;11171:11;11168:37;;;11185:18;;:::i;:::-;11168:37;11018:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "974200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MINIMUM_ANNUAL_RETURN()": "347",
								"MINT_RATE_DECREASE()": "413",
								"STARTING_ANNUAL_RETURN()": "414",
								"TOKENS_PER_DECREASE()": "349",
								"calculateReward(address)": "infinite",
								"getCurrentRewardRate()": "infinite",
								"nutzToken()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakes(address)": "infinite",
								"totalRewardsMinted()": "2492",
								"totalStaked()": "2470",
								"transferOwnership(address)": "infinite",
								"unstakeAndClaimRewards()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1229,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1348,
									"end": 1349,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1350,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1319,
									"end": 1350,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1336,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1350,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1319,
									"end": 1350,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1350,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1311,
									"end": 1395,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1311,
									"end": 1395,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1425,
									"end": 1442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1415,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1406,
									"end": 1415,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1443,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1451,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1805,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1834,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1835,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1859,
									"end": 1873,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2112,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1885,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2059,
									"name": "PUSH",
									"source": 6,
									"value": "546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2019,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2060,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2094,
									"end": 2104,
									"name": "PUSH",
									"source": 6,
									"value": "2061646472657373000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2081,
									"end": 2087,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2077,
									"end": 2092,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2070,
									"end": 2105,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2484,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2118,
									"end": 2484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2260,
									"end": 2263,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2281,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2345,
									"end": 2347,
									"name": "PUSH",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2340,
									"end": 2343,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2281,
									"end": 2348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2348,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2281,
									"end": 2348,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2274,
									"end": 2348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2274,
									"end": 2348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2357,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2446,
									"end": 2449,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2357,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2357,
									"end": 2450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2357,
									"end": 2450,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2357,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2475,
									"end": 2477,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2470,
									"end": 2473,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2478,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2484,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2484,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2484,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2490,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2656,
									"end": 2660,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2694,
									"end": 2696,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2683,
									"end": 2692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2679,
									"end": 2697,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2671,
									"end": 2697,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2671,
									"end": 2697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2752,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2737,
									"end": 2741,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2753,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2730,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2718,
									"end": 2727,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2714,
									"end": 2731,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2707,
									"end": 2754,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2771,
									"end": 2902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2897,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2771,
									"end": 2902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2771,
									"end": 2902,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2771,
									"end": 2902,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2771,
									"end": 2902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2763,
									"end": 2902,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2763,
									"end": 2902,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2909,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3553,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220306be834ad8c26995c84fbf93a899290f94b7de18a2470167f7c5f059eb6ce3464736f6c63430008140033",
									".code": [
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "D68F78F0"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "EFC21DAA"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "EFC21DAA"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "F5CD0264"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "FA435959"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "D68F78F0"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "D82E3962"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "D9C80108"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "E6A4A8B5"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "7547C7A3"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "7547C7A3"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "BC390610"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "1288AF02"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "16934FC4"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 3553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 646,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 646,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1459,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1459,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 753,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 753,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 418,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 418,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1946,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3147,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3147,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3147,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 786,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 786,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2784,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2784,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 493,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 493,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 388,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 388,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 570,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 570,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "34F086F3B33B68400000"
										},
										{
											"begin": 646,
											"end": 711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 646,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 941,
											"end": 980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1549,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1530,
											"end": 1575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1530,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1603,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1617,
											"end": 1627,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1594,
											"end": 1652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1594,
											"end": 1652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1594,
											"end": 1652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1586,
											"end": 1672,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1586,
											"end": 1672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1713,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1713,
											"end": 1735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1713,
											"end": 1735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1780,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1799,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1816,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1763,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1764,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1858,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1842,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1842,
											"end": 1857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1842,
											"end": 1866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1828,
											"end": 1866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 1901,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 1903,
											"end": 1910,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1884,
											"end": 1930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1930,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 753,
											"end": 779,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 467,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 418,
											"end": 469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1946,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2056,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2057,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2057,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2096,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2068,
											"end": 2121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2068,
											"end": 2121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2167,
											"end": 2177,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2151,
											"end": 2178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2151,
											"end": 2178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2228,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2221,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2210,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2210,
											"end": 2220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2210,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2210,
											"end": 2230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2322,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2273,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2273,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2404,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2405,
											"end": 2415,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2438,
											"end": 2444,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2426,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2417,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2417,
											"end": 2445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2386,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2386,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2386,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2378,
											"end": 2466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2378,
											"end": 2466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2509,
											"end": 2518,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2525,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2525,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2493,
											"end": 2504,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2493,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2479,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2581,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2576,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2558,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2558,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2537,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2625,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2626,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2663,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 2665,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2681,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2681,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2644,
											"end": 2682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2682,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2719,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 2721,
											"end": 2727,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2698,
											"end": 2728,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2728,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7"
										},
										{
											"begin": 2757,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2744,
											"end": 2768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2768,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2776,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2776,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2776,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3265,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3303,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3356,
											"end": 3370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3455,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3441,
											"end": 3449,
											"name": "PUSH",
											"source": 5,
											"value": "1E13380"
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3420,
											"end": 3435,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3414,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3382,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3373,
											"end": 3393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3373,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3373,
											"end": 3419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3373,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3373,
											"end": 3440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3373,
											"end": 3454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3373,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3356,
											"end": 3459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3356,
											"end": 3459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 819,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 786,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 692,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "34F086F3B33B68400000"
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2882,
											"end": 2904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2882,
											"end": 2929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2882,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 2985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 467,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3057,
											"end": 3071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 467,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3030,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3030,
											"end": 3056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3030,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2988,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 3096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 3096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 493,
											"end": 542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 493,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 411,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 388,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 570,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1800,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1787,
											"end": 1796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1811,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1892,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1974,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2132,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2157,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2278,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2287,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2426,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2446,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2636,
											"end": 2643,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2591,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2667,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2754,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2791,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3003,
											"end": 3004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2935,
											"end": 3006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 3006,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2935,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 3013,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3079,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3019,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3227,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3085,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3195,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3195,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3219,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3195,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3186,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3168,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3221,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3168,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3347,
											"end": 3352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3316,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3353,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3316,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3505,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3365,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3493,
											"end": 3498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3462,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3670,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3511,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3612,
											"end": 3663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3663,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3612,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3926,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3676,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3834,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3919,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3834,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3926,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4278,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4107,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4270,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F74207374616B65203020746F6B656E730000000000000000000000"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4224,
											"end": 4271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4650,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4284,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4506,
											"end": 4509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4447,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4612,
											"end": 4615,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4523,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4616,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4523,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4643,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4656,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4862,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4893,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4880,
											"end": 4897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5063,
											"end": 5067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4937,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 5068,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4937,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 5075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5253,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5281,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5362,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5501,
											"end": 5510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5444,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5619,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5529,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5612,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5613,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5625,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5710,
											"end": 5715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5695,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5716,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5695,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5717,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5675,
											"end": 5735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5733,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5735,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5675,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5884,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5747,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5801,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5826,
											"end": 5839,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5872,
											"end": 5877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5848,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5848,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5884,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5884,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 6235,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5890,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6008,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 5992,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6004,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6009,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6012,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6210,
											"end": 6217,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6190,
											"end": 6199,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6186,
											"end": 6208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6157,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6218,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6157,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6147,
											"end": 6218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6147,
											"end": 6218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 6235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 6235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6406,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6241,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6398,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6778,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6412,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6575,
											"end": 6642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6642,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6575,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6740,
											"end": 6743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6651,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6744,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6651,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6764,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 7203,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6784,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6977,
											"end": 6986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7047,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7191,
											"end": 7195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7065,
											"end": 7196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7196,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7065,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7057,
											"end": 7196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7057,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 7203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 7203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 7203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 7203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7434,
											"end": 7451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7381,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7512,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7462,
											"end": 7534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7717,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7547,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7709,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000"
										},
										{
											"begin": 7683,
											"end": 7684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 8089,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 7723,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7950,
											"end": 7952,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7886,
											"end": 7953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 7953,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7886,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8051,
											"end": 8054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7962,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8055,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7962,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8082,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8075,
											"end": 8078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 8089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 8089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 8089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 8089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8514,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8095,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8261,
											"end": 8265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8342,
											"end": 8346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8358,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8332,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8319,
											"end": 8336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8312,
											"end": 8359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8376,
											"end": 8507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8507,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8376,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8368,
											"end": 8507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8368,
											"end": 8507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8641,
											"end": 8645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8679,
											"end": 8681,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8760,
											"end": 8761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8749,
											"end": 8758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8736,
											"end": 8742,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8692,
											"end": 8763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8763,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8692,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8773,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8841,
											"end": 8843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8830,
											"end": 8839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8823,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8773,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8773,
											"end": 8845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8773,
											"end": 8845,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8773,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 9039,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 8858,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9031,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8986,
											"end": 8992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8982,
											"end": 8996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8975,
											"end": 9032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 9039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 9039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9411,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9045,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9272,
											"end": 9274,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9267,
											"end": 9270,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9208,
											"end": 9275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9275,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9208,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9201,
											"end": 9275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9201,
											"end": 9275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9373,
											"end": 9376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9284,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9377,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9284,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9397,
											"end": 9400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9836,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9417,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9583,
											"end": 9587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9623,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9610,
											"end": 9619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9598,
											"end": 9624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9598,
											"end": 9624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9670,
											"end": 9679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9660,
											"end": 9680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 9657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9654,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9641,
											"end": 9658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9634,
											"end": 9681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9824,
											"end": 9828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9698,
											"end": 9829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9829,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9698,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9690,
											"end": 9829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9690,
											"end": 9829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9842,
											"end": 10022,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9842,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9890,
											"end": 9967,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9968,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9984,
											"end": 9985,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9977,
											"end": 9992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10015,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10008,
											"end": 10009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10001,
											"end": 10016,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10219,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 10028,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10068,
											"end": 10071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10087,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10105,
											"end": 10106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10087,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10087,
											"end": 10107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10087,
											"end": 10107,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10087,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10121,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 10139,
											"end": 10140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10121,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10121,
											"end": 10141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10121,
											"end": 10141,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 10121,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10179,
											"end": 10189,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10176,
											"end": 10212,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10176,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10176,
											"end": 10212,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10192,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10192,
											"end": 10210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10210,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10192,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10176,
											"end": 10212,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10176,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10219,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10219,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10635,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10225,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10288,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10306,
											"end": 10307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10288,
											"end": 10308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10308,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10288,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10322,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10340,
											"end": 10341,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10322,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10322,
											"end": 10342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10322,
											"end": 10342,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10322,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10317,
											"end": 10342,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10317,
											"end": 10342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10417,
											"end": 10428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10399,
											"end": 10429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10429,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10399,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10578,
											"end": 10579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10569,
											"end": 10576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10580,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10563,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10559,
											"end": 10581,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10532,
											"end": 10541,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10512,
											"end": 10595,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10489,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10489,
											"end": 10628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10608,
											"end": 10626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10489,
											"end": 10628,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10489,
											"end": 10628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10273,
											"end": 10635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10821,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10641,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10689,
											"end": 10766,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10686,
											"end": 10687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10679,
											"end": 10767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10790,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10783,
											"end": 10784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10776,
											"end": 10791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10810,
											"end": 10814,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10807,
											"end": 10808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10800,
											"end": 10815,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 11012,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10827,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10884,
											"end": 10904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 10902,
											"end": 10903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10884,
											"end": 10904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10884,
											"end": 10904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10884,
											"end": 10904,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 10884,
											"end": 10904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10879,
											"end": 10904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10879,
											"end": 10904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 10936,
											"end": 10937,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10918,
											"end": 10938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10938,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 10918,
											"end": 10938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10913,
											"end": 10938,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10913,
											"end": 10938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10947,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10947,
											"end": 10982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10962,
											"end": 10980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10947,
											"end": 10982,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10947,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11004,
											"end": 11005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 11006,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 11012,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 11012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 11012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 11012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 11012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11212,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 11018,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11078,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 11096,
											"end": 11097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11078,
											"end": 11098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11098,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 11078,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11073,
											"end": 11098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11073,
											"end": 11098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11112,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 11130,
											"end": 11131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11112,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11112,
											"end": 11132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11112,
											"end": 11132,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 11112,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11132,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11158,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11180,
											"end": 11181,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11171,
											"end": 11182,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11205,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11168,
											"end": 11205,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11185,
											"end": 11203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11205,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11168,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11212,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11212,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/NUTZStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MINIMUM_ANNUAL_RETURN()": "efc21daa",
							"MINT_RATE_DECREASE()": "fa435959",
							"STARTING_ANNUAL_RETURN()": "bc390610",
							"TOKENS_PER_DECREASE()": "1288af02",
							"calculateReward(address)": "d82e3962",
							"getCurrentRewardRate()": "e6a4a8b5",
							"nutzToken()": "f5cd0264",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stakeTokens(uint256)": "7547c7a3",
							"stakes(address)": "16934fc4",
							"totalRewardsMinted()": "d9c80108",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstakeAndClaimRewards()": "d68f78f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nutzTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_ANNUAL_RETURN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_RATE_DECREASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STARTING_ANNUAL_RETURN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKENS_PER_DECREASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nutzToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeAndClaimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NUTZStaking.sol\":\"NUTZStaking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/NUTZStaking.sol\":{\"keccak256\":\"0xb8c945a8b194c502bec675d3a68eafef742c2bca4ac2b137f557f02b29b81918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cf3397621636212a1ffc3f894de9ae122d3ff1de365cbe293e3cc601cd9a4a3\",\"dweb:/ipfs/QmcupDA7pF17qgQ1tLxbntD4PnWFX7D6diCi8c81fVfUsk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "contracts/NUTZStaking.sol:NUTZStaking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/NUTZStaking.sol:NUTZStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 648,
								"contract": "contracts/NUTZStaking.sol:NUTZStaking",
								"label": "nutzToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 667,
								"contract": "contracts/NUTZStaking.sol:NUTZStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 669,
								"contract": "contracts/NUTZStaking.sol:NUTZStaking",
								"label": "totalRewardsMinted",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 681,
								"contract": "contracts/NUTZStaking.sol:NUTZStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Stake)676_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)676_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NUTZStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)676_storage"
							},
							"t_struct(Stake)676_storage": {
								"encoding": "inplace",
								"label": "struct NUTZStaking.Stake",
								"members": [
									{
										"astId": 671,
										"contract": "contracts/NUTZStaking.sol:NUTZStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 673,
										"contract": "contracts/NUTZStaking.sol:NUTZStaking",
										"label": "rewardRate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 675,
										"contract": "contracts/NUTZStaking.sol:NUTZStaking",
										"label": "stakingTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 290,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 290,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 290,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 290,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 290,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 290,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							632
						]
					},
					"id": 633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															336
														],
														"declarations": [
															{
																"constant": false,
																"id": 336,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 353,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 334,
															"id": 347,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 350,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 334,
														"id": 352,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 632,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 381,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 374,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 373,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 377,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 366,
														"id": 380,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 632,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 402,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 401,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 408,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 417,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 420,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 394,
														"id": 422,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 632,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 436,
															"id": 443,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 436,
														"id": 450,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 632,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 479,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 465,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 472,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 464,
															"id": 471,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 474,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 475,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 464,
														"id": 478,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 632,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 494,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 632,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 507,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 509,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 632,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 521,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 522,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 520,
												"id": 524,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 632,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 537,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 539,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 632,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 552,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 550,
												"id": 554,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 632,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "5054:106:4",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 569,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "5096:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 570,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "5101:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 572,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "5104:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 568,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "5138:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "5142:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 567,
														"id": 578,
														"nodeType": "Return",
														"src": "5131:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4972:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4994:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5045:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:4"
									},
									"scope": 632,
									"src": "4959:201:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5739:105:4",
										"statements": [
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5781:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 597,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "5788:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 593,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 601,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 592,
														"id": 603,
														"nodeType": "Return",
														"src": "5815:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5679:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:4"
									},
									"scope": 632,
									"src": "5644:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "6585:105:4",
										"statements": [
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 619,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "6627:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 622,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6634:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 618,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 624,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 626,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "6672:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 617,
														"id": 628,
														"nodeType": "Return",
														"src": "6661:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6503:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6514:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6525:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:4"
									},
									"scope": 632,
									"src": "6490:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 633,
							"src": "482:6210:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:4"
				},
				"id": 4
			},
			"contracts/NUTZStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NUTZStaking.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"NUTZStaking": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"SafeMath": [
							632
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 291,
							"src": "60:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 213,
							"src": "118:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 148,
							"src": "182:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 633,
							"src": "236:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 639,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"321:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "321:15:5"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "321:15:5"
								},
								{
									"baseName": {
										"id": 641,
										"name": "Ownable",
										"nameLocations": [
											"338:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "338:7:5"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "338:7:5"
								}
							],
							"canonicalName": "NUTZStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								147,
								320,
								212
							],
							"name": "NUTZStaking",
							"nameLocation": "306:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 645,
									"libraryName": {
										"id": 643,
										"name": "SafeMath",
										"nameLocations": [
											"359:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 632,
										"src": "359:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "353:27:5",
									"typeName": {
										"id": 644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f5cd0264",
									"id": 648,
									"mutability": "mutable",
									"name": "nutzToken",
									"nameLocation": "402:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "388:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 647,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 646,
											"name": "IERC20",
											"nameLocations": [
												"388:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "388:6:5"
										},
										"referencedDeclaration": 290,
										"src": "388:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc390610",
									"id": 651,
									"mutability": "constant",
									"name": "STARTING_ANNUAL_RETURN",
									"nameLocation": "442:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "418:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "418:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 650,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "467:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "efc21daa",
									"id": 654,
									"mutability": "constant",
									"name": "MINIMUM_ANNUAL_RETURN",
									"nameLocation": "517:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "493:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 652,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "541:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fa435959",
									"id": 657,
									"mutability": "constant",
									"name": "MINT_RATE_DECREASE",
									"nameLocation": "594:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "570:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 655,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 656,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "615:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1288af02",
									"id": 665,
									"mutability": "constant",
									"name": "TOKENS_PER_DECREASE",
									"nameLocation": "670:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "646:65:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 658,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_250000000000000000000000_by_1",
											"typeString": "int_const 250000000000000000000000"
										},
										"id": 664,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "323530303030",
											"id": 659,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "692:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_250000_by_1",
												"typeString": "int_const 250000"
											},
											"value": "250000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "702:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "708:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "702:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 663,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "701:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "692:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250000000000000000000000_by_1",
											"typeString": "int_const 250000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 667,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "768:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "753:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 666,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d9c80108",
									"id": 669,
									"mutability": "mutable",
									"name": "totalRewardsMinted",
									"nameLocation": "801:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "786:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 668,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NUTZStaking.Stake",
									"id": 676,
									"members": [
										{
											"constant": false,
											"id": 671,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "860:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 676,
											"src": "852:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 670,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "852:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 673,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "885:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 676,
											"src": "877:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 672,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "877:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 675,
											"mutability": "mutable",
											"name": "stakingTime",
											"nameLocation": "914:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 676,
											"src": "906:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 674,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "906:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "835:5:5",
									"nodeType": "StructDefinition",
									"scope": 968,
									"src": "828:105:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 681,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "974:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 968,
									"src": "941:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$676_storage_$",
										"typeString": "mapping(address => struct NUTZStaking.Stake)"
									},
									"typeName": {
										"id": 680,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 677,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "949:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "941:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$676_storage_$",
											"typeString": "mapping(address => struct NUTZStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 679,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 678,
												"name": "Stake",
												"nameLocations": [
													"960:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "960:5:5"
											},
											"referencedDeclaration": 676,
											"src": "960:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
												"typeString": "struct NUTZStaking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 689,
									"name": "Staked",
									"nameLocation": "995:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1018:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1002:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1032:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1024:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1048:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1040:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:58:5"
									},
									"src": "989:71:5"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 695,
									"name": "Unstaked",
									"nameLocation": "1072:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1097:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "1081:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1111:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "1103:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:38:5"
									},
									"src": "1066:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 701,
									"name": "RewardPaid",
									"nameLocation": "1131:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1158:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1142:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1172:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1164:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:38:5"
									},
									"src": "1125:55:5"
								},
								{
									"anonymous": false,
									"eventSelector": "6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7",
									"id": 705,
									"name": "TokensBurned",
									"nameLocation": "1192:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:16:5"
									},
									"src": "1186:35:5"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "1300:151:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "_nutzTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "1319:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1348:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1340:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1340:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1340:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1319:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1352:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																"typeString": "literal_string \"Token address cannot be the zero address\""
															},
															"value": "Token address cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																"typeString": "literal_string \"Token address cannot be the zero address\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1311:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1311:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "1311:84:5"
											},
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 725,
														"name": "nutzToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1406:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 727,
																"name": "_nutzTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "1425:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 726,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1418:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1418:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1406:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "1406:37:5"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 712,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 709,
													"src": "1292:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 713,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 711,
												"name": "Ownable",
												"nameLocations": [
													"1284:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1284:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1284:15:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "_nutzTokenAddress",
												"nameLocation": "1249:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1241:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1276:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1268:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:43:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1300:0:5"
									},
									"scope": 968,
									"src": "1229:222:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "1519:419:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "1538:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1548:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1538:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1551:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															},
															"value": "Cannot stake 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1530:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "1530:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1617:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1621:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1617:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 753,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1637:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_NUTZStaking_$968",
																				"typeString": "contract NUTZStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_NUTZStaking_$968",
																				"typeString": "contract NUTZStaking"
																			}
																		],
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1629:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 751,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1629:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1629:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 755,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "1644:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 747,
																	"name": "nutzToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "1594:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1604:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "1594:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1594:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1654:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1586:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "1586:86:5"
											},
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentRewardRate",
														"nameLocation": "1693:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "1685:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1685:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 762,
														"name": "getCurrentRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "1713:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1713:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1685:50:5"
											},
											{
												"expression": {
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 765,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "1746:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$676_storage_$",
																"typeString": "mapping(address => struct NUTZStaking.Stake storage ref)"
															}
														},
														"id": 768,
														"indexExpression": {
															"expression": {
																"id": 766,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1753:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1757:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1753:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1746:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$676_storage",
															"typeString": "struct NUTZStaking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 770,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "1773:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 771,
																"name": "currentRewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "1782:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 772,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1801:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1807:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1801:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 769,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "1767:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$676_storage_ptr_$",
																"typeString": "type(struct NUTZStaking.Stake storage pointer)"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1767:50:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$676_memory_ptr",
															"typeString": "struct NUTZStaking.Stake memory"
														}
													},
													"src": "1746:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$676_storage",
														"typeString": "struct NUTZStaking.Stake storage ref"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "1746:71:5"
											},
											{
												"expression": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 777,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1828:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 780,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "1858:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 778,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1854:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "1842:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1842:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1828:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1891:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1895:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1891:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "1903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 788,
															"name": "currentRewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1912:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "1884:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1884:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "EmitStatement",
												"src": "1879:51:5"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 736,
												"name": "nonReentrant",
												"nameLocations": [
													"1506:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1506:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1506:12:5"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "1468:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1488:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1480:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:5"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:5"
									},
									"scope": 968,
									"src": "1459:479:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "2002:774:5",
										"statements": [
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2027:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "2013:23:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
															"typeString": "struct NUTZStaking.Stake"
														},
														"typeName": {
															"id": 798,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 797,
																"name": "Stake",
																"nameLocations": [
																	"2013:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 676,
																"src": "2013:5:5"
															},
															"referencedDeclaration": 676,
															"src": "2013:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
																"typeString": "struct NUTZStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"baseExpression": {
														"id": 800,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "2039:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$676_storage_$",
															"typeString": "mapping(address => struct NUTZStaking.Stake storage ref)"
														}
													},
													"id": 803,
													"indexExpression": {
														"expression": {
															"id": 801,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2046:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2050:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2046:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2039:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$676_storage",
														"typeString": "struct NUTZStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2013:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 806,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "2076:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
																		"typeString": "struct NUTZStaking.Stake storage pointer"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2086:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 671,
																"src": "2076:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2076:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f20756e7374616b65",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2098:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																"typeString": "literal_string \"No tokens to unstake\""
															},
															"value": "No tokens to unstake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																"typeString": "literal_string \"No tokens to unstake\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2068:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2068:53:5"
											},
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2142:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "2134:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2134:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 816,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2167:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2171:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2167:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 815,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "2151:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2134:44:5"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "2197:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "2189:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 820,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2189:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2228:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2221:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"expression": {
																	"id": 822,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "2210:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2217:3:5",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 526,
																"src": "2210:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2210:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2224:3:5",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 541,
														"src": "2210:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2210:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2189:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 835,
																	"name": "nutzToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2300:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2292:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2292:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2292:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2312:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 830,
															"name": "nutzToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "2273:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2283:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2273:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "2273:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 843,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2405:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2409:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2405:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 848,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "2438:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 845,
																				"name": "userStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "2417:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
																					"typeString": "struct NUTZStaking.Stake storage pointer"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2427:6:5",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 671,
																			"src": "2417:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2434:3:5",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 496,
																		"src": "2417:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2417:28:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 841,
																	"name": "nutzToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2386:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2396:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "2386:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2386:60:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2448:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2378:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:88:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "2378:88:5"
											},
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "2479:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 857,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "2509:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
																		"typeString": "struct NUTZStaking.Stake storage pointer"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2519:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 671,
																"src": "2509:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 855,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "2493:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2505:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 511,
															"src": "2493:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2493:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2479:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "2479:47:5"
											},
											{
												"expression": {
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 862,
														"name": "totalRewardsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2537:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 865,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "2581:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 863,
																"name": "totalRewardsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "2558:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2577:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "2558:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2558:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2537:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "2537:51:5"
											},
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2601:25:5",
													"subExpression": {
														"baseExpression": {
															"id": 869,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2608:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$676_storage_$",
																"typeString": "mapping(address => struct NUTZStaking.Stake storage ref)"
															}
														},
														"id": 872,
														"indexExpression": {
															"expression": {
																"id": 870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2615:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2619:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2615:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2608:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$676_storage",
															"typeString": "struct NUTZStaking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "2601:25:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 876,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2653:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2657:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2653:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 878,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "2665:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
																	"typeString": "struct NUTZStaking.Stake storage pointer"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2675:6:5",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 671,
															"src": "2665:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2644:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2644:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "EmitStatement",
												"src": "2639:43:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 883,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2709:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2713:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2709:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2721:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "2698:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2698:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "2693:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 889,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2757:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "2744:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "2739:29:5"
											}
										]
									},
									"functionSelector": "d68f78f0",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 795,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 794,
												"name": "nonReentrant",
												"nameLocations": [
													"1989:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1989:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1989:12:5"
										}
									],
									"name": "unstakeAndClaimRewards",
									"nameLocation": "1955:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:5"
									},
									"scope": 968,
									"src": "1946:830:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "2846:293:5",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "decreaseAmount",
														"nameLocation": "2865:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 922,
														"src": "2857:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2857:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "MINT_RATE_DECREASE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2930:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 902,
																	"name": "TOKENS_PER_DECREASE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "2905:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 900,
																	"name": "totalRewardsMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "2882:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2901:3:5",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 541,
																"src": "2882:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2882:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:3:5",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 526,
														"src": "2882:47:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2882:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2857:92:5"
											},
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "currentRewardRate",
														"nameLocation": "2968:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 922,
														"src": "2960:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2960:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 910,
															"name": "STARTING_ANNUAL_RETURN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "2988:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 911,
															"name": "decreaseAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "3013:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2988:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 917,
														"name": "MINIMUM_ANNUAL_RETURN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3075:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2988:108:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 915,
																"name": "decreaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "3057:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 913,
																"name": "STARTING_ANNUAL_RETURN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "3030:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3053:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 511,
															"src": "3030:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3030:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:136:5"
											},
											{
												"expression": {
													"id": 920,
													"name": "currentRewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 909,
													"src": "3114:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 897,
												"id": 921,
												"nodeType": "Return",
												"src": "3107:24:5"
											}
										]
									},
									"functionSelector": "e6a4a8b5",
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentRewardRate",
									"nameLocation": "2793:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2813:2:5"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2836:9:5"
									},
									"scope": 968,
									"src": "2784:355:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3217:274:5",
										"statements": [
											{
												"assignments": [
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3241:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "3228:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$676_memory_ptr",
															"typeString": "struct NUTZStaking.Stake"
														},
														"typeName": {
															"id": 931,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 930,
																"name": "Stake",
																"nameLocations": [
																	"3228:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 676,
																"src": "3228:5:5"
															},
															"referencedDeclaration": 676,
															"src": "3228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$676_storage_ptr",
																"typeString": "struct NUTZStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"baseExpression": {
														"id": 933,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "3253:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$676_storage_$",
															"typeString": "mapping(address => struct NUTZStaking.Stake storage ref)"
														}
													},
													"id": 935,
													"indexExpression": {
														"id": 934,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "3260:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3253:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$676_storage",
														"typeString": "struct NUTZStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3228:38:5"
											},
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "stakingDuration",
														"nameLocation": "3285:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "3277:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 942,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "3323:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$676_memory_ptr",
																	"typeString": "struct NUTZStaking.Stake memory"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3333:11:5",
															"memberName": "stakingTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3323:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 939,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3303:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3309:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3303:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3319:3:5",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 511,
														"src": "3303:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3303:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3277:68:5"
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3364:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "3356:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3356:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3455:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "333635",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3441:8:5",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 955,
																			"name": "stakingDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "3420:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 951,
																						"name": "userStake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 932,
																						"src": "3394:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$676_memory_ptr",
																							"typeString": "struct NUTZStaking.Stake memory"
																						}
																					},
																					"id": 952,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3404:10:5",
																					"memberName": "rewardRate",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 673,
																					"src": "3394:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 948,
																						"name": "userStake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 932,
																						"src": "3373:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$676_memory_ptr",
																							"typeString": "struct NUTZStaking.Stake memory"
																						}
																					},
																					"id": 949,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3383:6:5",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 671,
																					"src": "3373:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3390:3:5",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 526,
																				"src": "3373:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3373:42:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3416:3:5",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 526,
																		"src": "3373:46:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3373:63:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3437:3:5",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 541,
																"src": "3373:67:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3373:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3451:3:5",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 541,
														"src": "3373:81:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3373:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3356:103:5"
											},
											{
												"expression": {
													"id": 964,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "3477:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 929,
												"id": 965,
												"nodeType": "Return",
												"src": "3470:13:5"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3156:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3180:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3172:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:15:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3208:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:9:5"
									},
									"scope": 968,
									"src": "3147:344:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 969,
							"src": "297:3256:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								689,
								695,
								701,
								705
							]
						}
					],
					"src": "33:3522:5"
				},
				"id": 5
			}
		}
	}
}