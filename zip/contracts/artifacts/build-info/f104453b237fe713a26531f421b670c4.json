{
	"id": "f104453b237fe713a26531f421b670c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BurnReservoir.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BurnReservoir is ReentrancyGuard, Ownable {\r\n    IERC20 public nutzToken;\r\n    uint256 public totalBurned;\r\n\r\n    event TokensBurned(address indexed burner, uint256 amount);\r\n\r\n    constructor(address _tokenAddress) Ownable(msg.sender) {\r\n        require(_tokenAddress != address(0), \"Token address cannot be the zero address\");\r\n        nutzToken = IERC20(_tokenAddress);\r\n    }\r\n\r\n    function burn(uint256 _amount) external onlyOwner nonReentrant {\r\n        require(_amount > 0, \"Amount must be greater than 0\");\r\n        require(_amount <= nutzToken.balanceOf(address(this)), \"Insufficient tokens to burn\");\r\n\r\n        nutzToken.transfer(address(0), _amount);\r\n        totalBurned += _amount;\r\n\r\n        emit TokensBurned(msg.sender, _amount);\r\n    }\r\n\r\n    function setTokenAddress(address _tokenAddress) external onlyOwner {\r\n        require(_tokenAddress != address(0), \"Token address cannot be the zero address\");\r\n        nutzToken = IERC20(_tokenAddress);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BurnReservoir.sol": {
				"BurnReservoir": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nutzToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "setTokenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BurnReservoir.sol\":238:1222  contract BurnReservoir is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BurnReservoir.sol\":428:626  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BurnReservoir.sol\":471:481  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/BurnReservoir.sol\":527:528  0 */\n  0x00\n    /* \"contracts/BurnReservoir.sol\":502:529  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BurnReservoir.sol\":502:515  _tokenAddress */\n  dup2\n    /* \"contracts/BurnReservoir.sol\":502:529  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/BurnReservoir.sol\":494:574  require(_tokenAddress != address(0), \"Token address cannot be the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/BurnReservoir.sol\":604:617  _tokenAddress */\n  dup1\n    /* \"contracts/BurnReservoir.sol\":585:594  nutzToken */\n  0x02\n  0x00\n    /* \"contracts/BurnReservoir.sol\":585:618  nutzToken = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BurnReservoir.sol\":428:626  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/BurnReservoir.sol\":238:1222  contract BurnReservoir is ReentrancyGuard, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":932:1051   */\ntag_44:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_46\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_27:\n    /* \"#utility.yul\":1289:1313   */\n  tag_48\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_11:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_50\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_28:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1956   */\ntag_29:\n    /* \"#utility.yul\":1869:1903   */\n  0x546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1904   */\n  mstore\n    /* \"#utility.yul\":1938:1948   */\n  0x2061646472657373000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1933:1935   */\n  0x20\n    /* \"#utility.yul\":1925:1931   */\n  dup3\n    /* \"#utility.yul\":1921:1936   */\n  add\n    /* \"#utility.yul\":1914:1949   */\n  mstore\n    /* \"#utility.yul\":1729:1956   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1962:2328   */\ntag_30:\n    /* \"#utility.yul\":2104:2107   */\n  0x00\n    /* \"#utility.yul\":2125:2192   */\n  tag_54\n    /* \"#utility.yul\":2189:2191   */\n  0x28\n    /* \"#utility.yul\":2184:2187   */\n  dup4\n    /* \"#utility.yul\":2125:2192   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2118:2192   */\n  swap2\n  pop\n    /* \"#utility.yul\":2201:2294   */\n  tag_55\n    /* \"#utility.yul\":2290:2293   */\n  dup3\n    /* \"#utility.yul\":2201:2294   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2319:2321   */\n  0x40\n    /* \"#utility.yul\":2314:2317   */\n  dup3\n    /* \"#utility.yul\":2310:2322   */\n  add\n    /* \"#utility.yul\":2303:2322   */\n  swap1\n  pop\n    /* \"#utility.yul\":1962:2328   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2334:2753   */\ntag_17:\n    /* \"#utility.yul\":2500:2504   */\n  0x00\n    /* \"#utility.yul\":2538:2540   */\n  0x20\n    /* \"#utility.yul\":2527:2536   */\n  dup3\n    /* \"#utility.yul\":2523:2541   */\n  add\n    /* \"#utility.yul\":2515:2541   */\n  swap1\n  pop\n    /* \"#utility.yul\":2587:2596   */\n  dup2\n    /* \"#utility.yul\":2581:2585   */\n  dup2\n    /* \"#utility.yul\":2577:2597   */\n  sub\n    /* \"#utility.yul\":2573:2574   */\n  0x00\n    /* \"#utility.yul\":2562:2571   */\n  dup4\n    /* \"#utility.yul\":2558:2575   */\n  add\n    /* \"#utility.yul\":2551:2598   */\n  mstore\n    /* \"#utility.yul\":2615:2746   */\n  tag_57\n    /* \"#utility.yul\":2741:2745   */\n  dup2\n    /* \"#utility.yul\":2615:2746   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2607:2746   */\n  swap1\n  pop\n    /* \"#utility.yul\":2334:2753   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/BurnReservoir.sol\":238:1222  contract BurnReservoir is ReentrancyGuard, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BurnReservoir.sol\":238:1222  contract BurnReservoir is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf5cd0264\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x26a4e8d2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BurnReservoir.sol\":1009:1219  function setTokenAddress(address _tokenAddress) external onlyOwner {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/BurnReservoir.sol\":634:1001  function burn(uint256 _amount) external onlyOwner nonReentrant {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BurnReservoir.sol\":326:352  uint256 public totalBurned */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/BurnReservoir.sol\":296:319  IERC20 public nutzToken */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BurnReservoir.sol\":1009:1219  function setTokenAddress(address _tokenAddress) external onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_37:\n        /* \"contracts/BurnReservoir.sol\":1120:1121  0 */\n      0x00\n        /* \"contracts/BurnReservoir.sol\":1095:1122  _tokenAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BurnReservoir.sol\":1095:1108  _tokenAddress */\n      dup2\n        /* \"contracts/BurnReservoir.sol\":1095:1122  _tokenAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BurnReservoir.sol\":1087:1167  require(_tokenAddress != address(0), \"Token address cannot be the zero address\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/BurnReservoir.sol\":1197:1210  _tokenAddress */\n      dup1\n        /* \"contracts/BurnReservoir.sol\":1178:1187  nutzToken */\n      0x02\n      0x00\n        /* \"contracts/BurnReservoir.sol\":1178:1211  nutzToken = IERC20(_tokenAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BurnReservoir.sol\":1009:1219  function setTokenAddress(address _tokenAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BurnReservoir.sol\":634:1001  function burn(uint256 _amount) external onlyOwner nonReentrant {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_46\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_47\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_46:\n        /* \"contracts/BurnReservoir.sol\":726:727  0 */\n      0x00\n        /* \"contracts/BurnReservoir.sol\":716:723  _amount */\n      dup2\n        /* \"contracts/BurnReservoir.sol\":716:727  _amount > 0 */\n      gt\n        /* \"contracts/BurnReservoir.sol\":708:761  require(_amount > 0, \"Amount must be greater than 0\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/BurnReservoir.sol\":791:800  nutzToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BurnReservoir.sol\":791:810  nutzToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BurnReservoir.sol\":819:823  this */\n      address\n        /* \"contracts/BurnReservoir.sol\":791:825  nutzToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_52:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/BurnReservoir.sol\":780:787  _amount */\n      dup2\n        /* \"contracts/BurnReservoir.sol\":780:825  _amount <= nutzToken.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/BurnReservoir.sol\":772:857  require(_amount <= nutzToken.balanceOf(address(this)), \"Insufficient tokens to burn\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/BurnReservoir.sol\":870:879  nutzToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BurnReservoir.sol\":870:888  nutzToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BurnReservoir.sol\":897:898  0 */\n      0x00\n        /* \"contracts/BurnReservoir.sol\":901:908  _amount */\n      dup4\n        /* \"contracts/BurnReservoir.sol\":870:909  nutzToken.transfer(address(0), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      pop\n        /* \"contracts/BurnReservoir.sol\":935:942  _amount */\n      dup1\n        /* \"contracts/BurnReservoir.sol\":920:931  totalBurned */\n      0x03\n      0x00\n        /* \"contracts/BurnReservoir.sol\":920:942  totalBurned += _amount */\n      dup3\n      dup3\n      sload\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BurnReservoir.sol\":973:983  msg.sender */\n      caller\n        /* \"contracts/BurnReservoir.sol\":960:993  TokensBurned(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6\n        /* \"contracts/BurnReservoir.sol\":985:992  _amount */\n      dup3\n        /* \"contracts/BurnReservoir.sol\":960:993  TokensBurned(msg.sender, _amount) */\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_70\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/BurnReservoir.sol\":634:1001  function burn(uint256 _amount) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BurnReservoir.sol\":326:352  uint256 public totalBurned */\n    tag_26:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BurnReservoir.sol\":296:319  IERC20 public nutzToken */\n    tag_33:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_22\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_98:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_100:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_101:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_134\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_100\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_102:\n        /* \"#utility.yul\":641:665   */\n      tag_136\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_101\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_137:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_103:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_139\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_102\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_142\n      tag_98\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":917:1036   */\n    tag_141:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_143\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_103\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_104:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_105:\n        /* \"#utility.yul\":1332:1356   */\n      tag_146\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_147:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_106:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_149\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_105\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_17:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_152\n      tag_98\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1608:1727   */\n    tag_151:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_153\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_106\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_107:\n        /* \"#utility.yul\":1954:1978   */\n      tag_155\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_101\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_24:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_157\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_107\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_108:\n        /* \"#utility.yul\":2306:2330   */\n      tag_159\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_104\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_28:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_161\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_108\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2631   */\n    tag_109:\n        /* \"#utility.yul\":2599:2602   */\n      0x00\n        /* \"#utility.yul\":2620:2625   */\n      dup2\n        /* \"#utility.yul\":2613:2625   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2637:2779   */\n    tag_110:\n        /* \"#utility.yul\":2687:2696   */\n      0x00\n        /* \"#utility.yul\":2720:2773   */\n      tag_164\n        /* \"#utility.yul\":2738:2772   */\n      tag_165\n        /* \"#utility.yul\":2747:2771   */\n      tag_166\n        /* \"#utility.yul\":2765:2770   */\n      dup5\n        /* \"#utility.yul\":2747:2771   */\n      tag_100\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2738:2772   */\n      tag_109\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2720:2773   */\n      tag_100\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2707:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2637:2779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:2911   */\n    tag_111:\n        /* \"#utility.yul\":2835:2844   */\n      0x00\n        /* \"#utility.yul\":2868:2905   */\n      tag_168\n        /* \"#utility.yul\":2899:2904   */\n      dup3\n        /* \"#utility.yul\":2868:2905   */\n      tag_110\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2855:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2785:2911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3057   */\n    tag_112:\n        /* \"#utility.yul\":2981:2990   */\n      0x00\n        /* \"#utility.yul\":3014:3051   */\n      tag_170\n        /* \"#utility.yul\":3045:3050   */\n      dup3\n        /* \"#utility.yul\":3014:3051   */\n      tag_111\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3001:3051   */\n      swap1\n      pop\n        /* \"#utility.yul\":2917:3057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3063:3222   */\n    tag_113:\n        /* \"#utility.yul\":3164:3215   */\n      tag_172\n        /* \"#utility.yul\":3209:3214   */\n      dup2\n        /* \"#utility.yul\":3164:3215   */\n      tag_112\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3159:3162   */\n      dup3\n        /* \"#utility.yul\":3152:3216   */\n      mstore\n        /* \"#utility.yul\":3063:3222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3478   */\n    tag_35:\n        /* \"#utility.yul\":3335:3339   */\n      0x00\n        /* \"#utility.yul\":3373:3375   */\n      0x20\n        /* \"#utility.yul\":3362:3371   */\n      dup3\n        /* \"#utility.yul\":3358:3376   */\n      add\n        /* \"#utility.yul\":3350:3376   */\n      swap1\n      pop\n        /* \"#utility.yul\":3386:3471   */\n      tag_174\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3386:3471   */\n      tag_113\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3228:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3653   */\n    tag_114:\n        /* \"#utility.yul\":3568:3579   */\n      0x00\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3597:3600   */\n      dup3\n        /* \"#utility.yul\":3590:3609   */\n      mstore\n        /* \"#utility.yul\":3642:3646   */\n      0x20\n        /* \"#utility.yul\":3637:3640   */\n      dup3\n        /* \"#utility.yul\":3633:3647   */\n      add\n        /* \"#utility.yul\":3618:3647   */\n      swap1\n      pop\n        /* \"#utility.yul\":3484:3653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3659:3886   */\n    tag_115:\n        /* \"#utility.yul\":3799:3833   */\n      0x546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f\n        /* \"#utility.yul\":3795:3796   */\n      0x00\n        /* \"#utility.yul\":3787:3793   */\n      dup3\n        /* \"#utility.yul\":3783:3797   */\n      add\n        /* \"#utility.yul\":3776:3834   */\n      mstore\n        /* \"#utility.yul\":3868:3878   */\n      0x2061646472657373000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3855:3861   */\n      dup3\n        /* \"#utility.yul\":3851:3866   */\n      add\n        /* \"#utility.yul\":3844:3879   */\n      mstore\n        /* \"#utility.yul\":3659:3886   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3892:4258   */\n    tag_116:\n        /* \"#utility.yul\":4034:4037   */\n      0x00\n        /* \"#utility.yul\":4055:4122   */\n      tag_178\n        /* \"#utility.yul\":4119:4121   */\n      0x28\n        /* \"#utility.yul\":4114:4117   */\n      dup4\n        /* \"#utility.yul\":4055:4122   */\n      tag_114\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4048:4122   */\n      swap2\n      pop\n        /* \"#utility.yul\":4131:4224   */\n      tag_179\n        /* \"#utility.yul\":4220:4223   */\n      dup3\n        /* \"#utility.yul\":4131:4224   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4249:4251   */\n      0x40\n        /* \"#utility.yul\":4244:4247   */\n      dup3\n        /* \"#utility.yul\":4240:4252   */\n      add\n        /* \"#utility.yul\":4233:4252   */\n      swap1\n      pop\n        /* \"#utility.yul\":3892:4258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4264:4683   */\n    tag_42:\n        /* \"#utility.yul\":4430:4434   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4457:4466   */\n      dup3\n        /* \"#utility.yul\":4453:4471   */\n      add\n        /* \"#utility.yul\":4445:4471   */\n      swap1\n      pop\n        /* \"#utility.yul\":4517:4526   */\n      dup2\n        /* \"#utility.yul\":4511:4515   */\n      dup2\n        /* \"#utility.yul\":4507:4527   */\n      sub\n        /* \"#utility.yul\":4503:4504   */\n      0x00\n        /* \"#utility.yul\":4492:4501   */\n      dup4\n        /* \"#utility.yul\":4488:4505   */\n      add\n        /* \"#utility.yul\":4481:4528   */\n      mstore\n        /* \"#utility.yul\":4545:4676   */\n      tag_181\n        /* \"#utility.yul\":4671:4675   */\n      dup2\n        /* \"#utility.yul\":4545:4676   */\n      tag_116\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4537:4676   */\n      swap1\n      pop\n        /* \"#utility.yul\":4264:4683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4689:4868   */\n    tag_117:\n        /* \"#utility.yul\":4829:4860   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":4825:4826   */\n      0x00\n        /* \"#utility.yul\":4817:4823   */\n      dup3\n        /* \"#utility.yul\":4813:4827   */\n      add\n        /* \"#utility.yul\":4806:4861   */\n      mstore\n        /* \"#utility.yul\":4689:4868   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:5240   */\n    tag_118:\n        /* \"#utility.yul\":5016:5019   */\n      0x00\n        /* \"#utility.yul\":5037:5104   */\n      tag_184\n        /* \"#utility.yul\":5101:5103   */\n      0x1d\n        /* \"#utility.yul\":5096:5099   */\n      dup4\n        /* \"#utility.yul\":5037:5104   */\n      tag_114\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5030:5104   */\n      swap2\n      pop\n        /* \"#utility.yul\":5113:5206   */\n      tag_185\n        /* \"#utility.yul\":5202:5205   */\n      dup3\n        /* \"#utility.yul\":5113:5206   */\n      tag_117\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5231:5233   */\n      0x20\n        /* \"#utility.yul\":5226:5229   */\n      dup3\n        /* \"#utility.yul\":5222:5234   */\n      add\n        /* \"#utility.yul\":5215:5234   */\n      swap1\n      pop\n        /* \"#utility.yul\":4874:5240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5246:5665   */\n    tag_51:\n        /* \"#utility.yul\":5412:5416   */\n      0x00\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup3\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5427:5453   */\n      swap1\n      pop\n        /* \"#utility.yul\":5499:5508   */\n      dup2\n        /* \"#utility.yul\":5493:5497   */\n      dup2\n        /* \"#utility.yul\":5489:5509   */\n      sub\n        /* \"#utility.yul\":5485:5486   */\n      0x00\n        /* \"#utility.yul\":5474:5483   */\n      dup4\n        /* \"#utility.yul\":5470:5487   */\n      add\n        /* \"#utility.yul\":5463:5510   */\n      mstore\n        /* \"#utility.yul\":5527:5658   */\n      tag_187\n        /* \"#utility.yul\":5653:5657   */\n      dup2\n        /* \"#utility.yul\":5527:5658   */\n      tag_118\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5519:5658   */\n      swap1\n      pop\n        /* \"#utility.yul\":5246:5665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5814   */\n    tag_119:\n        /* \"#utility.yul\":5728:5733   */\n      0x00\n        /* \"#utility.yul\":5759:5765   */\n      dup2\n        /* \"#utility.yul\":5753:5766   */\n      mload\n        /* \"#utility.yul\":5744:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5775:5808   */\n      tag_189\n        /* \"#utility.yul\":5802:5807   */\n      dup2\n        /* \"#utility.yul\":5775:5808   */\n      tag_105\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5671:5814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5820:6171   */\n    tag_56:\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5939:5941   */\n      0x20\n        /* \"#utility.yul\":5927:5936   */\n      dup3\n        /* \"#utility.yul\":5918:5925   */\n      dup5\n        /* \"#utility.yul\":5914:5937   */\n      sub\n        /* \"#utility.yul\":5910:5942   */\n      slt\n        /* \"#utility.yul\":5907:6026   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":5945:6024   */\n      tag_192\n      tag_98\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5907:6026   */\n    tag_191:\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6090:6154   */\n      tag_193\n        /* \"#utility.yul\":6146:6153   */\n      dup5\n        /* \"#utility.yul\":6137:6143   */\n      dup3\n        /* \"#utility.yul\":6126:6135   */\n      dup6\n        /* \"#utility.yul\":6122:6144   */\n      add\n        /* \"#utility.yul\":6090:6154   */\n      tag_119\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6080:6154   */\n      swap2\n      pop\n        /* \"#utility.yul\":6036:6164   */\n      pop\n        /* \"#utility.yul\":5820:6171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6177:6354   */\n    tag_120:\n        /* \"#utility.yul\":6317:6346   */\n      0x496e73756666696369656e7420746f6b656e7320746f206275726e0000000000\n        /* \"#utility.yul\":6313:6314   */\n      0x00\n        /* \"#utility.yul\":6305:6311   */\n      dup3\n        /* \"#utility.yul\":6301:6315   */\n      add\n        /* \"#utility.yul\":6294:6347   */\n      mstore\n        /* \"#utility.yul\":6177:6354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6360:6726   */\n    tag_121:\n        /* \"#utility.yul\":6502:6505   */\n      0x00\n        /* \"#utility.yul\":6523:6590   */\n      tag_196\n        /* \"#utility.yul\":6587:6589   */\n      0x1b\n        /* \"#utility.yul\":6582:6585   */\n      dup4\n        /* \"#utility.yul\":6523:6590   */\n      tag_114\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6516:6590   */\n      swap2\n      pop\n        /* \"#utility.yul\":6599:6692   */\n      tag_197\n        /* \"#utility.yul\":6688:6691   */\n      dup3\n        /* \"#utility.yul\":6599:6692   */\n      tag_120\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6717:6719   */\n      0x20\n        /* \"#utility.yul\":6712:6715   */\n      dup3\n        /* \"#utility.yul\":6708:6720   */\n      add\n        /* \"#utility.yul\":6701:6720   */\n      swap1\n      pop\n        /* \"#utility.yul\":6360:6726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:7151   */\n    tag_59:\n        /* \"#utility.yul\":6898:6902   */\n      0x00\n        /* \"#utility.yul\":6936:6938   */\n      0x20\n        /* \"#utility.yul\":6925:6934   */\n      dup3\n        /* \"#utility.yul\":6921:6939   */\n      add\n        /* \"#utility.yul\":6913:6939   */\n      swap1\n      pop\n        /* \"#utility.yul\":6985:6994   */\n      dup2\n        /* \"#utility.yul\":6979:6983   */\n      dup2\n        /* \"#utility.yul\":6975:6995   */\n      sub\n        /* \"#utility.yul\":6971:6972   */\n      0x00\n        /* \"#utility.yul\":6960:6969   */\n      dup4\n        /* \"#utility.yul\":6956:6973   */\n      add\n        /* \"#utility.yul\":6949:6996   */\n      mstore\n        /* \"#utility.yul\":7013:7144   */\n      tag_199\n        /* \"#utility.yul\":7139:7143   */\n      dup2\n        /* \"#utility.yul\":7013:7144   */\n      tag_121\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7005:7144   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:7151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7157:7489   */\n    tag_61:\n        /* \"#utility.yul\":7278:7282   */\n      0x00\n        /* \"#utility.yul\":7316:7318   */\n      0x40\n        /* \"#utility.yul\":7305:7314   */\n      dup3\n        /* \"#utility.yul\":7301:7319   */\n      add\n        /* \"#utility.yul\":7293:7319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7329:7400   */\n      tag_201\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7386:7395   */\n      dup4\n        /* \"#utility.yul\":7382:7399   */\n      add\n        /* \"#utility.yul\":7373:7379   */\n      dup6\n        /* \"#utility.yul\":7329:7400   */\n      tag_107\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7410:7482   */\n      tag_202\n        /* \"#utility.yul\":7478:7480   */\n      0x20\n        /* \"#utility.yul\":7467:7476   */\n      dup4\n        /* \"#utility.yul\":7463:7481   */\n      add\n        /* \"#utility.yul\":7454:7460   */\n      dup5\n        /* \"#utility.yul\":7410:7482   */\n      tag_108\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7157:7489   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7495:7585   */\n    tag_122:\n        /* \"#utility.yul\":7529:7536   */\n      0x00\n        /* \"#utility.yul\":7572:7577   */\n      dup2\n        /* \"#utility.yul\":7565:7578   */\n      iszero\n        /* \"#utility.yul\":7558:7579   */\n      iszero\n        /* \"#utility.yul\":7547:7579   */\n      swap1\n      pop\n        /* \"#utility.yul\":7495:7585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7591:7707   */\n    tag_123:\n        /* \"#utility.yul\":7661:7682   */\n      tag_205\n        /* \"#utility.yul\":7676:7681   */\n      dup2\n        /* \"#utility.yul\":7661:7682   */\n      tag_122\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7654:7659   */\n      dup2\n        /* \"#utility.yul\":7651:7683   */\n      eq\n        /* \"#utility.yul\":7641:7701   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7694:7695   */\n      dup1\n        /* \"#utility.yul\":7687:7699   */\n      revert\n        /* \"#utility.yul\":7641:7701   */\n    tag_206:\n        /* \"#utility.yul\":7591:7707   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:7850   */\n    tag_124:\n        /* \"#utility.yul\":7767:7772   */\n      0x00\n        /* \"#utility.yul\":7798:7804   */\n      dup2\n        /* \"#utility.yul\":7792:7805   */\n      mload\n        /* \"#utility.yul\":7783:7805   */\n      swap1\n      pop\n        /* \"#utility.yul\":7814:7844   */\n      tag_208\n        /* \"#utility.yul\":7838:7843   */\n      dup2\n        /* \"#utility.yul\":7814:7844   */\n      tag_123\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7713:7850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7856:8201   */\n    tag_65:\n        /* \"#utility.yul\":7923:7929   */\n      0x00\n        /* \"#utility.yul\":7972:7974   */\n      0x20\n        /* \"#utility.yul\":7960:7969   */\n      dup3\n        /* \"#utility.yul\":7951:7958   */\n      dup5\n        /* \"#utility.yul\":7947:7970   */\n      sub\n        /* \"#utility.yul\":7943:7975   */\n      slt\n        /* \"#utility.yul\":7940:8059   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":7978:8057   */\n      tag_211\n      tag_98\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7940:8059   */\n    tag_210:\n        /* \"#utility.yul\":8098:8099   */\n      0x00\n        /* \"#utility.yul\":8123:8184   */\n      tag_212\n        /* \"#utility.yul\":8176:8183   */\n      dup5\n        /* \"#utility.yul\":8167:8173   */\n      dup3\n        /* \"#utility.yul\":8156:8165   */\n      dup6\n        /* \"#utility.yul\":8152:8174   */\n      add\n        /* \"#utility.yul\":8123:8184   */\n      tag_124\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8113:8184   */\n      swap2\n      pop\n        /* \"#utility.yul\":8069:8194   */\n      pop\n        /* \"#utility.yul\":7856:8201   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8207:8387   */\n    tag_125:\n        /* \"#utility.yul\":8255:8332   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8252:8253   */\n      0x00\n        /* \"#utility.yul\":8245:8333   */\n      mstore\n        /* \"#utility.yul\":8352:8356   */\n      0x11\n        /* \"#utility.yul\":8349:8350   */\n      0x04\n        /* \"#utility.yul\":8342:8357   */\n      mstore\n        /* \"#utility.yul\":8376:8380   */\n      0x24\n        /* \"#utility.yul\":8373:8374   */\n      0x00\n        /* \"#utility.yul\":8366:8381   */\n      revert\n        /* \"#utility.yul\":8393:8584   */\n    tag_67:\n        /* \"#utility.yul\":8433:8436   */\n      0x00\n        /* \"#utility.yul\":8452:8472   */\n      tag_215\n        /* \"#utility.yul\":8470:8471   */\n      dup3\n        /* \"#utility.yul\":8452:8472   */\n      tag_104\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8447:8472   */\n      swap2\n      pop\n        /* \"#utility.yul\":8486:8506   */\n      tag_216\n        /* \"#utility.yul\":8504:8505   */\n      dup4\n        /* \"#utility.yul\":8486:8506   */\n      tag_104\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8481:8506   */\n      swap3\n      pop\n        /* \"#utility.yul\":8529:8530   */\n      dup3\n        /* \"#utility.yul\":8526:8527   */\n      dup3\n        /* \"#utility.yul\":8522:8531   */\n      add\n        /* \"#utility.yul\":8515:8531   */\n      swap1\n      pop\n        /* \"#utility.yul\":8550:8553   */\n      dup1\n        /* \"#utility.yul\":8547:8548   */\n      dup3\n        /* \"#utility.yul\":8544:8554   */\n      gt\n        /* \"#utility.yul\":8541:8577   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":8557:8575   */\n      tag_218\n      tag_125\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8541:8577   */\n    tag_217:\n        /* \"#utility.yul\":8393:8584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8590:8771   */\n    tag_126:\n        /* \"#utility.yul\":8730:8763   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8726:8727   */\n      0x00\n        /* \"#utility.yul\":8718:8724   */\n      dup3\n        /* \"#utility.yul\":8714:8728   */\n      add\n        /* \"#utility.yul\":8707:8764   */\n      mstore\n        /* \"#utility.yul\":8590:8771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8777:9143   */\n    tag_127:\n        /* \"#utility.yul\":8919:8922   */\n      0x00\n        /* \"#utility.yul\":8940:9007   */\n      tag_221\n        /* \"#utility.yul\":9004:9006   */\n      0x1f\n        /* \"#utility.yul\":8999:9002   */\n      dup4\n        /* \"#utility.yul\":8940:9007   */\n      tag_114\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8933:9007   */\n      swap2\n      pop\n        /* \"#utility.yul\":9016:9109   */\n      tag_222\n        /* \"#utility.yul\":9105:9108   */\n      dup3\n        /* \"#utility.yul\":9016:9109   */\n      tag_126\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9134:9136   */\n      0x20\n        /* \"#utility.yul\":9129:9132   */\n      dup3\n        /* \"#utility.yul\":9125:9137   */\n      add\n        /* \"#utility.yul\":9118:9137   */\n      swap1\n      pop\n        /* \"#utility.yul\":8777:9143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9149:9568   */\n    tag_93:\n        /* \"#utility.yul\":9315:9319   */\n      0x00\n        /* \"#utility.yul\":9353:9355   */\n      0x20\n        /* \"#utility.yul\":9342:9351   */\n      dup3\n        /* \"#utility.yul\":9338:9356   */\n      add\n        /* \"#utility.yul\":9330:9356   */\n      swap1\n      pop\n        /* \"#utility.yul\":9402:9411   */\n      dup2\n        /* \"#utility.yul\":9396:9400   */\n      dup2\n        /* \"#utility.yul\":9392:9412   */\n      sub\n        /* \"#utility.yul\":9388:9389   */\n      0x00\n        /* \"#utility.yul\":9377:9386   */\n      dup4\n        /* \"#utility.yul\":9373:9390   */\n      add\n        /* \"#utility.yul\":9366:9413   */\n      mstore\n        /* \"#utility.yul\":9430:9561   */\n      tag_224\n        /* \"#utility.yul\":9556:9560   */\n      dup2\n        /* \"#utility.yul\":9430:9561   */\n      tag_127\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":9422:9561   */\n      swap1\n      pop\n        /* \"#utility.yul\":9149:9568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b7556b7dc1cfbe3bc7a512ff40ee1450ff8186890804379228660b43b9ca21fb64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 379,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2756:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1255:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1262:3:5",
														"type": ""
													}
												],
												"src": "1202:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1434:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1396:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:5",
														"type": ""
													}
												],
												"src": "1326:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1688:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1622:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1627:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1638:11:5",
														"type": ""
													}
												],
												"src": "1554:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1835:121:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:5"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1869:34:5",
																		"type": "",
																		"value": "Token address cannot be the zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1846:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1846:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1933:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:15:5"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1938:10:5",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1914:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1827:6:5",
														"type": ""
													}
												],
												"src": "1729:227:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2108:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2118:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2184:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2125:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2125:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2290:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																	"nodeType": "YulIdentifier",
																	"src": "2201:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2303:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2314:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2096:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2104:3:5",
														"type": ""
													}
												],
												"src": "1962:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2505:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2515:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2527:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2538:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2523:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2515:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2562:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2573:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2558:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2581:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2577:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2577:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2551:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2607:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2741:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2615:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2607:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2485:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2500:4:5",
														"type": ""
													}
												],
												"src": "2334:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be the zero\")\n\n        mstore(add(memPtr, 32), \" address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000f4a38038062000f4a8339818101604052810190620000369190620002a3565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a89190620002e4565b60405180910390fd5b620000c2816200017b60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000134576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012b9062000383565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003a3565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200026d8262000242565b9050919050565b6200027f8162000261565b81146200028a575f80fd5b50565b5f815190506200029d8162000274565b92915050565b5f60208284031215620002bb57620002ba6200023e565b5b5f620002ca848285016200028d565b91505092915050565b620002de8162000261565b82525050565b5f602082019050620002f95f830184620002d3565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f5f8201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b5f6200036b602883620002ff565b915062000378826200030f565b604082019050919050565b5f6020820190508181035f8301526200039c816200035d565b9050919050565b610b9980620003b15f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638da5cb5b116100595780638da5cb5b146100c1578063d89135cd146100df578063f2fde38b146100fd578063f5cd0264146101195761007b565b806326a4e8d21461007f57806342966c681461009b578063715018a6146100b7575b5f80fd5b6100996004803603810190610094919061071a565b610137565b005b6100b560048036038101906100b09190610778565b6101f0565b005b6100bf61042b565b005b6100c961043e565b6040516100d691906107b2565b60405180910390f35b6100e7610466565b6040516100f491906107da565b60405180910390f35b6101176004803603810190610112919061071a565b61046c565b005b6101216104f0565b60405161012e919061084e565b60405180910390f35b61013f610515565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a4906108e7565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6101f8610515565b61020061059c565b5f8111610242576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102399061094f565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161029c91906107b2565b602060405180830381865afa1580156102b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102db9190610981565b81111561031d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610314906109f6565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f836040518363ffffffff1660e01b8152600401610379929190610a14565b6020604051808303815f875af1158015610395573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b99190610a70565b508060035f8282546103cb9190610ac8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb68260405161041891906107da565b60405180910390a26104286105e9565b50565b610433610515565b61043c5f6105f2565b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610474610515565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104e4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104db91906107b2565b60405180910390fd5b6104ed816105f2565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61051d6106b5565b73ffffffffffffffffffffffffffffffffffffffff1661053b61043e565b73ffffffffffffffffffffffffffffffffffffffff161461059a5761055e6106b5565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161059191906107b2565b60405180910390fd5b565b60025f54036105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790610b45565b60405180910390fd5b60025f81905550565b60015f81905550565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106e9826106c0565b9050919050565b6106f9816106df565b8114610703575f80fd5b50565b5f81359050610714816106f0565b92915050565b5f6020828403121561072f5761072e6106bc565b5b5f61073c84828501610706565b91505092915050565b5f819050919050565b61075781610745565b8114610761575f80fd5b50565b5f813590506107728161074e565b92915050565b5f6020828403121561078d5761078c6106bc565b5b5f61079a84828501610764565b91505092915050565b6107ac816106df565b82525050565b5f6020820190506107c55f8301846107a3565b92915050565b6107d481610745565b82525050565b5f6020820190506107ed5f8301846107cb565b92915050565b5f819050919050565b5f61081661081161080c846106c0565b6107f3565b6106c0565b9050919050565b5f610827826107fc565b9050919050565b5f6108388261081d565b9050919050565b6108488161082e565b82525050565b5f6020820190506108615f83018461083f565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f5f8201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b5f6108d1602883610867565b91506108dc82610877565b604082019050919050565b5f6020820190508181035f8301526108fe816108c5565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610939601d83610867565b915061094482610905565b602082019050919050565b5f6020820190508181035f8301526109668161092d565b9050919050565b5f8151905061097b8161074e565b92915050565b5f60208284031215610996576109956106bc565b5b5f6109a38482850161096d565b91505092915050565b7f496e73756666696369656e7420746f6b656e7320746f206275726e00000000005f82015250565b5f6109e0601b83610867565b91506109eb826109ac565b602082019050919050565b5f6020820190508181035f830152610a0d816109d4565b9050919050565b5f604082019050610a275f8301856107a3565b610a3460208301846107cb565b9392505050565b5f8115159050919050565b610a4f81610a3b565b8114610a59575f80fd5b50565b5f81519050610a6a81610a46565b92915050565b5f60208284031215610a8557610a846106bc565b5b5f610a9284828501610a5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ad282610745565b9150610add83610745565b9250828201905080821115610af557610af4610a9b565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610b2f601f83610867565b9150610b3a82610afb565b602082019050919050565b5f6020820190508181035f830152610b5c81610b23565b905091905056fea2646970667358221220b7556b7dc1cfbe3bc7a512ff40ee1450ff8186890804379228660b43b9ca21fb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF4A CODESIZE SUB DUP1 PUSH3 0xF4A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2A3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12B SWAP1 PUSH3 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x3A3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x26D DUP3 PUSH3 0x242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x27F DUP2 PUSH3 0x261 JUMP JUMPDEST DUP2 EQ PUSH3 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x29D DUP2 PUSH3 0x274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2BB JUMPI PUSH3 0x2BA PUSH3 0x23E JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2CA DUP5 DUP3 DUP6 ADD PUSH3 0x28D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2DE DUP2 PUSH3 0x261 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2F9 PUSH0 DUP4 ADD DUP5 PUSH3 0x2D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x2061646472657373000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x36B PUSH1 0x28 DUP4 PUSH3 0x2FF JUMP JUMPDEST SWAP2 POP PUSH3 0x378 DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x39C DUP2 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB99 DUP1 PUSH3 0x3B1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xF5CD0264 EQ PUSH2 0x119 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x26A4E8D2 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH2 0x42B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x515 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4 SWAP1 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x59C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x239 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x379 SWAP3 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x428 PUSH2 0x5E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x433 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x43C PUSH0 PUSH2 0x5F2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x474 PUSH2 0x515 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x5F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x51D PUSH2 0x6B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x53B PUSH2 0x43E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59A JUMPI PUSH2 0x55E PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6E9 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F9 DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP2 EQ PUSH2 0x703 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x714 DUP2 PUSH2 0x6F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH2 0x72E PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x73C DUP5 DUP3 DUP6 ADD PUSH2 0x706 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x757 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP2 EQ PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x772 DUP2 PUSH2 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79A DUP5 DUP3 DUP6 ADD PUSH2 0x764 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AC DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x7A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7ED PUSH0 DUP4 ADD DUP5 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x816 PUSH2 0x811 PUSH2 0x80C DUP5 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x827 DUP3 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x838 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x848 DUP2 PUSH2 0x82E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x861 PUSH0 DUP4 ADD DUP5 PUSH2 0x83F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x2061646472657373000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8D1 PUSH1 0x28 DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DC DUP3 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8FE DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x939 PUSH1 0x1D DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0x944 DUP3 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x966 DUP2 PUSH2 0x92D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x97B DUP2 PUSH2 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A3 DUP5 DUP3 DUP6 ADD PUSH2 0x96D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E7320746F206275726E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9E0 PUSH1 0x1B DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0x9EB DUP3 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA0D DUP2 PUSH2 0x9D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA27 PUSH0 DUP4 ADD DUP6 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0xA34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0xA3B JUMP JUMPDEST DUP2 EQ PUSH2 0xA59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA6A DUP2 PUSH2 0xA46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA92 DUP5 DUP3 DUP6 ADD PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAD2 DUP3 PUSH2 0x745 JUMP JUMPDEST SWAP2 POP PUSH2 0xADD DUP4 PUSH2 0x745 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAF5 JUMPI PUSH2 0xAF4 PUSH2 0xA9B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB2F PUSH1 0x1F DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3A DUP3 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB5C DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SSTORE PUSH12 0x7DC1CFBE3BC7A512FF40EE14 POP SELFDESTRUCT DUP2 DUP7 DUP10 ADDMOD DIV CALLDATACOPY SWAP3 0x28 PUSH7 0xB43B9CA21FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "238:984:4:-:0;;;428:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:10;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;527:1:4::1;502:27;;:13;:27;;::::0;494:80:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;604:13;585:9;;:33;;;;;;;;;;;;;;;;;;428:198:::0;238:984;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:227::-;1869:34;1865:1;1857:6;1853:14;1846:58;1938:10;1933:2;1925:6;1921:15;1914:35;1729:227;:::o;1962:366::-;2104:3;2125:67;2189:2;2184:3;2125:67;:::i;:::-;2118:74;;2201:93;2290:3;2201:93;:::i;:::-;2319:2;2314:3;2310:12;2303:19;;1962:366;;;:::o;2334:419::-;2500:4;2538:2;2527:9;2523:18;2515:26;;2587:9;2581:4;2577:20;2573:1;2562:9;2558:17;2551:47;2615:131;2741:4;2615:131;:::i;:::-;2607:139;;2334:419;;;:::o;238:984:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1301,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 1717,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 1513,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 1436,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1522,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_416": {
									"entryPoint": 496,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nutzToken_332": {
									"entryPoint": 1264,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1086,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1067,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTokenAddress_440": {
									"entryPoint": 311,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalBurned_334": {
									"entryPoint": 1126,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1132,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 2094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9571:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:5"
															},
															"nodeType": "YulIf",
															"src": "1312:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:5",
														"type": ""
													}
												],
												"src": "1259:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:5",
														"type": ""
													}
												],
												"src": "1387:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:32:5"
															},
															"nodeType": "YulIf",
															"src": "1608:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1737:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1579:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:5",
														"type": ""
													}
												],
												"src": "1532:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1920:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1927:3:5",
														"type": ""
													}
												],
												"src": "1867:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:5",
														"type": ""
													}
												],
												"src": "1991:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:5",
														"type": ""
													}
												],
												"src": "2219:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2441:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2451:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2413:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2425:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2436:4:5",
														"type": ""
													}
												],
												"src": "2343:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2613:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2620:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2589:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2599:3:5",
														"type": ""
													}
												],
												"src": "2571:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2697:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2707:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2765:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2747:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2747:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2738:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2720:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2707:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2677:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2687:9:5",
														"type": ""
													}
												],
												"src": "2637:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2845:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2855:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2868:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2855:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2825:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2835:9:5",
														"type": ""
													}
												],
												"src": "2785:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2991:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3001:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3045:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3014:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3001:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2971:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2981:9:5",
														"type": ""
													}
												],
												"src": "2917:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3209:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3164:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3130:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3137:3:5",
														"type": ""
													}
												],
												"src": "3063:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3350:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3362:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3373:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3358:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3350:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3386:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3386:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3312:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3324:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3335:4:5",
														"type": ""
													}
												],
												"src": "3228:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3580:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3597:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3590:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3637:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3618:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3552:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3557:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3568:11:5",
														"type": ""
													}
												],
												"src": "3484:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3765:121:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3795:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3783:14:5"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3799:34:5",
																		"type": "",
																		"value": "Token address cannot be the zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3855:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3863:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3851:15:5"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3868:10:5",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3844:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3757:6:5",
														"type": ""
													}
												],
												"src": "3659:227:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4038:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4048:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4114:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4119:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4055:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4048:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4220:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																	"nodeType": "YulIdentifier",
																	"src": "4131:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4131:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4233:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4244:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4249:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4233:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4026:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4034:3:5",
														"type": ""
													}
												],
												"src": "3892:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4435:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4445:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4457:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4453:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4445:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4492:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4503:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4488:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4511:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4517:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4481:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4537:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4671:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4545:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4537:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4415:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4430:4:5",
														"type": ""
													}
												],
												"src": "4264:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4795:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4817:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4825:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:14:5"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4829:31:5",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4787:6:5",
														"type": ""
													}
												],
												"src": "4689:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5020:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5030:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5096:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5037:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5030:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5202:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "5113:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5113:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5226:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5231:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5222:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5008:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5016:3:5",
														"type": ""
													}
												],
												"src": "4874:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5417:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5427:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5439:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5450:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5435:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5427:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5474:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5485:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5470:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5493:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5499:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5489:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5463:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5519:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5653:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5527:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5519:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5397:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5412:4:5",
														"type": ""
													}
												],
												"src": "5246:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5734:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5744:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5759:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5753:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5744:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5802:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5775:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5775:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5775:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5712:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5720:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5728:5:5",
														"type": ""
													}
												],
												"src": "5671:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5897:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5943:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5945:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5945:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5945:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5914:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:32:5"
															},
															"nodeType": "YulIf",
															"src": "5907:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6036:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6051:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6055:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6080:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6126:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6137:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6122:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6122:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6146:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6090:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6090:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6080:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5867:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5878:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5890:6:5",
														"type": ""
													}
												],
												"src": "5820:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6305:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6313:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6301:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e7320746f206275726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6317:29:5",
																		"type": "",
																		"value": "Insufficient tokens to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6294:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6275:6:5",
														"type": ""
													}
												],
												"src": "6177:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6506:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6516:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6523:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6688:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd",
																	"nodeType": "YulIdentifier",
																	"src": "6599:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6599:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6599:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6701:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6712:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6717:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6708:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6701:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6494:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6502:3:5",
														"type": ""
													}
												],
												"src": "6360:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6903:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6913:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6925:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6936:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6921:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6921:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6913:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6960:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6971:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6956:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6979:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6975:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6975:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6949:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7005:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7139:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7013:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7005:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6883:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6898:4:5",
														"type": ""
													}
												],
												"src": "6732:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7283:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7293:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7305:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7316:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7293:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7373:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7386:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7397:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7382:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7329:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7329:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7454:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7467:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7478:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7463:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7410:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7410:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7410:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7247:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7259:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7267:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7278:4:5",
														"type": ""
													}
												],
												"src": "7157:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7537:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7547:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7572:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7565:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7565:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7558:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7547:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7519:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7529:7:5",
														"type": ""
													}
												],
												"src": "7495:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7631:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7685:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7694:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7697:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7687:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7687:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7687:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7654:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7676:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7661:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7661:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7651:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7644:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:40:5"
															},
															"nodeType": "YulIf",
															"src": "7641:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7624:5:5",
														"type": ""
													}
												],
												"src": "7591:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7773:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7783:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7798:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7792:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7783:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7838:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7814:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7814:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7751:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7759:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7767:5:5",
														"type": ""
													}
												],
												"src": "7713:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7930:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7976:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7978:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7978:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7978:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7951:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7960:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7947:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7947:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7972:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7943:32:5"
															},
															"nodeType": "YulIf",
															"src": "7940:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "8069:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8084:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8098:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8088:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8113:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8156:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8167:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8152:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8152:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8176:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8123:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8123:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8113:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7900:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7911:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7923:6:5",
														"type": ""
													}
												],
												"src": "7856:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8235:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8252:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8255:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8245:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8245:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8245:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8349:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8342:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8373:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8376:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8366:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8366:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8207:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8437:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8447:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8470:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8452:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8447:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8504:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8486:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8486:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8481:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8515:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8526:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8529:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8522:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8515:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8555:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8557:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8557:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8557:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8547:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8550:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8544:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:10:5"
															},
															"nodeType": "YulIf",
															"src": "8541:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8424:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8427:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8433:3:5",
														"type": ""
													}
												],
												"src": "8393:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8696:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8718:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8726:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8714:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8714:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8730:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8688:6:5",
														"type": ""
													}
												],
												"src": "8590:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8923:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8933:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9004:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8940:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8940:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8933:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9105:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "9016:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9016:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9016:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9118:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9129:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9125:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9118:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8911:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8919:3:5",
														"type": ""
													}
												],
												"src": "8777:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9320:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9330:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9342:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9353:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9338:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9338:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9330:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9377:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9388:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9373:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9373:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9396:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9402:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9392:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9392:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9366:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9366:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9422:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9556:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9430:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9430:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9422:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9300:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9315:4:5",
														"type": ""
													}
												],
												"src": "9149:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be the zero\")\n\n        mstore(add(memPtr, 32), \" address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient tokens to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638da5cb5b116100595780638da5cb5b146100c1578063d89135cd146100df578063f2fde38b146100fd578063f5cd0264146101195761007b565b806326a4e8d21461007f57806342966c681461009b578063715018a6146100b7575b5f80fd5b6100996004803603810190610094919061071a565b610137565b005b6100b560048036038101906100b09190610778565b6101f0565b005b6100bf61042b565b005b6100c961043e565b6040516100d691906107b2565b60405180910390f35b6100e7610466565b6040516100f491906107da565b60405180910390f35b6101176004803603810190610112919061071a565b61046c565b005b6101216104f0565b60405161012e919061084e565b60405180910390f35b61013f610515565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a4906108e7565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6101f8610515565b61020061059c565b5f8111610242576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102399061094f565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161029c91906107b2565b602060405180830381865afa1580156102b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102db9190610981565b81111561031d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610314906109f6565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f836040518363ffffffff1660e01b8152600401610379929190610a14565b6020604051808303815f875af1158015610395573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b99190610a70565b508060035f8282546103cb9190610ac8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb68260405161041891906107da565b60405180910390a26104286105e9565b50565b610433610515565b61043c5f6105f2565b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610474610515565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104e4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104db91906107b2565b60405180910390fd5b6104ed816105f2565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61051d6106b5565b73ffffffffffffffffffffffffffffffffffffffff1661053b61043e565b73ffffffffffffffffffffffffffffffffffffffff161461059a5761055e6106b5565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161059191906107b2565b60405180910390fd5b565b60025f54036105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790610b45565b60405180910390fd5b60025f81905550565b60015f81905550565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106e9826106c0565b9050919050565b6106f9816106df565b8114610703575f80fd5b50565b5f81359050610714816106f0565b92915050565b5f6020828403121561072f5761072e6106bc565b5b5f61073c84828501610706565b91505092915050565b5f819050919050565b61075781610745565b8114610761575f80fd5b50565b5f813590506107728161074e565b92915050565b5f6020828403121561078d5761078c6106bc565b5b5f61079a84828501610764565b91505092915050565b6107ac816106df565b82525050565b5f6020820190506107c55f8301846107a3565b92915050565b6107d481610745565b82525050565b5f6020820190506107ed5f8301846107cb565b92915050565b5f819050919050565b5f61081661081161080c846106c0565b6107f3565b6106c0565b9050919050565b5f610827826107fc565b9050919050565b5f6108388261081d565b9050919050565b6108488161082e565b82525050565b5f6020820190506108615f83018461083f565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f5f8201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b5f6108d1602883610867565b91506108dc82610877565b604082019050919050565b5f6020820190508181035f8301526108fe816108c5565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610939601d83610867565b915061094482610905565b602082019050919050565b5f6020820190508181035f8301526109668161092d565b9050919050565b5f8151905061097b8161074e565b92915050565b5f60208284031215610996576109956106bc565b5b5f6109a38482850161096d565b91505092915050565b7f496e73756666696369656e7420746f6b656e7320746f206275726e00000000005f82015250565b5f6109e0601b83610867565b91506109eb826109ac565b602082019050919050565b5f6020820190508181035f830152610a0d816109d4565b9050919050565b5f604082019050610a275f8301856107a3565b610a3460208301846107cb565b9392505050565b5f8115159050919050565b610a4f81610a3b565b8114610a59575f80fd5b50565b5f81519050610a6a81610a46565b92915050565b5f60208284031215610a8557610a846106bc565b5b5f610a9284828501610a5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ad282610745565b9150610add83610745565b9250828201905080821115610af557610af4610a9b565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610b2f601f83610867565b9150610b3a82610afb565b602082019050919050565b5f6020820190508181035f830152610b5c81610b23565b905091905056fea2646970667358221220b7556b7dc1cfbe3bc7a512ff40ee1450ff8186890804379228660b43b9ca21fb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xF5CD0264 EQ PUSH2 0x119 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x26A4E8D2 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH2 0x42B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x515 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4 SWAP1 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x59C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x239 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x379 SWAP3 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x428 PUSH2 0x5E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x433 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x43C PUSH0 PUSH2 0x5F2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x474 PUSH2 0x515 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x5F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x51D PUSH2 0x6B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x53B PUSH2 0x43E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59A JUMPI PUSH2 0x55E PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6E9 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F9 DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP2 EQ PUSH2 0x703 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x714 DUP2 PUSH2 0x6F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH2 0x72E PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x73C DUP5 DUP3 DUP6 ADD PUSH2 0x706 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x757 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP2 EQ PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x772 DUP2 PUSH2 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79A DUP5 DUP3 DUP6 ADD PUSH2 0x764 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AC DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x7A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7ED PUSH0 DUP4 ADD DUP5 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x816 PUSH2 0x811 PUSH2 0x80C DUP5 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x827 DUP3 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x838 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x848 DUP2 PUSH2 0x82E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x861 PUSH0 DUP4 ADD DUP5 PUSH2 0x83F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x2061646472657373000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8D1 PUSH1 0x28 DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DC DUP3 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8FE DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x939 PUSH1 0x1D DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0x944 DUP3 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x966 DUP2 PUSH2 0x92D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x97B DUP2 PUSH2 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A3 DUP5 DUP3 DUP6 ADD PUSH2 0x96D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E7320746F206275726E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9E0 PUSH1 0x1B DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0x9EB DUP3 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA0D DUP2 PUSH2 0x9D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA27 PUSH0 DUP4 ADD DUP6 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0xA34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0xA3B JUMP JUMPDEST DUP2 EQ PUSH2 0xA59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA6A DUP2 PUSH2 0xA46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA92 DUP5 DUP3 DUP6 ADD PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAD2 DUP3 PUSH2 0x745 JUMP JUMPDEST SWAP2 POP PUSH2 0xADD DUP4 PUSH2 0x745 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAF5 JUMPI PUSH2 0xAF4 PUSH2 0xA9B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB2F PUSH1 0x1F DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3A DUP3 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB5C DUP2 PUSH2 0xB23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SSTORE PUSH12 0x7DC1CFBE3BC7A512FF40EE14 POP SELFDESTRUCT DUP2 DUP7 DUP10 ADDMOD DIV CALLDATACOPY SWAP3 0x28 PUSH7 0xB43B9CA21FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "238:984:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;634:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;326:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;296:23:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1009:210;1531:13:0;:11;:13::i;:::-;1120:1:4::1;1095:27;;:13;:27;;::::0;1087:80:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:13;1178:9;;:33;;;;;;;;;;;;;;;;;;1009:210:::0;:::o;634:367::-;1531:13:0;:11;:13::i;:::-;2261:21:1::1;:19;:21::i;:::-;726:1:4::2;716:7;:11;708:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;791:9;;;;;;;;;;;:19;;;819:4;791:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;780:7;:45;;772:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;870:9;;;;;;;;;;;:18;;;897:1;901:7;870:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;935:7;920:11;;:22;;;;;;;:::i;:::-;;;;;;;;973:10;960:33;;;985:7;960:33;;;;;;:::i;:::-;;;;;;;;2303:20:1::1;:18;:20::i;:::-;634:367:4::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;326:26:4:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;296:23:4:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:60::-;2599:3;2620:5;2613:12;;2571:60;;;:::o;2637:142::-;2687:9;2720:53;2738:34;2747:24;2765:5;2747:24;:::i;:::-;2738:34;:::i;:::-;2720:53;:::i;:::-;2707:66;;2637:142;;;:::o;2785:126::-;2835:9;2868:37;2899:5;2868:37;:::i;:::-;2855:50;;2785:126;;;:::o;2917:140::-;2981:9;3014:37;3045:5;3014:37;:::i;:::-;3001:50;;2917:140;;;:::o;3063:159::-;3164:51;3209:5;3164:51;:::i;:::-;3159:3;3152:64;3063:159;;:::o;3228:250::-;3335:4;3373:2;3362:9;3358:18;3350:26;;3386:85;3468:1;3457:9;3453:17;3444:6;3386:85;:::i;:::-;3228:250;;;;:::o;3484:169::-;3568:11;3602:6;3597:3;3590:19;3642:4;3637:3;3633:14;3618:29;;3484:169;;;;:::o;3659:227::-;3799:34;3795:1;3787:6;3783:14;3776:58;3868:10;3863:2;3855:6;3851:15;3844:35;3659:227;:::o;3892:366::-;4034:3;4055:67;4119:2;4114:3;4055:67;:::i;:::-;4048:74;;4131:93;4220:3;4131:93;:::i;:::-;4249:2;4244:3;4240:12;4233:19;;3892:366;;;:::o;4264:419::-;4430:4;4468:2;4457:9;4453:18;4445:26;;4517:9;4511:4;4507:20;4503:1;4492:9;4488:17;4481:47;4545:131;4671:4;4545:131;:::i;:::-;4537:139;;4264:419;;;:::o;4689:179::-;4829:31;4825:1;4817:6;4813:14;4806:55;4689:179;:::o;4874:366::-;5016:3;5037:67;5101:2;5096:3;5037:67;:::i;:::-;5030:74;;5113:93;5202:3;5113:93;:::i;:::-;5231:2;5226:3;5222:12;5215:19;;4874:366;;;:::o;5246:419::-;5412:4;5450:2;5439:9;5435:18;5427:26;;5499:9;5493:4;5489:20;5485:1;5474:9;5470:17;5463:47;5527:131;5653:4;5527:131;:::i;:::-;5519:139;;5246:419;;;:::o;5671:143::-;5728:5;5759:6;5753:13;5744:22;;5775:33;5802:5;5775:33;:::i;:::-;5671:143;;;;:::o;5820:351::-;5890:6;5939:2;5927:9;5918:7;5914:23;5910:32;5907:119;;;5945:79;;:::i;:::-;5907:119;6065:1;6090:64;6146:7;6137:6;6126:9;6122:22;6090:64;:::i;:::-;6080:74;;6036:128;5820:351;;;;:::o;6177:177::-;6317:29;6313:1;6305:6;6301:14;6294:53;6177:177;:::o;6360:366::-;6502:3;6523:67;6587:2;6582:3;6523:67;:::i;:::-;6516:74;;6599:93;6688:3;6599:93;:::i;:::-;6717:2;6712:3;6708:12;6701:19;;6360:366;;;:::o;6732:419::-;6898:4;6936:2;6925:9;6921:18;6913:26;;6985:9;6979:4;6975:20;6971:1;6960:9;6956:17;6949:47;7013:131;7139:4;7013:131;:::i;:::-;7005:139;;6732:419;;;:::o;7157:332::-;7278:4;7316:2;7305:9;7301:18;7293:26;;7329:71;7397:1;7386:9;7382:17;7373:6;7329:71;:::i;:::-;7410:72;7478:2;7467:9;7463:18;7454:6;7410:72;:::i;:::-;7157:332;;;;;:::o;7495:90::-;7529:7;7572:5;7565:13;7558:21;7547:32;;7495:90;;;:::o;7591:116::-;7661:21;7676:5;7661:21;:::i;:::-;7654:5;7651:32;7641:60;;7697:1;7694;7687:12;7641:60;7591:116;:::o;7713:137::-;7767:5;7798:6;7792:13;7783:22;;7814:30;7838:5;7814:30;:::i;:::-;7713:137;;;;:::o;7856:345::-;7923:6;7972:2;7960:9;7951:7;7947:23;7943:32;7940:119;;;7978:79;;:::i;:::-;7940:119;8098:1;8123:61;8176:7;8167:6;8156:9;8152:22;8123:61;:::i;:::-;8113:71;;8069:125;7856:345;;;;:::o;8207:180::-;8255:77;8252:1;8245:88;8352:4;8349:1;8342:15;8376:4;8373:1;8366:15;8393:191;8433:3;8452:20;8470:1;8452:20;:::i;:::-;8447:25;;8486:20;8504:1;8486:20;:::i;:::-;8481:25;;8529:1;8526;8522:9;8515:16;;8550:3;8547:1;8544:10;8541:36;;;8557:18;;:::i;:::-;8541:36;8393:191;;;;:::o;8590:181::-;8730:33;8726:1;8718:6;8714:14;8707:57;8590:181;:::o;8777:366::-;8919:3;8940:67;9004:2;8999:3;8940:67;:::i;:::-;8933:74;;9016:93;9105:3;9016:93;:::i;:::-;9134:2;9129:3;9125:12;9118:19;;8777:366;;;:::o;9149:419::-;9315:4;9353:2;9342:9;9338:18;9330:26;;9402:9;9396:4;9392:20;9388:1;9377:9;9373:17;9366:47;9430:131;9556:4;9430:131;:::i;:::-;9422:139;;9149:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "593800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burn(uint256)": "infinite",
								"nutzToken()": "infinite",
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"setTokenAddress(address)": "infinite",
								"totalBurned()": "2447",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 428,
									"end": 626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 428,
									"end": 626,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 471,
									"end": 481,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 527,
									"end": 528,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 529,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 502,
									"end": 529,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 502,
									"end": 529,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 502,
									"end": 529,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 502,
									"end": 529,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 494,
									"end": 574,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 494,
									"end": 574,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 604,
									"end": 617,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 585,
									"end": 594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 585,
									"end": 594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 585,
									"end": 618,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 428,
									"end": 626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1956,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1729,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1869,
									"end": 1903,
									"name": "PUSH",
									"source": 5,
									"value": "546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1904,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1948,
									"name": "PUSH",
									"source": 5,
									"value": "2061646472657373000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1933,
									"end": 1935,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1925,
									"end": 1931,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1921,
									"end": 1936,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1914,
									"end": 1949,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1956,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1956,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 2328,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1962,
									"end": 2328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2104,
									"end": 2107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2125,
									"end": 2192,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 2189,
									"end": 2191,
									"name": "PUSH",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2184,
									"end": 2187,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2192,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2125,
									"end": 2192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2192,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 2125,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2118,
									"end": 2192,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2118,
									"end": 2192,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2201,
									"end": 2294,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2290,
									"end": 2293,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2201,
									"end": 2294,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 2201,
									"end": 2294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2201,
									"end": 2294,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2201,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2319,
									"end": 2321,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2314,
									"end": 2317,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2310,
									"end": 2322,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2303,
									"end": 2322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2303,
									"end": 2322,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 2328,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 2328,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 2328,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 2328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2753,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2334,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2500,
									"end": 2504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2538,
									"end": 2540,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2527,
									"end": 2536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2523,
									"end": 2541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2515,
									"end": 2541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2515,
									"end": 2541,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2587,
									"end": 2596,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2581,
									"end": 2585,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2577,
									"end": 2597,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2573,
									"end": 2574,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2562,
									"end": 2571,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2558,
									"end": 2575,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2551,
									"end": 2598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2615,
									"end": 2746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2741,
									"end": 2745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2615,
									"end": 2746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2615,
									"end": 2746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2615,
									"end": 2746,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2615,
									"end": 2746,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2607,
									"end": 2746,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2607,
									"end": 2746,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2753,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2753,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2753,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2753,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 1222,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7556b7dc1cfbe3bc7a512ff40ee1450ff8186890804379228660b43b9ca21fb64736f6c63430008140033",
									".code": [
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "D89135CD"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "F5CD0264"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "26A4E8D2"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 1222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1009,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1009,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 634,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 634,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 326,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 326,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 319,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 296,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 296,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1122,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1087,
											"end": 1167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1178,
											"end": 1187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 723,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 716,
											"end": 727,
											"modifierDepth": 2,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 708,
											"end": 761,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 708,
											"end": 761,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 800,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 791,
											"end": 810,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 791,
											"end": 810,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 819,
											"end": 823,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 791,
											"end": 825,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 791,
											"end": 825,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 791,
											"end": 825,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 780,
											"end": 787,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 780,
											"end": 825,
											"modifierDepth": 2,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 780,
											"end": 825,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 772,
											"end": 857,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 772,
											"end": 857,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 879,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 888,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 897,
											"end": 898,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 908,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 870,
											"end": 909,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 909,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 870,
											"end": 909,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 909,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 942,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 920,
											"end": 931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 920,
											"end": 931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 920,
											"end": 942,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 920,
											"end": 942,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 973,
											"end": 983,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6"
										},
										{
											"begin": 985,
											"end": 992,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 960,
											"end": 993,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 960,
											"end": 993,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 1001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 326,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 319,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1954,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2765,
											"end": 2770,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2747,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2738,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2720,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2868,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3045,
											"end": 3050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3014,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3164,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3386,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3633,
											"end": 3647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3886,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3659,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3799,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E20616464726573732063616E6E6F7420626520746865207A65726F"
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3776,
											"end": 3834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3878,
											"name": "PUSH",
											"source": 5,
											"value": "2061646472657373000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3879,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4258,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3892,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4055,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4055,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4122,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4220,
											"end": 4223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4131,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4224,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4131,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4252,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4683,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4264,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4528,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4671,
											"end": 4675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4545,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4676,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4545,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4868,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4689,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 5240,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4874,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5101,
											"end": 5103,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5037,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5104,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5037,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5202,
											"end": 5205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5113,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5206,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5113,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5226,
											"end": 5229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 5240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 5240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 5240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 5240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5509,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5483,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5510,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5527,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5814,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5671,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5766,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5775,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5808,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5775,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5814,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 6171,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5820,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5936,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5925,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5945,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6146,
											"end": 6153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6135,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6090,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6090,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6090,
											"end": 6154,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6090,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6080,
											"end": 6154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6080,
											"end": 6154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 6171,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 6171,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 6171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 6171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 6171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6354,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6177,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6346,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E7420746F6B656E7320746F206275726E0000000000"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6726,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6360,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 6582,
											"end": 6585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6523,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6590,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6523,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6688,
											"end": 6691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6599,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6692,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6599,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6712,
											"end": 6715,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6701,
											"end": 6720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6701,
											"end": 6720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6726,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 7151,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6732,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6898,
											"end": 6902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 6994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6975,
											"end": 6995,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 6972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6996,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7013,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7144,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7013,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 7151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 7151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 7151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 7151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7319,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7382,
											"end": 7399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7329,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7400,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7329,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7478,
											"end": 7480,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 7410,
											"end": 7482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7482,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7410,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7585,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7495,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7565,
											"end": 7578,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7558,
											"end": 7579,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 7707,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7591,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7676,
											"end": 7681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7661,
											"end": 7682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7682,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7661,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7641,
											"end": 7701,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7699,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7701,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7641,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 7707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7850,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7713,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7792,
											"end": 7805,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 7805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 7805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7838,
											"end": 7843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7814,
											"end": 7844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7844,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7814,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7850,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 8201,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7856,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7923,
											"end": 7929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7974,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 7969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 7958,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7947,
											"end": 7970,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7943,
											"end": 7975,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8059,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7940,
											"end": 8059,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7978,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7978,
											"end": 8057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 8057,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7978,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8059,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7940,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8176,
											"end": 8183,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8156,
											"end": 8165,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8123,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8184,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8123,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 8201,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 8201,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 8201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 8201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 8201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8387,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 8207,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8255,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8342,
											"end": 8357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8376,
											"end": 8380,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8381,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8584,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 8393,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8433,
											"end": 8436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8452,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8470,
											"end": 8471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8452,
											"end": 8472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8472,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8452,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8447,
											"end": 8472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8447,
											"end": 8472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8504,
											"end": 8505,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8486,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8515,
											"end": 8531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8515,
											"end": 8531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8550,
											"end": 8553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8544,
											"end": 8554,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 8557,
											"end": 8575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8584,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8590,
											"end": 8771,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8590,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8730,
											"end": 8763,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8764,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8590,
											"end": 8771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8590,
											"end": 8771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 9143,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8777,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 8922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 9004,
											"end": 9006,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8999,
											"end": 9002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8940,
											"end": 9007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 9007,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8940,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8933,
											"end": 9007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8933,
											"end": 9007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 9016,
											"end": 9109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9109,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9016,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9125,
											"end": 9137,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 9143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 9143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 9143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 9143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9568,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 9149,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9355,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9330,
											"end": 9356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9330,
											"end": 9356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9412,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9388,
											"end": 9389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9373,
											"end": 9390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9430,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9430,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 9430,
											"end": 9561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9430,
											"end": 9561,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9430,
											"end": 9561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/BurnReservoir.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"nutzToken()": "f5cd0264",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setTokenAddress(address)": "26a4e8d2",
							"totalBurned()": "d89135cd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nutzToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BurnReservoir.sol\":\"BurnReservoir\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BurnReservoir.sol\":{\"keccak256\":\"0x9e7126c94fba357d6defc261c8fa7524ce141831d5c05e1f0eafa429af8dbef5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc144520fc12df77158169b9f3435e6b672331d6c4951a75b507f503112b0fec\",\"dweb:/ipfs/QmeHKZt5EiFtdD66UCHP2en3mCVN2x8hr4FoBYcZGGTYwA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "contracts/BurnReservoir.sol:BurnReservoir",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/BurnReservoir.sol:BurnReservoir",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 332,
								"contract": "contracts/BurnReservoir.sol:BurnReservoir",
								"label": "nutzToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 334,
								"contract": "contracts/BurnReservoir.sol:BurnReservoir",
								"label": "totalBurned",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 290,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 290,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 290,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 290,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 290,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 290,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"contracts/BurnReservoir.sol": {
				"ast": {
					"absolutePath": "contracts/BurnReservoir.sol",
					"exportedSymbols": {
						"BurnReservoir": [
							441
						],
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 442,
							"sourceUnit": 291,
							"src": "60:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 442,
							"sourceUnit": 213,
							"src": "118:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 442,
							"sourceUnit": 148,
							"src": "182:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"264:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "264:15:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "264:15:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "Ownable",
										"nameLocations": [
											"281:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "281:7:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "281:7:4"
								}
							],
							"canonicalName": "BurnReservoir",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 441,
							"linearizedBaseContracts": [
								441,
								147,
								320,
								212
							],
							"name": "BurnReservoir",
							"nameLocation": "247:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f5cd0264",
									"id": 332,
									"mutability": "mutable",
									"name": "nutzToken",
									"nameLocation": "310:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 441,
									"src": "296:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"296:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "296:6:4"
										},
										"referencedDeclaration": 290,
										"src": "296:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 334,
									"mutability": "mutable",
									"name": "totalBurned",
									"nameLocation": "341:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 441,
									"src": "326:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6",
									"id": 340,
									"name": "TokensBurned",
									"nameLocation": "367:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "396:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "380:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "412:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "404:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:40:4"
									},
									"src": "361:59:4"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "483:143:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "502:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "527:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "519:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 351,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "519:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "519:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "502:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "531:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																"typeString": "literal_string \"Token address cannot be the zero address\""
															},
															"value": "Token address cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																"typeString": "literal_string \"Token address cannot be the zero address\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "494:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "494:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "494:80:4"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "nutzToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "585:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 361,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "604:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 360,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "597:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "597:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "585:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "585:33:4"
											}
										]
									},
									"id": 366,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 345,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "471:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "475:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "471:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 347,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 344,
												"name": "Ownable",
												"nameLocations": [
													"463:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "463:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "463:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "448:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "440:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:23:4"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:4"
									},
									"scope": 441,
									"src": "428:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "697:304:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 376,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "716:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "726:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "716:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "729:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "708:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "708:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "708:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "780:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 388,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "819:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BurnReservoir_$441",
																					"typeString": "contract BurnReservoir"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BurnReservoir_$441",
																					"typeString": "contract BurnReservoir"
																				}
																			],
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "811:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 386,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "811:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "811:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 384,
																		"name": "nutzToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "791:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "801:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "791:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "791:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "780:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e7320746f206275726e",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd",
																"typeString": "literal_string \"Insufficient tokens to burn\""
															},
															"value": "Insufficient tokens to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f49efcb85e6b924f8ba2f84e6ea0835235fb629ce9fe0638718c724d84143fd",
																"typeString": "literal_string \"Insufficient tokens to burn\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "772:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "772:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "772:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "897:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "889:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "889:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "889:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "901:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 395,
															"name": "nutzToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "870:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "880:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "870:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "870:39:4"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "920:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 406,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "935:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "920:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "920:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 410,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "973:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "977:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "973:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "985:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "960:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "EmitStatement",
												"src": "955:38:4"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 370,
												"name": "onlyOwner",
												"nameLocations": [
													"674:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "674:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "674:9:4"
										},
										{
											"id": 373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 372,
												"name": "nonReentrant",
												"nameLocations": [
													"684:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "684:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "684:12:4"
										}
									],
									"name": "burn",
									"nameLocation": "643:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "656:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "648:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:17:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:0:4"
									},
									"scope": 441,
									"src": "634:367:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "1076:143:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1095:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1120:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1112:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 425,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1112:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1112:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1095:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1124:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																"typeString": "literal_string \"Token address cannot be the zero address\""
															},
															"value": "Token address cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8454a465381afb848ab008a61c0defefd50b3324e06b9371fad6b4e7b90a74d0",
																"typeString": "literal_string \"Token address cannot be the zero address\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1087:80:4"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "nutzToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 435,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1197:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 434,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1190:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1190:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1178:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1178:33:4"
											}
										]
									},
									"functionSelector": "26a4e8d2",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 420,
												"name": "onlyOwner",
												"nameLocations": [
													"1066:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1066:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1066:9:4"
										}
									],
									"name": "setTokenAddress",
									"nameLocation": "1018:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1042:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1034:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:23:4"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:4"
									},
									"scope": 441,
									"src": "1009:210:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 442,
							"src": "238:984:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								340
							]
						}
					],
					"src": "33:1191:4"
				},
				"id": 4
			}
		}
	}
}